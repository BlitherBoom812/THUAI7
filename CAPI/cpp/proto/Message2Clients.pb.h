// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message2Clients.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Message2Clients_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_Message2Clients_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>   // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "MessageType.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Message2Clients_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal
{
    class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_Message2Clients_2eproto
{
    static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Message2Clients_2eproto;
namespace protobuf
{
    class BoolRes;
    struct BoolResDefaultTypeInternal;
    extern BoolResDefaultTypeInternal _BoolRes_default_instance_;
    class MessageOfAll;
    struct MessageOfAllDefaultTypeInternal;
    extern MessageOfAllDefaultTypeInternal _MessageOfAll_default_instance_;
    class MessageOfBuilding;
    struct MessageOfBuildingDefaultTypeInternal;
    extern MessageOfBuildingDefaultTypeInternal _MessageOfBuilding_default_instance_;
    class MessageOfBullet;
    struct MessageOfBulletDefaultTypeInternal;
    extern MessageOfBulletDefaultTypeInternal _MessageOfBullet_default_instance_;
    class MessageOfHome;
    struct MessageOfHomeDefaultTypeInternal;
    extern MessageOfHomeDefaultTypeInternal _MessageOfHome_default_instance_;
    class MessageOfMap;
    struct MessageOfMapDefaultTypeInternal;
    extern MessageOfMapDefaultTypeInternal _MessageOfMap_default_instance_;
    class MessageOfMap_Row;
    struct MessageOfMap_RowDefaultTypeInternal;
    extern MessageOfMap_RowDefaultTypeInternal _MessageOfMap_Row_default_instance_;
    class MessageOfObj;
    struct MessageOfObjDefaultTypeInternal;
    extern MessageOfObjDefaultTypeInternal _MessageOfObj_default_instance_;
    class MessageOfResource;
    struct MessageOfResourceDefaultTypeInternal;
    extern MessageOfResourceDefaultTypeInternal _MessageOfResource_default_instance_;
    class MessageOfShip;
    struct MessageOfShipDefaultTypeInternal;
    extern MessageOfShipDefaultTypeInternal _MessageOfShip_default_instance_;
    class MessageToClient;
    struct MessageToClientDefaultTypeInternal;
    extern MessageToClientDefaultTypeInternal _MessageToClient_default_instance_;
    class MoveRes;
    struct MoveResDefaultTypeInternal;
    extern MoveResDefaultTypeInternal _MoveRes_default_instance_;
}  // namespace protobuf
PROTOBUF_NAMESPACE_OPEN
template<>
::protobuf::BoolRes* Arena::CreateMaybeMessage<::protobuf::BoolRes>(Arena*);
template<>
::protobuf::MessageOfAll* Arena::CreateMaybeMessage<::protobuf::MessageOfAll>(Arena*);
template<>
::protobuf::MessageOfBuilding* Arena::CreateMaybeMessage<::protobuf::MessageOfBuilding>(Arena*);
template<>
::protobuf::MessageOfBullet* Arena::CreateMaybeMessage<::protobuf::MessageOfBullet>(Arena*);
template<>
::protobuf::MessageOfHome* Arena::CreateMaybeMessage<::protobuf::MessageOfHome>(Arena*);
template<>
::protobuf::MessageOfMap* Arena::CreateMaybeMessage<::protobuf::MessageOfMap>(Arena*);
template<>
::protobuf::MessageOfMap_Row* Arena::CreateMaybeMessage<::protobuf::MessageOfMap_Row>(Arena*);
template<>
::protobuf::MessageOfObj* Arena::CreateMaybeMessage<::protobuf::MessageOfObj>(Arena*);
template<>
::protobuf::MessageOfResource* Arena::CreateMaybeMessage<::protobuf::MessageOfResource>(Arena*);
template<>
::protobuf::MessageOfShip* Arena::CreateMaybeMessage<::protobuf::MessageOfShip>(Arena*);
template<>
::protobuf::MessageToClient* Arena::CreateMaybeMessage<::protobuf::MessageToClient>(Arena*);
template<>
::protobuf::MoveRes* Arena::CreateMaybeMessage<::protobuf::MoveRes>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace protobuf
{

    // ===================================================================

    class MessageOfShip final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfShip) */
    {
    public:
        inline MessageOfShip() :
            MessageOfShip(nullptr)
        {
        }
        ~MessageOfShip() override;
        explicit PROTOBUF_CONSTEXPR MessageOfShip(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageOfShip(const MessageOfShip& from);
        MessageOfShip(MessageOfShip&& from) noexcept
            :
            MessageOfShip()
        {
            *this = ::std::move(from);
        }

        inline MessageOfShip& operator=(const MessageOfShip& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageOfShip& operator=(MessageOfShip&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageOfShip& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MessageOfShip* internal_default_instance()
        {
            return reinterpret_cast<const MessageOfShip*>(
                &_MessageOfShip_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            0;

        friend void swap(MessageOfShip& a, MessageOfShip& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageOfShip* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageOfShip* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageOfShip* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageOfShip>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageOfShip& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageOfShip& from);

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _cached_size_.Get();
        }

    private:
        void SharedCtor();
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageOfShip* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageOfShip";
        }

    protected:
        explicit MessageOfShip(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kXFieldNumber = 1,
            kYFieldNumber = 2,
            kSpeedFieldNumber = 3,
            kHpFieldNumber = 4,
            kArmorFieldNumber = 5,
            kShieldFieldNumber = 6,
            kPlaceFieldNumber = 7,
            kShipStateFieldNumber = 8,
            kShipIdFieldNumber = 10,
            kTeamFieldNumber = 9,
            kRecoverSpeedFieldNumber = 11,
            kEconomyFieldNumber = 12,
            kCollectorTypeFieldNumber = 13,
            kArmorTypeFieldNumber = 14,
            kShieldTypeFieldNumber = 15,
            kBuilderTypeFieldNumber = 16,
            kBulletTypeFieldNumber = 17,
            kFacingDirectionFieldNumber = 19,
            kShipTypeFieldNumber = 18,
        };
        // int32 x = 1;
        void clear_x();
        int32_t x() const;
        void set_x(int32_t value);

    private:
        int32_t _internal_x() const;
        void _internal_set_x(int32_t value);

    public:
        // int32 y = 2;
        void clear_y();
        int32_t y() const;
        void set_y(int32_t value);

    private:
        int32_t _internal_y() const;
        void _internal_set_y(int32_t value);

    public:
        // int32 speed = 3;
        void clear_speed();
        int32_t speed() const;
        void set_speed(int32_t value);

    private:
        int32_t _internal_speed() const;
        void _internal_set_speed(int32_t value);

    public:
        // int32 hp = 4;
        void clear_hp();
        int32_t hp() const;
        void set_hp(int32_t value);

    private:
        int32_t _internal_hp() const;
        void _internal_set_hp(int32_t value);

    public:
        // int32 armor = 5;
        void clear_armor();
        int32_t armor() const;
        void set_armor(int32_t value);

    private:
        int32_t _internal_armor() const;
        void _internal_set_armor(int32_t value);

    public:
        // int32 shield = 6;
        void clear_shield();
        int32_t shield() const;
        void set_shield(int32_t value);

    private:
        int32_t _internal_shield() const;
        void _internal_set_shield(int32_t value);

    public:
        // .protobuf.PlaceType place = 7;
        void clear_place();
        ::protobuf::PlaceType place() const;
        void set_place(::protobuf::PlaceType value);

    private:
        ::protobuf::PlaceType _internal_place() const;
        void _internal_set_place(::protobuf::PlaceType value);

    public:
        // .protobuf.ShipState ship_state = 8;
        void clear_ship_state();
        ::protobuf::ShipState ship_state() const;
        void set_ship_state(::protobuf::ShipState value);

    private:
        ::protobuf::ShipState _internal_ship_state() const;
        void _internal_set_ship_state(::protobuf::ShipState value);

    public:
        // int64 ship_id = 10;
        void clear_ship_id();
        int64_t ship_id() const;
        void set_ship_id(int64_t value);

    private:
        int64_t _internal_ship_id() const;
        void _internal_set_ship_id(int64_t value);

    public:
        // .protobuf.PlayerTeam team = 9;
        void clear_team();
        ::protobuf::PlayerTeam team() const;
        void set_team(::protobuf::PlayerTeam value);

    private:
        ::protobuf::PlayerTeam _internal_team() const;
        void _internal_set_team(::protobuf::PlayerTeam value);

    public:
        // int32 Recover_speed = 11;
        void clear_recover_speed();
        int32_t recover_speed() const;
        void set_recover_speed(int32_t value);

    private:
        int32_t _internal_recover_speed() const;
        void _internal_set_recover_speed(int32_t value);

    public:
        // int32 economy = 12;
        void clear_economy();
        int32_t economy() const;
        void set_economy(int32_t value);

    private:
        int32_t _internal_economy() const;
        void _internal_set_economy(int32_t value);

    public:
        // .protobuf.CollectorType collector_type = 13;
        void clear_collector_type();
        ::protobuf::CollectorType collector_type() const;
        void set_collector_type(::protobuf::CollectorType value);

    private:
        ::protobuf::CollectorType _internal_collector_type() const;
        void _internal_set_collector_type(::protobuf::CollectorType value);

    public:
        // .protobuf.ArmorType armor_type = 14;
        void clear_armor_type();
        ::protobuf::ArmorType armor_type() const;
        void set_armor_type(::protobuf::ArmorType value);

    private:
        ::protobuf::ArmorType _internal_armor_type() const;
        void _internal_set_armor_type(::protobuf::ArmorType value);

    public:
        // .protobuf.ShieldType shield_type = 15;
        void clear_shield_type();
        ::protobuf::ShieldType shield_type() const;
        void set_shield_type(::protobuf::ShieldType value);

    private:
        ::protobuf::ShieldType _internal_shield_type() const;
        void _internal_set_shield_type(::protobuf::ShieldType value);

    public:
        // .protobuf.BuilderType builder_type = 16;
        void clear_builder_type();
        ::protobuf::BuilderType builder_type() const;
        void set_builder_type(::protobuf::BuilderType value);

    private:
        ::protobuf::BuilderType _internal_builder_type() const;
        void _internal_set_builder_type(::protobuf::BuilderType value);

    public:
        // .protobuf.BulletType bullet_type = 17;
        void clear_bullet_type();
        ::protobuf::BulletType bullet_type() const;
        void set_bullet_type(::protobuf::BulletType value);

    private:
        ::protobuf::BulletType _internal_bullet_type() const;
        void _internal_set_bullet_type(::protobuf::BulletType value);

    public:
        // double facing_direction = 19;
        void clear_facing_direction();
        double facing_direction() const;
        void set_facing_direction(double value);

    private:
        double _internal_facing_direction() const;
        void _internal_set_facing_direction(double value);

    public:
        // .protobuf.ShipType ship_type = 18;
        void clear_ship_type();
        ::protobuf::ShipType ship_type() const;
        void set_ship_type(::protobuf::ShipType value);

    private:
        ::protobuf::ShipType _internal_ship_type() const;
        void _internal_set_ship_type(::protobuf::ShipType value);

    public:
        // @@protoc_insertion_point(class_scope:protobuf.MessageOfShip)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        int32_t x_;
        int32_t y_;
        int32_t speed_;
        int32_t hp_;
        int32_t armor_;
        int32_t shield_;
        int place_;
        int ship_state_;
        int64_t ship_id_;
        int team_;
        int32_t recover_speed_;
        int32_t economy_;
        int collector_type_;
        int armor_type_;
        int shield_type_;
        int builder_type_;
        int bullet_type_;
        double facing_direction_;
        int ship_type_;
        mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MessageOfBuilding final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfBuilding) */
    {
    public:
        inline MessageOfBuilding() :
            MessageOfBuilding(nullptr)
        {
        }
        ~MessageOfBuilding() override;
        explicit PROTOBUF_CONSTEXPR MessageOfBuilding(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageOfBuilding(const MessageOfBuilding& from);
        MessageOfBuilding(MessageOfBuilding&& from) noexcept
            :
            MessageOfBuilding()
        {
            *this = ::std::move(from);
        }

        inline MessageOfBuilding& operator=(const MessageOfBuilding& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageOfBuilding& operator=(MessageOfBuilding&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageOfBuilding& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MessageOfBuilding* internal_default_instance()
        {
            return reinterpret_cast<const MessageOfBuilding*>(
                &_MessageOfBuilding_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            1;

        friend void swap(MessageOfBuilding& a, MessageOfBuilding& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageOfBuilding* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageOfBuilding* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageOfBuilding* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageOfBuilding>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageOfBuilding& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageOfBuilding& from);

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _cached_size_.Get();
        }

    private:
        void SharedCtor();
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageOfBuilding* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageOfBuilding";
        }

    protected:
        explicit MessageOfBuilding(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kXFieldNumber = 1,
            kYFieldNumber = 2,
            kHpFieldNumber = 3,
            kBuildingTypeFieldNumber = 4,
            kBuildingIdFieldNumber = 6,
            kTeamFieldNumber = 5,
        };
        // int32 x = 1;
        void clear_x();
        int32_t x() const;
        void set_x(int32_t value);

    private:
        int32_t _internal_x() const;
        void _internal_set_x(int32_t value);

    public:
        // int32 y = 2;
        void clear_y();
        int32_t y() const;
        void set_y(int32_t value);

    private:
        int32_t _internal_y() const;
        void _internal_set_y(int32_t value);

    public:
        // int32 hp = 3;
        void clear_hp();
        int32_t hp() const;
        void set_hp(int32_t value);

    private:
        int32_t _internal_hp() const;
        void _internal_set_hp(int32_t value);

    public:
        // .protobuf.BuildingType building_type = 4;
        void clear_building_type();
        ::protobuf::BuildingType building_type() const;
        void set_building_type(::protobuf::BuildingType value);

    private:
        ::protobuf::BuildingType _internal_building_type() const;
        void _internal_set_building_type(::protobuf::BuildingType value);

    public:
        // int64 building_id = 6;
        void clear_building_id();
        int64_t building_id() const;
        void set_building_id(int64_t value);

    private:
        int64_t _internal_building_id() const;
        void _internal_set_building_id(int64_t value);

    public:
        // .protobuf.PlayerTeam team = 5;
        void clear_team();
        ::protobuf::PlayerTeam team() const;
        void set_team(::protobuf::PlayerTeam value);

    private:
        ::protobuf::PlayerTeam _internal_team() const;
        void _internal_set_team(::protobuf::PlayerTeam value);

    public:
        // @@protoc_insertion_point(class_scope:protobuf.MessageOfBuilding)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        int32_t x_;
        int32_t y_;
        int32_t hp_;
        int building_type_;
        int64_t building_id_;
        int team_;
        mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MessageOfBullet final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfBullet) */
    {
    public:
        inline MessageOfBullet() :
            MessageOfBullet(nullptr)
        {
        }
        ~MessageOfBullet() override;
        explicit PROTOBUF_CONSTEXPR MessageOfBullet(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageOfBullet(const MessageOfBullet& from);
        MessageOfBullet(MessageOfBullet&& from) noexcept
            :
            MessageOfBullet()
        {
            *this = ::std::move(from);
        }

        inline MessageOfBullet& operator=(const MessageOfBullet& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageOfBullet& operator=(MessageOfBullet&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageOfBullet& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MessageOfBullet* internal_default_instance()
        {
            return reinterpret_cast<const MessageOfBullet*>(
                &_MessageOfBullet_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            2;

        friend void swap(MessageOfBullet& a, MessageOfBullet& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageOfBullet* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageOfBullet* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageOfBullet* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageOfBullet>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageOfBullet& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageOfBullet& from);

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _cached_size_.Get();
        }

    private:
        void SharedCtor();
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageOfBullet* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageOfBullet";
        }

    protected:
        explicit MessageOfBullet(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kTypeFieldNumber = 1,
            kXFieldNumber = 2,
            kFacingDirectionFieldNumber = 4,
            kGuidFieldNumber = 5,
            kYFieldNumber = 3,
            kDamageFieldNumber = 8,
            kArmorRateFieldNumber = 6,
            kShieldRateFieldNumber = 7,
            kBombRangeFieldNumber = 10,
            kTeamFieldNumber = 9,
            kSpeedFieldNumber = 11,
        };
        // .protobuf.BulletType type = 1;
        void clear_type();
        ::protobuf::BulletType type() const;
        void set_type(::protobuf::BulletType value);

    private:
        ::protobuf::BulletType _internal_type() const;
        void _internal_set_type(::protobuf::BulletType value);

    public:
        // int32 x = 2;
        void clear_x();
        int32_t x() const;
        void set_x(int32_t value);

    private:
        int32_t _internal_x() const;
        void _internal_set_x(int32_t value);

    public:
        // double facing_direction = 4;
        void clear_facing_direction();
        double facing_direction() const;
        void set_facing_direction(double value);

    private:
        double _internal_facing_direction() const;
        void _internal_set_facing_direction(double value);

    public:
        // int64 guid = 5;
        void clear_guid();
        int64_t guid() const;
        void set_guid(int64_t value);

    private:
        int64_t _internal_guid() const;
        void _internal_set_guid(int64_t value);

    public:
        // int32 y = 3;
        void clear_y();
        int32_t y() const;
        void set_y(int32_t value);

    private:
        int32_t _internal_y() const;
        void _internal_set_y(int32_t value);

    public:
        // int32 damage = 8;
        void clear_damage();
        int32_t damage() const;
        void set_damage(int32_t value);

    private:
        int32_t _internal_damage() const;
        void _internal_set_damage(int32_t value);

    public:
        // double armor_rate = 6;
        void clear_armor_rate();
        double armor_rate() const;
        void set_armor_rate(double value);

    private:
        double _internal_armor_rate() const;
        void _internal_set_armor_rate(double value);

    public:
        // double shield_rate = 7;
        void clear_shield_rate();
        double shield_rate() const;
        void set_shield_rate(double value);

    private:
        double _internal_shield_rate() const;
        void _internal_set_shield_rate(double value);

    public:
        // double bomb_range = 10;
        void clear_bomb_range();
        double bomb_range() const;
        void set_bomb_range(double value);

    private:
        double _internal_bomb_range() const;
        void _internal_set_bomb_range(double value);

    public:
        // .protobuf.PlayerTeam team = 9;
        void clear_team();
        ::protobuf::PlayerTeam team() const;
        void set_team(::protobuf::PlayerTeam value);

    private:
        ::protobuf::PlayerTeam _internal_team() const;
        void _internal_set_team(::protobuf::PlayerTeam value);

    public:
        // int32 speed = 11;
        void clear_speed();
        int32_t speed() const;
        void set_speed(int32_t value);

    private:
        int32_t _internal_speed() const;
        void _internal_set_speed(int32_t value);

    public:
        // @@protoc_insertion_point(class_scope:protobuf.MessageOfBullet)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        int type_;
        int32_t x_;
        double facing_direction_;
        int64_t guid_;
        int32_t y_;
        int32_t damage_;
        double armor_rate_;
        double shield_rate_;
        double bomb_range_;
        int team_;
        int32_t speed_;
        mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MessageOfResource final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfResource) */
    {
    public:
        inline MessageOfResource() :
            MessageOfResource(nullptr)
        {
        }
        ~MessageOfResource() override;
        explicit PROTOBUF_CONSTEXPR MessageOfResource(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageOfResource(const MessageOfResource& from);
        MessageOfResource(MessageOfResource&& from) noexcept
            :
            MessageOfResource()
        {
            *this = ::std::move(from);
        }

        inline MessageOfResource& operator=(const MessageOfResource& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageOfResource& operator=(MessageOfResource&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageOfResource& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MessageOfResource* internal_default_instance()
        {
            return reinterpret_cast<const MessageOfResource*>(
                &_MessageOfResource_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            3;

        friend void swap(MessageOfResource& a, MessageOfResource& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageOfResource* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageOfResource* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageOfResource* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageOfResource>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageOfResource& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageOfResource& from);

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _cached_size_.Get();
        }

    private:
        void SharedCtor();
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageOfResource* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageOfResource";
        }

    protected:
        explicit MessageOfResource(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kXFieldNumber = 1,
            kYFieldNumber = 2,
            kProgressFieldNumber = 3,
        };
        // int32 x = 1;
        void clear_x();
        int32_t x() const;
        void set_x(int32_t value);

    private:
        int32_t _internal_x() const;
        void _internal_set_x(int32_t value);

    public:
        // int32 y = 2;
        void clear_y();
        int32_t y() const;
        void set_y(int32_t value);

    private:
        int32_t _internal_y() const;
        void _internal_set_y(int32_t value);

    public:
        // int32 progress = 3;
        void clear_progress();
        int32_t progress() const;
        void set_progress(int32_t value);

    private:
        int32_t _internal_progress() const;
        void _internal_set_progress(int32_t value);

    public:
        // @@protoc_insertion_point(class_scope:protobuf.MessageOfResource)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        int32_t x_;
        int32_t y_;
        int32_t progress_;
        mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MessageOfHome final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfHome) */
    {
    public:
        inline MessageOfHome() :
            MessageOfHome(nullptr)
        {
        }
        ~MessageOfHome() override;
        explicit PROTOBUF_CONSTEXPR MessageOfHome(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageOfHome(const MessageOfHome& from);
        MessageOfHome(MessageOfHome&& from) noexcept
            :
            MessageOfHome()
        {
            *this = ::std::move(from);
        }

        inline MessageOfHome& operator=(const MessageOfHome& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageOfHome& operator=(MessageOfHome&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageOfHome& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MessageOfHome* internal_default_instance()
        {
            return reinterpret_cast<const MessageOfHome*>(
                &_MessageOfHome_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            4;

        friend void swap(MessageOfHome& a, MessageOfHome& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageOfHome* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageOfHome* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageOfHome* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageOfHome>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageOfHome& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageOfHome& from);

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _cached_size_.Get();
        }

    private:
        void SharedCtor();
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageOfHome* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageOfHome";
        }

    protected:
        explicit MessageOfHome(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kXFieldNumber = 1,
            kYFieldNumber = 2,
            kEconomyFieldNumber = 3,
            kHpFieldNumber = 4,
            kTeamFieldNumber = 5,
        };
        // int32 x = 1;
        void clear_x();
        int32_t x() const;
        void set_x(int32_t value);

    private:
        int32_t _internal_x() const;
        void _internal_set_x(int32_t value);

    public:
        // int32 y = 2;
        void clear_y();
        int32_t y() const;
        void set_y(int32_t value);

    private:
        int32_t _internal_y() const;
        void _internal_set_y(int32_t value);

    public:
        // int32 economy = 3;
        void clear_economy();
        int32_t economy() const;
        void set_economy(int32_t value);

    private:
        int32_t _internal_economy() const;
        void _internal_set_economy(int32_t value);

    public:
        // int32 hp = 4;
        void clear_hp();
        int32_t hp() const;
        void set_hp(int32_t value);

    private:
        int32_t _internal_hp() const;
        void _internal_set_hp(int32_t value);

    public:
        // .protobuf.PlayerTeam team = 5;
        void clear_team();
        ::protobuf::PlayerTeam team() const;
        void set_team(::protobuf::PlayerTeam value);

    private:
        ::protobuf::PlayerTeam _internal_team() const;
        void _internal_set_team(::protobuf::PlayerTeam value);

    public:
        // @@protoc_insertion_point(class_scope:protobuf.MessageOfHome)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        int32_t x_;
        int32_t y_;
        int32_t economy_;
        int32_t hp_;
        int team_;
        mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MessageOfMap_Row final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfMap.Row) */
    {
    public:
        inline MessageOfMap_Row() :
            MessageOfMap_Row(nullptr)
        {
        }
        ~MessageOfMap_Row() override;
        explicit PROTOBUF_CONSTEXPR MessageOfMap_Row(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageOfMap_Row(const MessageOfMap_Row& from);
        MessageOfMap_Row(MessageOfMap_Row&& from) noexcept
            :
            MessageOfMap_Row()
        {
            *this = ::std::move(from);
        }

        inline MessageOfMap_Row& operator=(const MessageOfMap_Row& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageOfMap_Row& operator=(MessageOfMap_Row&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageOfMap_Row& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MessageOfMap_Row* internal_default_instance()
        {
            return reinterpret_cast<const MessageOfMap_Row*>(
                &_MessageOfMap_Row_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            5;

        friend void swap(MessageOfMap_Row& a, MessageOfMap_Row& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageOfMap_Row* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageOfMap_Row* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageOfMap_Row* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageOfMap_Row>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageOfMap_Row& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageOfMap_Row& from);

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _cached_size_.Get();
        }

    private:
        void SharedCtor();
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageOfMap_Row* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageOfMap.Row";
        }

    protected:
        explicit MessageOfMap_Row(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kColFieldNumber = 1,
        };
        // repeated .protobuf.PlaceType col = 1;
        int col_size() const;

    private:
        int _internal_col_size() const;

    public:
        void clear_col();

    private:
        ::protobuf::PlaceType _internal_col(int index) const;
        void _internal_add_col(::protobuf::PlaceType value);
        ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_col();

    public:
        ::protobuf::PlaceType col(int index) const;
        void set_col(int index, ::protobuf::PlaceType value);
        void add_col(::protobuf::PlaceType value);
        const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& col() const;
        ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_col();

        // @@protoc_insertion_point(class_scope:protobuf.MessageOfMap.Row)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> col_;
        mutable std::atomic<int> _col_cached_byte_size_;
        mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MessageOfMap final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfMap) */
    {
    public:
        inline MessageOfMap() :
            MessageOfMap(nullptr)
        {
        }
        ~MessageOfMap() override;
        explicit PROTOBUF_CONSTEXPR MessageOfMap(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageOfMap(const MessageOfMap& from);
        MessageOfMap(MessageOfMap&& from) noexcept
            :
            MessageOfMap()
        {
            *this = ::std::move(from);
        }

        inline MessageOfMap& operator=(const MessageOfMap& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageOfMap& operator=(MessageOfMap&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageOfMap& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MessageOfMap* internal_default_instance()
        {
            return reinterpret_cast<const MessageOfMap*>(
                &_MessageOfMap_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            6;

        friend void swap(MessageOfMap& a, MessageOfMap& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageOfMap* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageOfMap* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageOfMap* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageOfMap>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageOfMap& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageOfMap& from);

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _cached_size_.Get();
        }

    private:
        void SharedCtor();
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageOfMap* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageOfMap";
        }

    protected:
        explicit MessageOfMap(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        typedef MessageOfMap_Row Row;

        // accessors -------------------------------------------------------

        enum : int
        {
            kRowFieldNumber = 2,
        };
        // repeated .protobuf.MessageOfMap.Row row = 2;
        int row_size() const;

    private:
        int _internal_row_size() const;

    public:
        void clear_row();
        ::protobuf::MessageOfMap_Row* mutable_row(int index);
        ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfMap_Row>*
            mutable_row();

    private:
        const ::protobuf::MessageOfMap_Row& _internal_row(int index) const;
        ::protobuf::MessageOfMap_Row* _internal_add_row();

    public:
        const ::protobuf::MessageOfMap_Row& row(int index) const;
        ::protobuf::MessageOfMap_Row* add_row();
        const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfMap_Row>&
            row() const;

        // @@protoc_insertion_point(class_scope:protobuf.MessageOfMap)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfMap_Row> row_;
        mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MessageOfObj final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfObj) */
    {
    public:
        inline MessageOfObj() :
            MessageOfObj(nullptr)
        {
        }
        ~MessageOfObj() override;
        explicit PROTOBUF_CONSTEXPR MessageOfObj(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageOfObj(const MessageOfObj& from);
        MessageOfObj(MessageOfObj&& from) noexcept
            :
            MessageOfObj()
        {
            *this = ::std::move(from);
        }

        inline MessageOfObj& operator=(const MessageOfObj& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageOfObj& operator=(MessageOfObj&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageOfObj& default_instance()
        {
            return *internal_default_instance();
        }
        enum MessageOfObjCase
        {
            kShipMessage = 1,
            kBuildingMessage = 2,
            kBulletMessage = 3,
            kHomeMessage = 4,
            kResourceMessage = 5,
            kMapMessage = 6,
            MESSAGE_OF_OBJ_NOT_SET = 0,
        };

        static inline const MessageOfObj* internal_default_instance()
        {
            return reinterpret_cast<const MessageOfObj*>(
                &_MessageOfObj_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            7;

        friend void swap(MessageOfObj& a, MessageOfObj& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageOfObj* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageOfObj* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageOfObj* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageOfObj>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageOfObj& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageOfObj& from);

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _cached_size_.Get();
        }

    private:
        void SharedCtor();
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageOfObj* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageOfObj";
        }

    protected:
        explicit MessageOfObj(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kShipMessageFieldNumber = 1,
            kBuildingMessageFieldNumber = 2,
            kBulletMessageFieldNumber = 3,
            kHomeMessageFieldNumber = 4,
            kResourceMessageFieldNumber = 5,
            kMapMessageFieldNumber = 6,
        };
        // .protobuf.MessageOfShip ship_message = 1;
        bool has_ship_message() const;

    private:
        bool _internal_has_ship_message() const;

    public:
        void clear_ship_message();
        const ::protobuf::MessageOfShip& ship_message() const;
        PROTOBUF_NODISCARD ::protobuf::MessageOfShip* release_ship_message();
        ::protobuf::MessageOfShip* mutable_ship_message();
        void set_allocated_ship_message(::protobuf::MessageOfShip* ship_message);

    private:
        const ::protobuf::MessageOfShip& _internal_ship_message() const;
        ::protobuf::MessageOfShip* _internal_mutable_ship_message();

    public:
        void unsafe_arena_set_allocated_ship_message(
            ::protobuf::MessageOfShip* ship_message
        );
        ::protobuf::MessageOfShip* unsafe_arena_release_ship_message();

        // .protobuf.MessageOfBuilding Building_message = 2;
        bool has_building_message() const;

    private:
        bool _internal_has_building_message() const;

    public:
        void clear_building_message();
        const ::protobuf::MessageOfBuilding& building_message() const;
        PROTOBUF_NODISCARD ::protobuf::MessageOfBuilding* release_building_message();
        ::protobuf::MessageOfBuilding* mutable_building_message();
        void set_allocated_building_message(::protobuf::MessageOfBuilding* building_message);

    private:
        const ::protobuf::MessageOfBuilding& _internal_building_message() const;
        ::protobuf::MessageOfBuilding* _internal_mutable_building_message();

    public:
        void unsafe_arena_set_allocated_building_message(
            ::protobuf::MessageOfBuilding* building_message
        );
        ::protobuf::MessageOfBuilding* unsafe_arena_release_building_message();

        // .protobuf.MessageOfBullet bullet_message = 3;
        bool has_bullet_message() const;

    private:
        bool _internal_has_bullet_message() const;

    public:
        void clear_bullet_message();
        const ::protobuf::MessageOfBullet& bullet_message() const;
        PROTOBUF_NODISCARD ::protobuf::MessageOfBullet* release_bullet_message();
        ::protobuf::MessageOfBullet* mutable_bullet_message();
        void set_allocated_bullet_message(::protobuf::MessageOfBullet* bullet_message);

    private:
        const ::protobuf::MessageOfBullet& _internal_bullet_message() const;
        ::protobuf::MessageOfBullet* _internal_mutable_bullet_message();

    public:
        void unsafe_arena_set_allocated_bullet_message(
            ::protobuf::MessageOfBullet* bullet_message
        );
        ::protobuf::MessageOfBullet* unsafe_arena_release_bullet_message();

        // .protobuf.MessageOfHome home_message = 4;
        bool has_home_message() const;

    private:
        bool _internal_has_home_message() const;

    public:
        void clear_home_message();
        const ::protobuf::MessageOfHome& home_message() const;
        PROTOBUF_NODISCARD ::protobuf::MessageOfHome* release_home_message();
        ::protobuf::MessageOfHome* mutable_home_message();
        void set_allocated_home_message(::protobuf::MessageOfHome* home_message);

    private:
        const ::protobuf::MessageOfHome& _internal_home_message() const;
        ::protobuf::MessageOfHome* _internal_mutable_home_message();

    public:
        void unsafe_arena_set_allocated_home_message(
            ::protobuf::MessageOfHome* home_message
        );
        ::protobuf::MessageOfHome* unsafe_arena_release_home_message();

        // .protobuf.MessageOfResource resource_message = 5;
        bool has_resource_message() const;

    private:
        bool _internal_has_resource_message() const;

    public:
        void clear_resource_message();
        const ::protobuf::MessageOfResource& resource_message() const;
        PROTOBUF_NODISCARD ::protobuf::MessageOfResource* release_resource_message();
        ::protobuf::MessageOfResource* mutable_resource_message();
        void set_allocated_resource_message(::protobuf::MessageOfResource* resource_message);

    private:
        const ::protobuf::MessageOfResource& _internal_resource_message() const;
        ::protobuf::MessageOfResource* _internal_mutable_resource_message();

    public:
        void unsafe_arena_set_allocated_resource_message(
            ::protobuf::MessageOfResource* resource_message
        );
        ::protobuf::MessageOfResource* unsafe_arena_release_resource_message();

        // .protobuf.MessageOfMap map_message = 6;
        bool has_map_message() const;

    private:
        bool _internal_has_map_message() const;

    public:
        void clear_map_message();
        const ::protobuf::MessageOfMap& map_message() const;
        PROTOBUF_NODISCARD ::protobuf::MessageOfMap* release_map_message();
        ::protobuf::MessageOfMap* mutable_map_message();
        void set_allocated_map_message(::protobuf::MessageOfMap* map_message);

    private:
        const ::protobuf::MessageOfMap& _internal_map_message() const;
        ::protobuf::MessageOfMap* _internal_mutable_map_message();

    public:
        void unsafe_arena_set_allocated_map_message(
            ::protobuf::MessageOfMap* map_message
        );
        ::protobuf::MessageOfMap* unsafe_arena_release_map_message();

        void clear_message_of_obj();
        MessageOfObjCase message_of_obj_case() const;
        // @@protoc_insertion_point(class_scope:protobuf.MessageOfObj)

    private:
        class _Internal;
        void set_has_ship_message();
        void set_has_building_message();
        void set_has_bullet_message();
        void set_has_home_message();
        void set_has_resource_message();
        void set_has_map_message();

        inline bool has_message_of_obj() const;
        inline void clear_has_message_of_obj();

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        union MessageOfObjUnion
        {
            constexpr MessageOfObjUnion() :
                _constinit_{}
            {
            }
            ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
            ::protobuf::MessageOfShip* ship_message_;
            ::protobuf::MessageOfBuilding* building_message_;
            ::protobuf::MessageOfBullet* bullet_message_;
            ::protobuf::MessageOfHome* home_message_;
            ::protobuf::MessageOfResource* resource_message_;
            ::protobuf::MessageOfMap* map_message_;
        } message_of_obj_;
        mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        uint32_t _oneof_case_[1];

        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MessageOfAll final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfAll) */
    {
    public:
        inline MessageOfAll() :
            MessageOfAll(nullptr)
        {
        }
        ~MessageOfAll() override;
        explicit PROTOBUF_CONSTEXPR MessageOfAll(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageOfAll(const MessageOfAll& from);
        MessageOfAll(MessageOfAll&& from) noexcept
            :
            MessageOfAll()
        {
            *this = ::std::move(from);
        }

        inline MessageOfAll& operator=(const MessageOfAll& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageOfAll& operator=(MessageOfAll&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageOfAll& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MessageOfAll* internal_default_instance()
        {
            return reinterpret_cast<const MessageOfAll*>(
                &_MessageOfAll_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            8;

        friend void swap(MessageOfAll& a, MessageOfAll& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageOfAll* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageOfAll* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageOfAll* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageOfAll>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageOfAll& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageOfAll& from);

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _cached_size_.Get();
        }

    private:
        void SharedCtor();
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageOfAll* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageOfAll";
        }

    protected:
        explicit MessageOfAll(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kGameTimeFieldNumber = 1,
        };
        // int32 game_time = 1;
        void clear_game_time();
        int32_t game_time() const;
        void set_game_time(int32_t value);

    private:
        int32_t _internal_game_time() const;
        void _internal_set_game_time(int32_t value);

    public:
        // @@protoc_insertion_point(class_scope:protobuf.MessageOfAll)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        int32_t game_time_;
        mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MessageToClient final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageToClient) */
    {
    public:
        inline MessageToClient() :
            MessageToClient(nullptr)
        {
        }
        ~MessageToClient() override;
        explicit PROTOBUF_CONSTEXPR MessageToClient(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageToClient(const MessageToClient& from);
        MessageToClient(MessageToClient&& from) noexcept
            :
            MessageToClient()
        {
            *this = ::std::move(from);
        }

        inline MessageToClient& operator=(const MessageToClient& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageToClient& operator=(MessageToClient&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageToClient& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MessageToClient* internal_default_instance()
        {
            return reinterpret_cast<const MessageToClient*>(
                &_MessageToClient_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            9;

        friend void swap(MessageToClient& a, MessageToClient& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageToClient* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageToClient* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageToClient* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageToClient>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageToClient& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageToClient& from);

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _cached_size_.Get();
        }

    private:
        void SharedCtor();
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageToClient* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageToClient";
        }

    protected:
        explicit MessageToClient(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kObjMessageFieldNumber = 1,
            kAllMessageFieldNumber = 3,
            kGameStateFieldNumber = 2,
        };
        // repeated .protobuf.MessageOfObj obj_message = 1;
        int obj_message_size() const;

    private:
        int _internal_obj_message_size() const;

    public:
        void clear_obj_message();
        ::protobuf::MessageOfObj* mutable_obj_message(int index);
        ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfObj>*
            mutable_obj_message();

    private:
        const ::protobuf::MessageOfObj& _internal_obj_message(int index) const;
        ::protobuf::MessageOfObj* _internal_add_obj_message();

    public:
        const ::protobuf::MessageOfObj& obj_message(int index) const;
        ::protobuf::MessageOfObj* add_obj_message();
        const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfObj>&
            obj_message() const;

        // .protobuf.MessageOfAll all_message = 3;
        bool has_all_message() const;

    private:
        bool _internal_has_all_message() const;

    public:
        void clear_all_message();
        const ::protobuf::MessageOfAll& all_message() const;
        PROTOBUF_NODISCARD ::protobuf::MessageOfAll* release_all_message();
        ::protobuf::MessageOfAll* mutable_all_message();
        void set_allocated_all_message(::protobuf::MessageOfAll* all_message);

    private:
        const ::protobuf::MessageOfAll& _internal_all_message() const;
        ::protobuf::MessageOfAll* _internal_mutable_all_message();

    public:
        void unsafe_arena_set_allocated_all_message(
            ::protobuf::MessageOfAll* all_message
        );
        ::protobuf::MessageOfAll* unsafe_arena_release_all_message();

        // .protobuf.GameState game_state = 2;
        void clear_game_state();
        ::protobuf::GameState game_state() const;
        void set_game_state(::protobuf::GameState value);

    private:
        ::protobuf::GameState _internal_game_state() const;
        void _internal_set_game_state(::protobuf::GameState value);

    public:
        // @@protoc_insertion_point(class_scope:protobuf.MessageToClient)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfObj> obj_message_;
        ::protobuf::MessageOfAll* all_message_;
        int game_state_;
        mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MoveRes final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MoveRes) */
    {
    public:
        inline MoveRes() :
            MoveRes(nullptr)
        {
        }
        ~MoveRes() override;
        explicit PROTOBUF_CONSTEXPR MoveRes(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MoveRes(const MoveRes& from);
        MoveRes(MoveRes&& from) noexcept
            :
            MoveRes()
        {
            *this = ::std::move(from);
        }

        inline MoveRes& operator=(const MoveRes& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MoveRes& operator=(MoveRes&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MoveRes& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MoveRes* internal_default_instance()
        {
            return reinterpret_cast<const MoveRes*>(
                &_MoveRes_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            10;

        friend void swap(MoveRes& a, MoveRes& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MoveRes* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MoveRes* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MoveRes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MoveRes>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MoveRes& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MoveRes& from);

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _cached_size_.Get();
        }

    private:
        void SharedCtor();
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MoveRes* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MoveRes";
        }

    protected:
        explicit MoveRes(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kActualSpeedFieldNumber = 1,
            kActualAngleFieldNumber = 2,
            kActSuccessFieldNumber = 3,
        };
        // int64 actual_speed = 1;
        void clear_actual_speed();
        int64_t actual_speed() const;
        void set_actual_speed(int64_t value);

    private:
        int64_t _internal_actual_speed() const;
        void _internal_set_actual_speed(int64_t value);

    public:
        // double actual_angle = 2;
        void clear_actual_angle();
        double actual_angle() const;
        void set_actual_angle(double value);

    private:
        double _internal_actual_angle() const;
        void _internal_set_actual_angle(double value);

    public:
        // bool act_success = 3;
        void clear_act_success();
        bool act_success() const;
        void set_act_success(bool value);

    private:
        bool _internal_act_success() const;
        void _internal_set_act_success(bool value);

    public:
        // @@protoc_insertion_point(class_scope:protobuf.MoveRes)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        int64_t actual_speed_;
        double actual_angle_;
        bool act_success_;
        mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class BoolRes final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.BoolRes) */
    {
    public:
        inline BoolRes() :
            BoolRes(nullptr)
        {
        }
        ~BoolRes() override;
        explicit PROTOBUF_CONSTEXPR BoolRes(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        BoolRes(const BoolRes& from);
        BoolRes(BoolRes&& from) noexcept
            :
            BoolRes()
        {
            *this = ::std::move(from);
        }

        inline BoolRes& operator=(const BoolRes& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline BoolRes& operator=(BoolRes&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const BoolRes& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const BoolRes* internal_default_instance()
        {
            return reinterpret_cast<const BoolRes*>(
                &_BoolRes_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            11;

        friend void swap(BoolRes& a, BoolRes& b)
        {
            a.Swap(&b);
        }
        inline void Swap(BoolRes* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(BoolRes* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        BoolRes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<BoolRes>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const BoolRes& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const BoolRes& from);

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _cached_size_.Get();
        }

    private:
        void SharedCtor();
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(BoolRes* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.BoolRes";
        }

    protected:
        explicit BoolRes(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kActSuccessFieldNumber = 1,
        };
        // bool act_success = 1;
        void clear_act_success();
        bool act_success() const;
        void set_act_success(bool value);

    private:
        bool _internal_act_success() const;
        void _internal_set_act_success(bool value);

    public:
        // @@protoc_insertion_point(class_scope:protobuf.BoolRes)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        bool act_success_;
        mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // ===================================================================

    // ===================================================================

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
    // MessageOfShip

    // int32 x = 1;
    inline void MessageOfShip::clear_x()
    {
        x_ = 0;
    }
    inline int32_t MessageOfShip::_internal_x() const
    {
        return x_;
    }
    inline int32_t MessageOfShip::x() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfShip.x)
        return _internal_x();
    }
    inline void MessageOfShip::_internal_set_x(int32_t value)
    {
        x_ = value;
    }
    inline void MessageOfShip::set_x(int32_t value)
    {
        _internal_set_x(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfShip.x)
    }

    // int32 y = 2;
    inline void MessageOfShip::clear_y()
    {
        y_ = 0;
    }
    inline int32_t MessageOfShip::_internal_y() const
    {
        return y_;
    }
    inline int32_t MessageOfShip::y() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfShip.y)
        return _internal_y();
    }
    inline void MessageOfShip::_internal_set_y(int32_t value)
    {
        y_ = value;
    }
    inline void MessageOfShip::set_y(int32_t value)
    {
        _internal_set_y(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfShip.y)
    }

    // int32 speed = 3;
    inline void MessageOfShip::clear_speed()
    {
        speed_ = 0;
    }
    inline int32_t MessageOfShip::_internal_speed() const
    {
        return speed_;
    }
    inline int32_t MessageOfShip::speed() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfShip.speed)
        return _internal_speed();
    }
    inline void MessageOfShip::_internal_set_speed(int32_t value)
    {
        speed_ = value;
    }
    inline void MessageOfShip::set_speed(int32_t value)
    {
        _internal_set_speed(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfShip.speed)
    }

    // int32 hp = 4;
    inline void MessageOfShip::clear_hp()
    {
        hp_ = 0;
    }
    inline int32_t MessageOfShip::_internal_hp() const
    {
        return hp_;
    }
    inline int32_t MessageOfShip::hp() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfShip.hp)
        return _internal_hp();
    }
    inline void MessageOfShip::_internal_set_hp(int32_t value)
    {
        hp_ = value;
    }
    inline void MessageOfShip::set_hp(int32_t value)
    {
        _internal_set_hp(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfShip.hp)
    }

    // int32 armor = 5;
    inline void MessageOfShip::clear_armor()
    {
        armor_ = 0;
    }
    inline int32_t MessageOfShip::_internal_armor() const
    {
        return armor_;
    }
    inline int32_t MessageOfShip::armor() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfShip.armor)
        return _internal_armor();
    }
    inline void MessageOfShip::_internal_set_armor(int32_t value)
    {
        armor_ = value;
    }
    inline void MessageOfShip::set_armor(int32_t value)
    {
        _internal_set_armor(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfShip.armor)
    }

    // int32 shield = 6;
    inline void MessageOfShip::clear_shield()
    {
        shield_ = 0;
    }
    inline int32_t MessageOfShip::_internal_shield() const
    {
        return shield_;
    }
    inline int32_t MessageOfShip::shield() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfShip.shield)
        return _internal_shield();
    }
    inline void MessageOfShip::_internal_set_shield(int32_t value)
    {
        shield_ = value;
    }
    inline void MessageOfShip::set_shield(int32_t value)
    {
        _internal_set_shield(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfShip.shield)
    }

    // .protobuf.PlaceType place = 7;
    inline void MessageOfShip::clear_place()
    {
        place_ = 0;
    }
    inline ::protobuf::PlaceType MessageOfShip::_internal_place() const
    {
        return static_cast<::protobuf::PlaceType>(place_);
    }
    inline ::protobuf::PlaceType MessageOfShip::place() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfShip.place)
        return _internal_place();
    }
    inline void MessageOfShip::_internal_set_place(::protobuf::PlaceType value)
    {
        place_ = value;
    }
    inline void MessageOfShip::set_place(::protobuf::PlaceType value)
    {
        _internal_set_place(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfShip.place)
    }

    // .protobuf.ShipState ship_state = 8;
    inline void MessageOfShip::clear_ship_state()
    {
        ship_state_ = 0;
    }
    inline ::protobuf::ShipState MessageOfShip::_internal_ship_state() const
    {
        return static_cast<::protobuf::ShipState>(ship_state_);
    }
    inline ::protobuf::ShipState MessageOfShip::ship_state() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfShip.ship_state)
        return _internal_ship_state();
    }
    inline void MessageOfShip::_internal_set_ship_state(::protobuf::ShipState value)
    {
        ship_state_ = value;
    }
    inline void MessageOfShip::set_ship_state(::protobuf::ShipState value)
    {
        _internal_set_ship_state(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfShip.ship_state)
    }

    // .protobuf.PlayerTeam team = 9;
    inline void MessageOfShip::clear_team()
    {
        team_ = 0;
    }
    inline ::protobuf::PlayerTeam MessageOfShip::_internal_team() const
    {
        return static_cast<::protobuf::PlayerTeam>(team_);
    }
    inline ::protobuf::PlayerTeam MessageOfShip::team() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfShip.team)
        return _internal_team();
    }
    inline void MessageOfShip::_internal_set_team(::protobuf::PlayerTeam value)
    {
        team_ = value;
    }
    inline void MessageOfShip::set_team(::protobuf::PlayerTeam value)
    {
        _internal_set_team(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfShip.team)
    }

    // int64 ship_id = 10;
    inline void MessageOfShip::clear_ship_id()
    {
        ship_id_ = int64_t{0};
    }
    inline int64_t MessageOfShip::_internal_ship_id() const
    {
        return ship_id_;
    }
    inline int64_t MessageOfShip::ship_id() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfShip.ship_id)
        return _internal_ship_id();
    }
    inline void MessageOfShip::_internal_set_ship_id(int64_t value)
    {
        ship_id_ = value;
    }
    inline void MessageOfShip::set_ship_id(int64_t value)
    {
        _internal_set_ship_id(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfShip.ship_id)
    }

    // int32 Recover_speed = 11;
    inline void MessageOfShip::clear_recover_speed()
    {
        recover_speed_ = 0;
    }
    inline int32_t MessageOfShip::_internal_recover_speed() const
    {
        return recover_speed_;
    }
    inline int32_t MessageOfShip::recover_speed() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfShip.Recover_speed)
        return _internal_recover_speed();
    }
    inline void MessageOfShip::_internal_set_recover_speed(int32_t value)
    {
        recover_speed_ = value;
    }
    inline void MessageOfShip::set_recover_speed(int32_t value)
    {
        _internal_set_recover_speed(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfShip.Recover_speed)
    }

    // int32 economy = 12;
    inline void MessageOfShip::clear_economy()
    {
        economy_ = 0;
    }
    inline int32_t MessageOfShip::_internal_economy() const
    {
        return economy_;
    }
    inline int32_t MessageOfShip::economy() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfShip.economy)
        return _internal_economy();
    }
    inline void MessageOfShip::_internal_set_economy(int32_t value)
    {
        economy_ = value;
    }
    inline void MessageOfShip::set_economy(int32_t value)
    {
        _internal_set_economy(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfShip.economy)
    }

    // .protobuf.CollectorType collector_type = 13;
    inline void MessageOfShip::clear_collector_type()
    {
        collector_type_ = 0;
    }
    inline ::protobuf::CollectorType MessageOfShip::_internal_collector_type() const
    {
        return static_cast<::protobuf::CollectorType>(collector_type_);
    }
    inline ::protobuf::CollectorType MessageOfShip::collector_type() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfShip.collector_type)
        return _internal_collector_type();
    }
    inline void MessageOfShip::_internal_set_collector_type(::protobuf::CollectorType value)
    {
        collector_type_ = value;
    }
    inline void MessageOfShip::set_collector_type(::protobuf::CollectorType value)
    {
        _internal_set_collector_type(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfShip.collector_type)
    }

    // .protobuf.ArmorType armor_type = 14;
    inline void MessageOfShip::clear_armor_type()
    {
        armor_type_ = 0;
    }
    inline ::protobuf::ArmorType MessageOfShip::_internal_armor_type() const
    {
        return static_cast<::protobuf::ArmorType>(armor_type_);
    }
    inline ::protobuf::ArmorType MessageOfShip::armor_type() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfShip.armor_type)
        return _internal_armor_type();
    }
    inline void MessageOfShip::_internal_set_armor_type(::protobuf::ArmorType value)
    {
        armor_type_ = value;
    }
    inline void MessageOfShip::set_armor_type(::protobuf::ArmorType value)
    {
        _internal_set_armor_type(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfShip.armor_type)
    }

    // .protobuf.ShieldType shield_type = 15;
    inline void MessageOfShip::clear_shield_type()
    {
        shield_type_ = 0;
    }
    inline ::protobuf::ShieldType MessageOfShip::_internal_shield_type() const
    {
        return static_cast<::protobuf::ShieldType>(shield_type_);
    }
    inline ::protobuf::ShieldType MessageOfShip::shield_type() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfShip.shield_type)
        return _internal_shield_type();
    }
    inline void MessageOfShip::_internal_set_shield_type(::protobuf::ShieldType value)
    {
        shield_type_ = value;
    }
    inline void MessageOfShip::set_shield_type(::protobuf::ShieldType value)
    {
        _internal_set_shield_type(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfShip.shield_type)
    }

    // .protobuf.BuilderType builder_type = 16;
    inline void MessageOfShip::clear_builder_type()
    {
        builder_type_ = 0;
    }
    inline ::protobuf::BuilderType MessageOfShip::_internal_builder_type() const
    {
        return static_cast<::protobuf::BuilderType>(builder_type_);
    }
    inline ::protobuf::BuilderType MessageOfShip::builder_type() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfShip.builder_type)
        return _internal_builder_type();
    }
    inline void MessageOfShip::_internal_set_builder_type(::protobuf::BuilderType value)
    {
        builder_type_ = value;
    }
    inline void MessageOfShip::set_builder_type(::protobuf::BuilderType value)
    {
        _internal_set_builder_type(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfShip.builder_type)
    }

    // .protobuf.BulletType bullet_type = 17;
    inline void MessageOfShip::clear_bullet_type()
    {
        bullet_type_ = 0;
    }
    inline ::protobuf::BulletType MessageOfShip::_internal_bullet_type() const
    {
        return static_cast<::protobuf::BulletType>(bullet_type_);
    }
    inline ::protobuf::BulletType MessageOfShip::bullet_type() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfShip.bullet_type)
        return _internal_bullet_type();
    }
    inline void MessageOfShip::_internal_set_bullet_type(::protobuf::BulletType value)
    {
        bullet_type_ = value;
    }
    inline void MessageOfShip::set_bullet_type(::protobuf::BulletType value)
    {
        _internal_set_bullet_type(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfShip.bullet_type)
    }

    // .protobuf.ShipType ship_type = 18;
    inline void MessageOfShip::clear_ship_type()
    {
        ship_type_ = 0;
    }
    inline ::protobuf::ShipType MessageOfShip::_internal_ship_type() const
    {
        return static_cast<::protobuf::ShipType>(ship_type_);
    }
    inline ::protobuf::ShipType MessageOfShip::ship_type() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfShip.ship_type)
        return _internal_ship_type();
    }
    inline void MessageOfShip::_internal_set_ship_type(::protobuf::ShipType value)
    {
        ship_type_ = value;
    }
    inline void MessageOfShip::set_ship_type(::protobuf::ShipType value)
    {
        _internal_set_ship_type(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfShip.ship_type)
    }

    // double facing_direction = 19;
    inline void MessageOfShip::clear_facing_direction()
    {
        facing_direction_ = 0;
    }
    inline double MessageOfShip::_internal_facing_direction() const
    {
        return facing_direction_;
    }
    inline double MessageOfShip::facing_direction() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfShip.facing_direction)
        return _internal_facing_direction();
    }
    inline void MessageOfShip::_internal_set_facing_direction(double value)
    {
        facing_direction_ = value;
    }
    inline void MessageOfShip::set_facing_direction(double value)
    {
        _internal_set_facing_direction(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfShip.facing_direction)
    }

    // -------------------------------------------------------------------

    // MessageOfBuilding

    // int32 x = 1;
    inline void MessageOfBuilding::clear_x()
    {
        x_ = 0;
    }
    inline int32_t MessageOfBuilding::_internal_x() const
    {
        return x_;
    }
    inline int32_t MessageOfBuilding::x() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBuilding.x)
        return _internal_x();
    }
    inline void MessageOfBuilding::_internal_set_x(int32_t value)
    {
        x_ = value;
    }
    inline void MessageOfBuilding::set_x(int32_t value)
    {
        _internal_set_x(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBuilding.x)
    }

    // int32 y = 2;
    inline void MessageOfBuilding::clear_y()
    {
        y_ = 0;
    }
    inline int32_t MessageOfBuilding::_internal_y() const
    {
        return y_;
    }
    inline int32_t MessageOfBuilding::y() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBuilding.y)
        return _internal_y();
    }
    inline void MessageOfBuilding::_internal_set_y(int32_t value)
    {
        y_ = value;
    }
    inline void MessageOfBuilding::set_y(int32_t value)
    {
        _internal_set_y(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBuilding.y)
    }

    // int32 hp = 3;
    inline void MessageOfBuilding::clear_hp()
    {
        hp_ = 0;
    }
    inline int32_t MessageOfBuilding::_internal_hp() const
    {
        return hp_;
    }
    inline int32_t MessageOfBuilding::hp() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBuilding.hp)
        return _internal_hp();
    }
    inline void MessageOfBuilding::_internal_set_hp(int32_t value)
    {
        hp_ = value;
    }
    inline void MessageOfBuilding::set_hp(int32_t value)
    {
        _internal_set_hp(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBuilding.hp)
    }

    // .protobuf.BuildingType building_type = 4;
    inline void MessageOfBuilding::clear_building_type()
    {
        building_type_ = 0;
    }
    inline ::protobuf::BuildingType MessageOfBuilding::_internal_building_type() const
    {
        return static_cast<::protobuf::BuildingType>(building_type_);
    }
    inline ::protobuf::BuildingType MessageOfBuilding::building_type() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBuilding.building_type)
        return _internal_building_type();
    }
    inline void MessageOfBuilding::_internal_set_building_type(::protobuf::BuildingType value)
    {
        building_type_ = value;
    }
    inline void MessageOfBuilding::set_building_type(::protobuf::BuildingType value)
    {
        _internal_set_building_type(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBuilding.building_type)
    }

    // .protobuf.PlayerTeam team = 5;
    inline void MessageOfBuilding::clear_team()
    {
        team_ = 0;
    }
    inline ::protobuf::PlayerTeam MessageOfBuilding::_internal_team() const
    {
        return static_cast<::protobuf::PlayerTeam>(team_);
    }
    inline ::protobuf::PlayerTeam MessageOfBuilding::team() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBuilding.team)
        return _internal_team();
    }
    inline void MessageOfBuilding::_internal_set_team(::protobuf::PlayerTeam value)
    {
        team_ = value;
    }
    inline void MessageOfBuilding::set_team(::protobuf::PlayerTeam value)
    {
        _internal_set_team(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBuilding.team)
    }

    // int64 building_id = 6;
    inline void MessageOfBuilding::clear_building_id()
    {
        building_id_ = int64_t{0};
    }
    inline int64_t MessageOfBuilding::_internal_building_id() const
    {
        return building_id_;
    }
    inline int64_t MessageOfBuilding::building_id() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBuilding.building_id)
        return _internal_building_id();
    }
    inline void MessageOfBuilding::_internal_set_building_id(int64_t value)
    {
        building_id_ = value;
    }
    inline void MessageOfBuilding::set_building_id(int64_t value)
    {
        _internal_set_building_id(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBuilding.building_id)
    }

    // -------------------------------------------------------------------

    // MessageOfBullet

    // .protobuf.BulletType type = 1;
    inline void MessageOfBullet::clear_type()
    {
        type_ = 0;
    }
    inline ::protobuf::BulletType MessageOfBullet::_internal_type() const
    {
        return static_cast<::protobuf::BulletType>(type_);
    }
    inline ::protobuf::BulletType MessageOfBullet::type() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBullet.type)
        return _internal_type();
    }
    inline void MessageOfBullet::_internal_set_type(::protobuf::BulletType value)
    {
        type_ = value;
    }
    inline void MessageOfBullet::set_type(::protobuf::BulletType value)
    {
        _internal_set_type(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBullet.type)
    }

    // int32 x = 2;
    inline void MessageOfBullet::clear_x()
    {
        x_ = 0;
    }
    inline int32_t MessageOfBullet::_internal_x() const
    {
        return x_;
    }
    inline int32_t MessageOfBullet::x() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBullet.x)
        return _internal_x();
    }
    inline void MessageOfBullet::_internal_set_x(int32_t value)
    {
        x_ = value;
    }
    inline void MessageOfBullet::set_x(int32_t value)
    {
        _internal_set_x(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBullet.x)
    }

    // int32 y = 3;
    inline void MessageOfBullet::clear_y()
    {
        y_ = 0;
    }
    inline int32_t MessageOfBullet::_internal_y() const
    {
        return y_;
    }
    inline int32_t MessageOfBullet::y() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBullet.y)
        return _internal_y();
    }
    inline void MessageOfBullet::_internal_set_y(int32_t value)
    {
        y_ = value;
    }
    inline void MessageOfBullet::set_y(int32_t value)
    {
        _internal_set_y(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBullet.y)
    }

    // double facing_direction = 4;
    inline void MessageOfBullet::clear_facing_direction()
    {
        facing_direction_ = 0;
    }
    inline double MessageOfBullet::_internal_facing_direction() const
    {
        return facing_direction_;
    }
    inline double MessageOfBullet::facing_direction() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBullet.facing_direction)
        return _internal_facing_direction();
    }
    inline void MessageOfBullet::_internal_set_facing_direction(double value)
    {
        facing_direction_ = value;
    }
    inline void MessageOfBullet::set_facing_direction(double value)
    {
        _internal_set_facing_direction(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBullet.facing_direction)
    }

    // int64 guid = 5;
    inline void MessageOfBullet::clear_guid()
    {
        guid_ = int64_t{0};
    }
    inline int64_t MessageOfBullet::_internal_guid() const
    {
        return guid_;
    }
    inline int64_t MessageOfBullet::guid() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBullet.guid)
        return _internal_guid();
    }
    inline void MessageOfBullet::_internal_set_guid(int64_t value)
    {
        guid_ = value;
    }
    inline void MessageOfBullet::set_guid(int64_t value)
    {
        _internal_set_guid(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBullet.guid)
    }

    // double armor_rate = 6;
    inline void MessageOfBullet::clear_armor_rate()
    {
        armor_rate_ = 0;
    }
    inline double MessageOfBullet::_internal_armor_rate() const
    {
        return armor_rate_;
    }
    inline double MessageOfBullet::armor_rate() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBullet.armor_rate)
        return _internal_armor_rate();
    }
    inline void MessageOfBullet::_internal_set_armor_rate(double value)
    {
        armor_rate_ = value;
    }
    inline void MessageOfBullet::set_armor_rate(double value)
    {
        _internal_set_armor_rate(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBullet.armor_rate)
    }

    // double shield_rate = 7;
    inline void MessageOfBullet::clear_shield_rate()
    {
        shield_rate_ = 0;
    }
    inline double MessageOfBullet::_internal_shield_rate() const
    {
        return shield_rate_;
    }
    inline double MessageOfBullet::shield_rate() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBullet.shield_rate)
        return _internal_shield_rate();
    }
    inline void MessageOfBullet::_internal_set_shield_rate(double value)
    {
        shield_rate_ = value;
    }
    inline void MessageOfBullet::set_shield_rate(double value)
    {
        _internal_set_shield_rate(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBullet.shield_rate)
    }

    // int32 damage = 8;
    inline void MessageOfBullet::clear_damage()
    {
        damage_ = 0;
    }
    inline int32_t MessageOfBullet::_internal_damage() const
    {
        return damage_;
    }
    inline int32_t MessageOfBullet::damage() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBullet.damage)
        return _internal_damage();
    }
    inline void MessageOfBullet::_internal_set_damage(int32_t value)
    {
        damage_ = value;
    }
    inline void MessageOfBullet::set_damage(int32_t value)
    {
        _internal_set_damage(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBullet.damage)
    }

    // .protobuf.PlayerTeam team = 9;
    inline void MessageOfBullet::clear_team()
    {
        team_ = 0;
    }
    inline ::protobuf::PlayerTeam MessageOfBullet::_internal_team() const
    {
        return static_cast<::protobuf::PlayerTeam>(team_);
    }
    inline ::protobuf::PlayerTeam MessageOfBullet::team() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBullet.team)
        return _internal_team();
    }
    inline void MessageOfBullet::_internal_set_team(::protobuf::PlayerTeam value)
    {
        team_ = value;
    }
    inline void MessageOfBullet::set_team(::protobuf::PlayerTeam value)
    {
        _internal_set_team(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBullet.team)
    }

    // double bomb_range = 10;
    inline void MessageOfBullet::clear_bomb_range()
    {
        bomb_range_ = 0;
    }
    inline double MessageOfBullet::_internal_bomb_range() const
    {
        return bomb_range_;
    }
    inline double MessageOfBullet::bomb_range() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBullet.bomb_range)
        return _internal_bomb_range();
    }
    inline void MessageOfBullet::_internal_set_bomb_range(double value)
    {
        bomb_range_ = value;
    }
    inline void MessageOfBullet::set_bomb_range(double value)
    {
        _internal_set_bomb_range(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBullet.bomb_range)
    }

    // int32 speed = 11;
    inline void MessageOfBullet::clear_speed()
    {
        speed_ = 0;
    }
    inline int32_t MessageOfBullet::_internal_speed() const
    {
        return speed_;
    }
    inline int32_t MessageOfBullet::speed() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBullet.speed)
        return _internal_speed();
    }
    inline void MessageOfBullet::_internal_set_speed(int32_t value)
    {
        speed_ = value;
    }
    inline void MessageOfBullet::set_speed(int32_t value)
    {
        _internal_set_speed(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBullet.speed)
    }

    // -------------------------------------------------------------------

    // MessageOfResource

    // int32 x = 1;
    inline void MessageOfResource::clear_x()
    {
        x_ = 0;
    }
    inline int32_t MessageOfResource::_internal_x() const
    {
        return x_;
    }
    inline int32_t MessageOfResource::x() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfResource.x)
        return _internal_x();
    }
    inline void MessageOfResource::_internal_set_x(int32_t value)
    {
        x_ = value;
    }
    inline void MessageOfResource::set_x(int32_t value)
    {
        _internal_set_x(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfResource.x)
    }

    // int32 y = 2;
    inline void MessageOfResource::clear_y()
    {
        y_ = 0;
    }
    inline int32_t MessageOfResource::_internal_y() const
    {
        return y_;
    }
    inline int32_t MessageOfResource::y() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfResource.y)
        return _internal_y();
    }
    inline void MessageOfResource::_internal_set_y(int32_t value)
    {
        y_ = value;
    }
    inline void MessageOfResource::set_y(int32_t value)
    {
        _internal_set_y(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfResource.y)
    }

    // int32 progress = 3;
    inline void MessageOfResource::clear_progress()
    {
        progress_ = 0;
    }
    inline int32_t MessageOfResource::_internal_progress() const
    {
        return progress_;
    }
    inline int32_t MessageOfResource::progress() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfResource.progress)
        return _internal_progress();
    }
    inline void MessageOfResource::_internal_set_progress(int32_t value)
    {
        progress_ = value;
    }
    inline void MessageOfResource::set_progress(int32_t value)
    {
        _internal_set_progress(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfResource.progress)
    }

    // -------------------------------------------------------------------

    // MessageOfHome

    // int32 x = 1;
    inline void MessageOfHome::clear_x()
    {
        x_ = 0;
    }
    inline int32_t MessageOfHome::_internal_x() const
    {
        return x_;
    }
    inline int32_t MessageOfHome::x() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfHome.x)
        return _internal_x();
    }
    inline void MessageOfHome::_internal_set_x(int32_t value)
    {
        x_ = value;
    }
    inline void MessageOfHome::set_x(int32_t value)
    {
        _internal_set_x(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfHome.x)
    }

    // int32 y = 2;
    inline void MessageOfHome::clear_y()
    {
        y_ = 0;
    }
    inline int32_t MessageOfHome::_internal_y() const
    {
        return y_;
    }
    inline int32_t MessageOfHome::y() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfHome.y)
        return _internal_y();
    }
    inline void MessageOfHome::_internal_set_y(int32_t value)
    {
        y_ = value;
    }
    inline void MessageOfHome::set_y(int32_t value)
    {
        _internal_set_y(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfHome.y)
    }

    // int32 economy = 3;
    inline void MessageOfHome::clear_economy()
    {
        economy_ = 0;
    }
    inline int32_t MessageOfHome::_internal_economy() const
    {
        return economy_;
    }
    inline int32_t MessageOfHome::economy() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfHome.economy)
        return _internal_economy();
    }
    inline void MessageOfHome::_internal_set_economy(int32_t value)
    {
        economy_ = value;
    }
    inline void MessageOfHome::set_economy(int32_t value)
    {
        _internal_set_economy(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfHome.economy)
    }

    // int32 hp = 4;
    inline void MessageOfHome::clear_hp()
    {
        hp_ = 0;
    }
    inline int32_t MessageOfHome::_internal_hp() const
    {
        return hp_;
    }
    inline int32_t MessageOfHome::hp() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfHome.hp)
        return _internal_hp();
    }
    inline void MessageOfHome::_internal_set_hp(int32_t value)
    {
        hp_ = value;
    }
    inline void MessageOfHome::set_hp(int32_t value)
    {
        _internal_set_hp(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfHome.hp)
    }

    // .protobuf.PlayerTeam team = 5;
    inline void MessageOfHome::clear_team()
    {
        team_ = 0;
    }
    inline ::protobuf::PlayerTeam MessageOfHome::_internal_team() const
    {
        return static_cast<::protobuf::PlayerTeam>(team_);
    }
    inline ::protobuf::PlayerTeam MessageOfHome::team() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfHome.team)
        return _internal_team();
    }
    inline void MessageOfHome::_internal_set_team(::protobuf::PlayerTeam value)
    {
        team_ = value;
    }
    inline void MessageOfHome::set_team(::protobuf::PlayerTeam value)
    {
        _internal_set_team(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfHome.team)
    }

    // -------------------------------------------------------------------

    // MessageOfMap_Row

    // repeated .protobuf.PlaceType col = 1;
    inline int MessageOfMap_Row::_internal_col_size() const
    {
        return col_.size();
    }
    inline int MessageOfMap_Row::col_size() const
    {
        return _internal_col_size();
    }
    inline void MessageOfMap_Row::clear_col()
    {
        col_.Clear();
    }
    inline ::protobuf::PlaceType MessageOfMap_Row::_internal_col(int index) const
    {
        return static_cast<::protobuf::PlaceType>(col_.Get(index));
    }
    inline ::protobuf::PlaceType MessageOfMap_Row::col(int index) const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfMap.Row.col)
        return _internal_col(index);
    }
    inline void MessageOfMap_Row::set_col(int index, ::protobuf::PlaceType value)
    {
        col_.Set(index, value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfMap.Row.col)
    }
    inline void MessageOfMap_Row::_internal_add_col(::protobuf::PlaceType value)
    {
        col_.Add(value);
    }
    inline void MessageOfMap_Row::add_col(::protobuf::PlaceType value)
    {
        _internal_add_col(value);
        // @@protoc_insertion_point(field_add:protobuf.MessageOfMap.Row.col)
    }
    inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
        MessageOfMap_Row::col() const
    {
        // @@protoc_insertion_point(field_list:protobuf.MessageOfMap.Row.col)
        return col_;
    }
    inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
        MessageOfMap_Row::_internal_mutable_col()
    {
        return &col_;
    }
    inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
        MessageOfMap_Row::mutable_col()
    {
        // @@protoc_insertion_point(field_mutable_list:protobuf.MessageOfMap.Row.col)
        return _internal_mutable_col();
    }

    // -------------------------------------------------------------------

    // MessageOfMap

    // repeated .protobuf.MessageOfMap.Row row = 2;
    inline int MessageOfMap::_internal_row_size() const
    {
        return row_.size();
    }
    inline int MessageOfMap::row_size() const
    {
        return _internal_row_size();
    }
    inline void MessageOfMap::clear_row()
    {
        row_.Clear();
    }
    inline ::protobuf::MessageOfMap_Row* MessageOfMap::mutable_row(int index)
    {
        // @@protoc_insertion_point(field_mutable:protobuf.MessageOfMap.row)
        return row_.Mutable(index);
    }
    inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfMap_Row>*
        MessageOfMap::mutable_row()
    {
        // @@protoc_insertion_point(field_mutable_list:protobuf.MessageOfMap.row)
        return &row_;
    }
    inline const ::protobuf::MessageOfMap_Row& MessageOfMap::_internal_row(int index) const
    {
        return row_.Get(index);
    }
    inline const ::protobuf::MessageOfMap_Row& MessageOfMap::row(int index) const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfMap.row)
        return _internal_row(index);
    }
    inline ::protobuf::MessageOfMap_Row* MessageOfMap::_internal_add_row()
    {
        return row_.Add();
    }
    inline ::protobuf::MessageOfMap_Row* MessageOfMap::add_row()
    {
        ::protobuf::MessageOfMap_Row* _add = _internal_add_row();
        // @@protoc_insertion_point(field_add:protobuf.MessageOfMap.row)
        return _add;
    }
    inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfMap_Row>&
        MessageOfMap::row() const
    {
        // @@protoc_insertion_point(field_list:protobuf.MessageOfMap.row)
        return row_;
    }

    // -------------------------------------------------------------------

    // MessageOfObj

    // .protobuf.MessageOfShip ship_message = 1;
    inline bool MessageOfObj::_internal_has_ship_message() const
    {
        return message_of_obj_case() == kShipMessage;
    }
    inline bool MessageOfObj::has_ship_message() const
    {
        return _internal_has_ship_message();
    }
    inline void MessageOfObj::set_has_ship_message()
    {
        _oneof_case_[0] = kShipMessage;
    }
    inline void MessageOfObj::clear_ship_message()
    {
        if (_internal_has_ship_message())
        {
            if (GetArenaForAllocation() == nullptr)
            {
                delete message_of_obj_.ship_message_;
            }
            clear_has_message_of_obj();
        }
    }
    inline ::protobuf::MessageOfShip* MessageOfObj::release_ship_message()
    {
        // @@protoc_insertion_point(field_release:protobuf.MessageOfObj.ship_message)
        if (_internal_has_ship_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfShip* temp = message_of_obj_.ship_message_;
            if (GetArenaForAllocation() != nullptr)
            {
                temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
            }
            message_of_obj_.ship_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline const ::protobuf::MessageOfShip& MessageOfObj::_internal_ship_message() const
    {
        return _internal_has_ship_message() ? *message_of_obj_.ship_message_ : reinterpret_cast<::protobuf::MessageOfShip&>(::protobuf::_MessageOfShip_default_instance_);
    }
    inline const ::protobuf::MessageOfShip& MessageOfObj::ship_message() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfObj.ship_message)
        return _internal_ship_message();
    }
    inline ::protobuf::MessageOfShip* MessageOfObj::unsafe_arena_release_ship_message()
    {
        // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.MessageOfObj.ship_message)
        if (_internal_has_ship_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfShip* temp = message_of_obj_.ship_message_;
            message_of_obj_.ship_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline void MessageOfObj::unsafe_arena_set_allocated_ship_message(::protobuf::MessageOfShip* ship_message)
    {
        clear_message_of_obj();
        if (ship_message)
        {
            set_has_ship_message();
            message_of_obj_.ship_message_ = ship_message;
        }
        // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.MessageOfObj.ship_message)
    }
    inline ::protobuf::MessageOfShip* MessageOfObj::_internal_mutable_ship_message()
    {
        if (!_internal_has_ship_message())
        {
            clear_message_of_obj();
            set_has_ship_message();
            message_of_obj_.ship_message_ = CreateMaybeMessage<::protobuf::MessageOfShip>(GetArenaForAllocation());
        }
        return message_of_obj_.ship_message_;
    }
    inline ::protobuf::MessageOfShip* MessageOfObj::mutable_ship_message()
    {
        ::protobuf::MessageOfShip* _msg = _internal_mutable_ship_message();
        // @@protoc_insertion_point(field_mutable:protobuf.MessageOfObj.ship_message)
        return _msg;
    }

    // .protobuf.MessageOfBuilding Building_message = 2;
    inline bool MessageOfObj::_internal_has_building_message() const
    {
        return message_of_obj_case() == kBuildingMessage;
    }
    inline bool MessageOfObj::has_building_message() const
    {
        return _internal_has_building_message();
    }
    inline void MessageOfObj::set_has_building_message()
    {
        _oneof_case_[0] = kBuildingMessage;
    }
    inline void MessageOfObj::clear_building_message()
    {
        if (_internal_has_building_message())
        {
            if (GetArenaForAllocation() == nullptr)
            {
                delete message_of_obj_.building_message_;
            }
            clear_has_message_of_obj();
        }
    }
    inline ::protobuf::MessageOfBuilding* MessageOfObj::release_building_message()
    {
        // @@protoc_insertion_point(field_release:protobuf.MessageOfObj.Building_message)
        if (_internal_has_building_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfBuilding* temp = message_of_obj_.building_message_;
            if (GetArenaForAllocation() != nullptr)
            {
                temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
            }
            message_of_obj_.building_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline const ::protobuf::MessageOfBuilding& MessageOfObj::_internal_building_message() const
    {
        return _internal_has_building_message() ? *message_of_obj_.building_message_ : reinterpret_cast<::protobuf::MessageOfBuilding&>(::protobuf::_MessageOfBuilding_default_instance_);
    }
    inline const ::protobuf::MessageOfBuilding& MessageOfObj::building_message() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfObj.Building_message)
        return _internal_building_message();
    }
    inline ::protobuf::MessageOfBuilding* MessageOfObj::unsafe_arena_release_building_message()
    {
        // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.MessageOfObj.Building_message)
        if (_internal_has_building_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfBuilding* temp = message_of_obj_.building_message_;
            message_of_obj_.building_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline void MessageOfObj::unsafe_arena_set_allocated_building_message(::protobuf::MessageOfBuilding* building_message)
    {
        clear_message_of_obj();
        if (building_message)
        {
            set_has_building_message();
            message_of_obj_.building_message_ = building_message;
        }
        // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.MessageOfObj.Building_message)
    }
    inline ::protobuf::MessageOfBuilding* MessageOfObj::_internal_mutable_building_message()
    {
        if (!_internal_has_building_message())
        {
            clear_message_of_obj();
            set_has_building_message();
            message_of_obj_.building_message_ = CreateMaybeMessage<::protobuf::MessageOfBuilding>(GetArenaForAllocation());
        }
        return message_of_obj_.building_message_;
    }
    inline ::protobuf::MessageOfBuilding* MessageOfObj::mutable_building_message()
    {
        ::protobuf::MessageOfBuilding* _msg = _internal_mutable_building_message();
        // @@protoc_insertion_point(field_mutable:protobuf.MessageOfObj.Building_message)
        return _msg;
    }

    // .protobuf.MessageOfBullet bullet_message = 3;
    inline bool MessageOfObj::_internal_has_bullet_message() const
    {
        return message_of_obj_case() == kBulletMessage;
    }
    inline bool MessageOfObj::has_bullet_message() const
    {
        return _internal_has_bullet_message();
    }
    inline void MessageOfObj::set_has_bullet_message()
    {
        _oneof_case_[0] = kBulletMessage;
    }
    inline void MessageOfObj::clear_bullet_message()
    {
        if (_internal_has_bullet_message())
        {
            if (GetArenaForAllocation() == nullptr)
            {
                delete message_of_obj_.bullet_message_;
            }
            clear_has_message_of_obj();
        }
    }
    inline ::protobuf::MessageOfBullet* MessageOfObj::release_bullet_message()
    {
        // @@protoc_insertion_point(field_release:protobuf.MessageOfObj.bullet_message)
        if (_internal_has_bullet_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfBullet* temp = message_of_obj_.bullet_message_;
            if (GetArenaForAllocation() != nullptr)
            {
                temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
            }
            message_of_obj_.bullet_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline const ::protobuf::MessageOfBullet& MessageOfObj::_internal_bullet_message() const
    {
        return _internal_has_bullet_message() ? *message_of_obj_.bullet_message_ : reinterpret_cast<::protobuf::MessageOfBullet&>(::protobuf::_MessageOfBullet_default_instance_);
    }
    inline const ::protobuf::MessageOfBullet& MessageOfObj::bullet_message() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfObj.bullet_message)
        return _internal_bullet_message();
    }
    inline ::protobuf::MessageOfBullet* MessageOfObj::unsafe_arena_release_bullet_message()
    {
        // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.MessageOfObj.bullet_message)
        if (_internal_has_bullet_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfBullet* temp = message_of_obj_.bullet_message_;
            message_of_obj_.bullet_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline void MessageOfObj::unsafe_arena_set_allocated_bullet_message(::protobuf::MessageOfBullet* bullet_message)
    {
        clear_message_of_obj();
        if (bullet_message)
        {
            set_has_bullet_message();
            message_of_obj_.bullet_message_ = bullet_message;
        }
        // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.MessageOfObj.bullet_message)
    }
    inline ::protobuf::MessageOfBullet* MessageOfObj::_internal_mutable_bullet_message()
    {
        if (!_internal_has_bullet_message())
        {
            clear_message_of_obj();
            set_has_bullet_message();
            message_of_obj_.bullet_message_ = CreateMaybeMessage<::protobuf::MessageOfBullet>(GetArenaForAllocation());
        }
        return message_of_obj_.bullet_message_;
    }
    inline ::protobuf::MessageOfBullet* MessageOfObj::mutable_bullet_message()
    {
        ::protobuf::MessageOfBullet* _msg = _internal_mutable_bullet_message();
        // @@protoc_insertion_point(field_mutable:protobuf.MessageOfObj.bullet_message)
        return _msg;
    }

    // .protobuf.MessageOfHome home_message = 4;
    inline bool MessageOfObj::_internal_has_home_message() const
    {
        return message_of_obj_case() == kHomeMessage;
    }
    inline bool MessageOfObj::has_home_message() const
    {
        return _internal_has_home_message();
    }
    inline void MessageOfObj::set_has_home_message()
    {
        _oneof_case_[0] = kHomeMessage;
    }
    inline void MessageOfObj::clear_home_message()
    {
        if (_internal_has_home_message())
        {
            if (GetArenaForAllocation() == nullptr)
            {
                delete message_of_obj_.home_message_;
            }
            clear_has_message_of_obj();
        }
    }
    inline ::protobuf::MessageOfHome* MessageOfObj::release_home_message()
    {
        // @@protoc_insertion_point(field_release:protobuf.MessageOfObj.home_message)
        if (_internal_has_home_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfHome* temp = message_of_obj_.home_message_;
            if (GetArenaForAllocation() != nullptr)
            {
                temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
            }
            message_of_obj_.home_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline const ::protobuf::MessageOfHome& MessageOfObj::_internal_home_message() const
    {
        return _internal_has_home_message() ? *message_of_obj_.home_message_ : reinterpret_cast<::protobuf::MessageOfHome&>(::protobuf::_MessageOfHome_default_instance_);
    }
    inline const ::protobuf::MessageOfHome& MessageOfObj::home_message() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfObj.home_message)
        return _internal_home_message();
    }
    inline ::protobuf::MessageOfHome* MessageOfObj::unsafe_arena_release_home_message()
    {
        // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.MessageOfObj.home_message)
        if (_internal_has_home_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfHome* temp = message_of_obj_.home_message_;
            message_of_obj_.home_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline void MessageOfObj::unsafe_arena_set_allocated_home_message(::protobuf::MessageOfHome* home_message)
    {
        clear_message_of_obj();
        if (home_message)
        {
            set_has_home_message();
            message_of_obj_.home_message_ = home_message;
        }
        // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.MessageOfObj.home_message)
    }
    inline ::protobuf::MessageOfHome* MessageOfObj::_internal_mutable_home_message()
    {
        if (!_internal_has_home_message())
        {
            clear_message_of_obj();
            set_has_home_message();
            message_of_obj_.home_message_ = CreateMaybeMessage<::protobuf::MessageOfHome>(GetArenaForAllocation());
        }
        return message_of_obj_.home_message_;
    }
    inline ::protobuf::MessageOfHome* MessageOfObj::mutable_home_message()
    {
        ::protobuf::MessageOfHome* _msg = _internal_mutable_home_message();
        // @@protoc_insertion_point(field_mutable:protobuf.MessageOfObj.home_message)
        return _msg;
    }

    // .protobuf.MessageOfResource resource_message = 5;
    inline bool MessageOfObj::_internal_has_resource_message() const
    {
        return message_of_obj_case() == kResourceMessage;
    }
    inline bool MessageOfObj::has_resource_message() const
    {
        return _internal_has_resource_message();
    }
    inline void MessageOfObj::set_has_resource_message()
    {
        _oneof_case_[0] = kResourceMessage;
    }
    inline void MessageOfObj::clear_resource_message()
    {
        if (_internal_has_resource_message())
        {
            if (GetArenaForAllocation() == nullptr)
            {
                delete message_of_obj_.resource_message_;
            }
            clear_has_message_of_obj();
        }
    }
    inline ::protobuf::MessageOfResource* MessageOfObj::release_resource_message()
    {
        // @@protoc_insertion_point(field_release:protobuf.MessageOfObj.resource_message)
        if (_internal_has_resource_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfResource* temp = message_of_obj_.resource_message_;
            if (GetArenaForAllocation() != nullptr)
            {
                temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
            }
            message_of_obj_.resource_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline const ::protobuf::MessageOfResource& MessageOfObj::_internal_resource_message() const
    {
        return _internal_has_resource_message() ? *message_of_obj_.resource_message_ : reinterpret_cast<::protobuf::MessageOfResource&>(::protobuf::_MessageOfResource_default_instance_);
    }
    inline const ::protobuf::MessageOfResource& MessageOfObj::resource_message() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfObj.resource_message)
        return _internal_resource_message();
    }
    inline ::protobuf::MessageOfResource* MessageOfObj::unsafe_arena_release_resource_message()
    {
        // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.MessageOfObj.resource_message)
        if (_internal_has_resource_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfResource* temp = message_of_obj_.resource_message_;
            message_of_obj_.resource_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline void MessageOfObj::unsafe_arena_set_allocated_resource_message(::protobuf::MessageOfResource* resource_message)
    {
        clear_message_of_obj();
        if (resource_message)
        {
            set_has_resource_message();
            message_of_obj_.resource_message_ = resource_message;
        }
        // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.MessageOfObj.resource_message)
    }
    inline ::protobuf::MessageOfResource* MessageOfObj::_internal_mutable_resource_message()
    {
        if (!_internal_has_resource_message())
        {
            clear_message_of_obj();
            set_has_resource_message();
            message_of_obj_.resource_message_ = CreateMaybeMessage<::protobuf::MessageOfResource>(GetArenaForAllocation());
        }
        return message_of_obj_.resource_message_;
    }
    inline ::protobuf::MessageOfResource* MessageOfObj::mutable_resource_message()
    {
        ::protobuf::MessageOfResource* _msg = _internal_mutable_resource_message();
        // @@protoc_insertion_point(field_mutable:protobuf.MessageOfObj.resource_message)
        return _msg;
    }

    // .protobuf.MessageOfMap map_message = 6;
    inline bool MessageOfObj::_internal_has_map_message() const
    {
        return message_of_obj_case() == kMapMessage;
    }
    inline bool MessageOfObj::has_map_message() const
    {
        return _internal_has_map_message();
    }
    inline void MessageOfObj::set_has_map_message()
    {
        _oneof_case_[0] = kMapMessage;
    }
    inline void MessageOfObj::clear_map_message()
    {
        if (_internal_has_map_message())
        {
            if (GetArenaForAllocation() == nullptr)
            {
                delete message_of_obj_.map_message_;
            }
            clear_has_message_of_obj();
        }
    }
    inline ::protobuf::MessageOfMap* MessageOfObj::release_map_message()
    {
        // @@protoc_insertion_point(field_release:protobuf.MessageOfObj.map_message)
        if (_internal_has_map_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfMap* temp = message_of_obj_.map_message_;
            if (GetArenaForAllocation() != nullptr)
            {
                temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
            }
            message_of_obj_.map_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline const ::protobuf::MessageOfMap& MessageOfObj::_internal_map_message() const
    {
        return _internal_has_map_message() ? *message_of_obj_.map_message_ : reinterpret_cast<::protobuf::MessageOfMap&>(::protobuf::_MessageOfMap_default_instance_);
    }
    inline const ::protobuf::MessageOfMap& MessageOfObj::map_message() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfObj.map_message)
        return _internal_map_message();
    }
    inline ::protobuf::MessageOfMap* MessageOfObj::unsafe_arena_release_map_message()
    {
        // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.MessageOfObj.map_message)
        if (_internal_has_map_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfMap* temp = message_of_obj_.map_message_;
            message_of_obj_.map_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline void MessageOfObj::unsafe_arena_set_allocated_map_message(::protobuf::MessageOfMap* map_message)
    {
        clear_message_of_obj();
        if (map_message)
        {
            set_has_map_message();
            message_of_obj_.map_message_ = map_message;
        }
        // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.MessageOfObj.map_message)
    }
    inline ::protobuf::MessageOfMap* MessageOfObj::_internal_mutable_map_message()
    {
        if (!_internal_has_map_message())
        {
            clear_message_of_obj();
            set_has_map_message();
            message_of_obj_.map_message_ = CreateMaybeMessage<::protobuf::MessageOfMap>(GetArenaForAllocation());
        }
        return message_of_obj_.map_message_;
    }
    inline ::protobuf::MessageOfMap* MessageOfObj::mutable_map_message()
    {
        ::protobuf::MessageOfMap* _msg = _internal_mutable_map_message();
        // @@protoc_insertion_point(field_mutable:protobuf.MessageOfObj.map_message)
        return _msg;
    }

    inline bool MessageOfObj::has_message_of_obj() const
    {
        return message_of_obj_case() != MESSAGE_OF_OBJ_NOT_SET;
    }
    inline void MessageOfObj::clear_has_message_of_obj()
    {
        _oneof_case_[0] = MESSAGE_OF_OBJ_NOT_SET;
    }
    inline MessageOfObj::MessageOfObjCase MessageOfObj::message_of_obj_case() const
    {
        return MessageOfObj::MessageOfObjCase(_oneof_case_[0]);
    }
    // -------------------------------------------------------------------

    // MessageOfAll

    // int32 game_time = 1;
    inline void MessageOfAll::clear_game_time()
    {
        game_time_ = 0;
    }
    inline int32_t MessageOfAll::_internal_game_time() const
    {
        return game_time_;
    }
    inline int32_t MessageOfAll::game_time() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfAll.game_time)
        return _internal_game_time();
    }
    inline void MessageOfAll::_internal_set_game_time(int32_t value)
    {
        game_time_ = value;
    }
    inline void MessageOfAll::set_game_time(int32_t value)
    {
        _internal_set_game_time(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfAll.game_time)
    }

    // -------------------------------------------------------------------

    // MessageToClient

    // repeated .protobuf.MessageOfObj obj_message = 1;
    inline int MessageToClient::_internal_obj_message_size() const
    {
        return obj_message_.size();
    }
    inline int MessageToClient::obj_message_size() const
    {
        return _internal_obj_message_size();
    }
    inline void MessageToClient::clear_obj_message()
    {
        obj_message_.Clear();
    }
    inline ::protobuf::MessageOfObj* MessageToClient::mutable_obj_message(int index)
    {
        // @@protoc_insertion_point(field_mutable:protobuf.MessageToClient.obj_message)
        return obj_message_.Mutable(index);
    }
    inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfObj>*
        MessageToClient::mutable_obj_message()
    {
        // @@protoc_insertion_point(field_mutable_list:protobuf.MessageToClient.obj_message)
        return &obj_message_;
    }
    inline const ::protobuf::MessageOfObj& MessageToClient::_internal_obj_message(int index) const
    {
        return obj_message_.Get(index);
    }
    inline const ::protobuf::MessageOfObj& MessageToClient::obj_message(int index) const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageToClient.obj_message)
        return _internal_obj_message(index);
    }
    inline ::protobuf::MessageOfObj* MessageToClient::_internal_add_obj_message()
    {
        return obj_message_.Add();
    }
    inline ::protobuf::MessageOfObj* MessageToClient::add_obj_message()
    {
        ::protobuf::MessageOfObj* _add = _internal_add_obj_message();
        // @@protoc_insertion_point(field_add:protobuf.MessageToClient.obj_message)
        return _add;
    }
    inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfObj>&
        MessageToClient::obj_message() const
    {
        // @@protoc_insertion_point(field_list:protobuf.MessageToClient.obj_message)
        return obj_message_;
    }

    // .protobuf.GameState game_state = 2;
    inline void MessageToClient::clear_game_state()
    {
        game_state_ = 0;
    }
    inline ::protobuf::GameState MessageToClient::_internal_game_state() const
    {
        return static_cast<::protobuf::GameState>(game_state_);
    }
    inline ::protobuf::GameState MessageToClient::game_state() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageToClient.game_state)
        return _internal_game_state();
    }
    inline void MessageToClient::_internal_set_game_state(::protobuf::GameState value)
    {
        game_state_ = value;
    }
    inline void MessageToClient::set_game_state(::protobuf::GameState value)
    {
        _internal_set_game_state(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageToClient.game_state)
    }

    // .protobuf.MessageOfAll all_message = 3;
    inline bool MessageToClient::_internal_has_all_message() const
    {
        return this != internal_default_instance() && all_message_ != nullptr;
    }
    inline bool MessageToClient::has_all_message() const
    {
        return _internal_has_all_message();
    }
    inline void MessageToClient::clear_all_message()
    {
        if (GetArenaForAllocation() == nullptr && all_message_ != nullptr)
        {
            delete all_message_;
        }
        all_message_ = nullptr;
    }
    inline const ::protobuf::MessageOfAll& MessageToClient::_internal_all_message() const
    {
        const ::protobuf::MessageOfAll* p = all_message_;
        return p != nullptr ? *p : reinterpret_cast<const ::protobuf::MessageOfAll&>(::protobuf::_MessageOfAll_default_instance_);
    }
    inline const ::protobuf::MessageOfAll& MessageToClient::all_message() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageToClient.all_message)
        return _internal_all_message();
    }
    inline void MessageToClient::unsafe_arena_set_allocated_all_message(
        ::protobuf::MessageOfAll* all_message
    )
    {
        if (GetArenaForAllocation() == nullptr)
        {
            delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(all_message_);
        }
        all_message_ = all_message;
        if (all_message)
        {
        }
        else
        {
        }
        // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.MessageToClient.all_message)
    }
    inline ::protobuf::MessageOfAll* MessageToClient::release_all_message()
    {
        ::protobuf::MessageOfAll* temp = all_message_;
        all_message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
        auto* old = reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
        temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
        if (GetArenaForAllocation() == nullptr)
        {
            delete old;
        }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
        if (GetArenaForAllocation() != nullptr)
        {
            temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
        }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
        return temp;
    }
    inline ::protobuf::MessageOfAll* MessageToClient::unsafe_arena_release_all_message()
    {
        // @@protoc_insertion_point(field_release:protobuf.MessageToClient.all_message)

        ::protobuf::MessageOfAll* temp = all_message_;
        all_message_ = nullptr;
        return temp;
    }
    inline ::protobuf::MessageOfAll* MessageToClient::_internal_mutable_all_message()
    {
        if (all_message_ == nullptr)
        {
            auto* p = CreateMaybeMessage<::protobuf::MessageOfAll>(GetArenaForAllocation());
            all_message_ = p;
        }
        return all_message_;
    }
    inline ::protobuf::MessageOfAll* MessageToClient::mutable_all_message()
    {
        ::protobuf::MessageOfAll* _msg = _internal_mutable_all_message();
        // @@protoc_insertion_point(field_mutable:protobuf.MessageToClient.all_message)
        return _msg;
    }
    inline void MessageToClient::set_allocated_all_message(::protobuf::MessageOfAll* all_message)
    {
        ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
        if (message_arena == nullptr)
        {
            delete all_message_;
        }
        if (all_message)
        {
            ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
                ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(all_message);
            if (message_arena != submessage_arena)
            {
                all_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
                    message_arena, all_message, submessage_arena
                );
            }
        }
        else
        {
        }
        all_message_ = all_message;
        // @@protoc_insertion_point(field_set_allocated:protobuf.MessageToClient.all_message)
    }

    // -------------------------------------------------------------------

    // MoveRes

    // int64 actual_speed = 1;
    inline void MoveRes::clear_actual_speed()
    {
        actual_speed_ = int64_t{0};
    }
    inline int64_t MoveRes::_internal_actual_speed() const
    {
        return actual_speed_;
    }
    inline int64_t MoveRes::actual_speed() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MoveRes.actual_speed)
        return _internal_actual_speed();
    }
    inline void MoveRes::_internal_set_actual_speed(int64_t value)
    {
        actual_speed_ = value;
    }
    inline void MoveRes::set_actual_speed(int64_t value)
    {
        _internal_set_actual_speed(value);
        // @@protoc_insertion_point(field_set:protobuf.MoveRes.actual_speed)
    }

    // double actual_angle = 2;
    inline void MoveRes::clear_actual_angle()
    {
        actual_angle_ = 0;
    }
    inline double MoveRes::_internal_actual_angle() const
    {
        return actual_angle_;
    }
    inline double MoveRes::actual_angle() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MoveRes.actual_angle)
        return _internal_actual_angle();
    }
    inline void MoveRes::_internal_set_actual_angle(double value)
    {
        actual_angle_ = value;
    }
    inline void MoveRes::set_actual_angle(double value)
    {
        _internal_set_actual_angle(value);
        // @@protoc_insertion_point(field_set:protobuf.MoveRes.actual_angle)
    }

    // bool act_success = 3;
    inline void MoveRes::clear_act_success()
    {
        act_success_ = false;
    }
    inline bool MoveRes::_internal_act_success() const
    {
        return act_success_;
    }
    inline bool MoveRes::act_success() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MoveRes.act_success)
        return _internal_act_success();
    }
    inline void MoveRes::_internal_set_act_success(bool value)
    {
        act_success_ = value;
    }
    inline void MoveRes::set_act_success(bool value)
    {
        _internal_set_act_success(value);
        // @@protoc_insertion_point(field_set:protobuf.MoveRes.act_success)
    }

    // -------------------------------------------------------------------

    // BoolRes

    // bool act_success = 1;
    inline void BoolRes::clear_act_success()
    {
        act_success_ = false;
    }
    inline bool BoolRes::_internal_act_success() const
    {
        return act_success_;
    }
    inline bool BoolRes::act_success() const
    {
        // @@protoc_insertion_point(field_get:protobuf.BoolRes.act_success)
        return _internal_act_success();
    }
    inline void BoolRes::_internal_set_act_success(bool value)
    {
        act_success_ = value;
    }
    inline void BoolRes::set_act_success(bool value)
    {
        _internal_set_act_success(value);
        // @@protoc_insertion_point(field_set:protobuf.BoolRes.act_success)
    }

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__
    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_Message2Clients_2eproto
