// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message2Clients.proto

#include "Message2Clients.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace protobuf
{
    PROTOBUF_CONSTEXPR MessageOfShip::MessageOfShip(
        ::_pbi::ConstantInitialized
    ) :
        x_(0),
        y_(0),
        speed_(0),
        hp_(0),
        armor_(0),
        shield_(0),
        place_(0)

        ,
        ship_state_(0)

        ,
        ship_id_(int64_t{0}),
        team_(0)

        ,
        recover_speed_(0),
        economy_(0),
        collector_type_(0)

        ,
        armor_type_(0)

        ,
        shield_type_(0)

        ,
        builder_type_(0)

        ,
        bullet_type_(0)

        ,
        facing_direction_(0),
        ship_type_(0)
    {
    }
    struct MessageOfShipDefaultTypeInternal
    {
        PROTOBUF_CONSTEXPR MessageOfShipDefaultTypeInternal() :
            _instance(::_pbi::ConstantInitialized{})
        {
        }
        ~MessageOfShipDefaultTypeInternal()
        {
        }
        union
        {
            MessageOfShip _instance;
        };
    };
    PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageOfShipDefaultTypeInternal _MessageOfShip_default_instance_;
    PROTOBUF_CONSTEXPR MessageOfBuilding::MessageOfBuilding(
        ::_pbi::ConstantInitialized
    ) :
        x_(0),
        y_(0),
        hp_(0),
        building_type_(0)

        ,
        building_id_(int64_t{0}),
        team_(0)
    {
    }
    struct MessageOfBuildingDefaultTypeInternal
    {
        PROTOBUF_CONSTEXPR MessageOfBuildingDefaultTypeInternal() :
            _instance(::_pbi::ConstantInitialized{})
        {
        }
        ~MessageOfBuildingDefaultTypeInternal()
        {
        }
        union
        {
            MessageOfBuilding _instance;
        };
    };
    PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageOfBuildingDefaultTypeInternal _MessageOfBuilding_default_instance_;
    PROTOBUF_CONSTEXPR MessageOfBullet::MessageOfBullet(
        ::_pbi::ConstantInitialized
    ) :
        type_(0)

        ,
        x_(0),
        facing_direction_(0),
        guid_(int64_t{0}),
        y_(0),
        damage_(0),
        armor_rate_(0),
        shield_rate_(0),
        bomb_range_(0),
        team_(0)

        ,
        speed_(0)
    {
    }
    struct MessageOfBulletDefaultTypeInternal
    {
        PROTOBUF_CONSTEXPR MessageOfBulletDefaultTypeInternal() :
            _instance(::_pbi::ConstantInitialized{})
        {
        }
        ~MessageOfBulletDefaultTypeInternal()
        {
        }
        union
        {
            MessageOfBullet _instance;
        };
    };
    PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageOfBulletDefaultTypeInternal _MessageOfBullet_default_instance_;
    PROTOBUF_CONSTEXPR MessageOfResource::MessageOfResource(
        ::_pbi::ConstantInitialized
    ) :
        x_(0),
        y_(0),
        progress_(0)
    {
    }
    struct MessageOfResourceDefaultTypeInternal
    {
        PROTOBUF_CONSTEXPR MessageOfResourceDefaultTypeInternal() :
            _instance(::_pbi::ConstantInitialized{})
        {
        }
        ~MessageOfResourceDefaultTypeInternal()
        {
        }
        union
        {
            MessageOfResource _instance;
        };
    };
    PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageOfResourceDefaultTypeInternal _MessageOfResource_default_instance_;
    PROTOBUF_CONSTEXPR MessageOfHome::MessageOfHome(
        ::_pbi::ConstantInitialized
    ) :
        x_(0),
        y_(0),
        economy_(0),
        hp_(0),
        team_(0)
    {
    }
    struct MessageOfHomeDefaultTypeInternal
    {
        PROTOBUF_CONSTEXPR MessageOfHomeDefaultTypeInternal() :
            _instance(::_pbi::ConstantInitialized{})
        {
        }
        ~MessageOfHomeDefaultTypeInternal()
        {
        }
        union
        {
            MessageOfHome _instance;
        };
    };
    PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageOfHomeDefaultTypeInternal _MessageOfHome_default_instance_;
    PROTOBUF_CONSTEXPR MessageOfMap_Row::MessageOfMap_Row(
        ::_pbi::ConstantInitialized
    ) :
        col_(),
        _col_cached_byte_size_(0)
    {
    }
    struct MessageOfMap_RowDefaultTypeInternal
    {
        PROTOBUF_CONSTEXPR MessageOfMap_RowDefaultTypeInternal() :
            _instance(::_pbi::ConstantInitialized{})
        {
        }
        ~MessageOfMap_RowDefaultTypeInternal()
        {
        }
        union
        {
            MessageOfMap_Row _instance;
        };
    };
    PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageOfMap_RowDefaultTypeInternal _MessageOfMap_Row_default_instance_;
    PROTOBUF_CONSTEXPR MessageOfMap::MessageOfMap(
        ::_pbi::ConstantInitialized
    ) :
        row_()
    {
    }
    struct MessageOfMapDefaultTypeInternal
    {
        PROTOBUF_CONSTEXPR MessageOfMapDefaultTypeInternal() :
            _instance(::_pbi::ConstantInitialized{})
        {
        }
        ~MessageOfMapDefaultTypeInternal()
        {
        }
        union
        {
            MessageOfMap _instance;
        };
    };
    PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageOfMapDefaultTypeInternal _MessageOfMap_default_instance_;
    PROTOBUF_CONSTEXPR MessageOfObj::MessageOfObj(
        ::_pbi::ConstantInitialized
    ) :
        _oneof_case_{}
    {
    }
    struct MessageOfObjDefaultTypeInternal
    {
        PROTOBUF_CONSTEXPR MessageOfObjDefaultTypeInternal() :
            _instance(::_pbi::ConstantInitialized{})
        {
        }
        ~MessageOfObjDefaultTypeInternal()
        {
        }
        union
        {
            MessageOfObj _instance;
        };
    };
    PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageOfObjDefaultTypeInternal _MessageOfObj_default_instance_;
    PROTOBUF_CONSTEXPR MessageOfAll::MessageOfAll(
        ::_pbi::ConstantInitialized
    ) :
        game_time_(0)
    {
    }
    struct MessageOfAllDefaultTypeInternal
    {
        PROTOBUF_CONSTEXPR MessageOfAllDefaultTypeInternal() :
            _instance(::_pbi::ConstantInitialized{})
        {
        }
        ~MessageOfAllDefaultTypeInternal()
        {
        }
        union
        {
            MessageOfAll _instance;
        };
    };
    PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageOfAllDefaultTypeInternal _MessageOfAll_default_instance_;
    PROTOBUF_CONSTEXPR MessageToClient::MessageToClient(
        ::_pbi::ConstantInitialized
    ) :
        obj_message_(),
        all_message_(nullptr),
        game_state_(0)
    {
    }
    struct MessageToClientDefaultTypeInternal
    {
        PROTOBUF_CONSTEXPR MessageToClientDefaultTypeInternal() :
            _instance(::_pbi::ConstantInitialized{})
        {
        }
        ~MessageToClientDefaultTypeInternal()
        {
        }
        union
        {
            MessageToClient _instance;
        };
    };
    PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageToClientDefaultTypeInternal _MessageToClient_default_instance_;
    PROTOBUF_CONSTEXPR MoveRes::MoveRes(
        ::_pbi::ConstantInitialized
    ) :
        actual_speed_(int64_t{0}),
        actual_angle_(0),
        act_success_(false)
    {
    }
    struct MoveResDefaultTypeInternal
    {
        PROTOBUF_CONSTEXPR MoveResDefaultTypeInternal() :
            _instance(::_pbi::ConstantInitialized{})
        {
        }
        ~MoveResDefaultTypeInternal()
        {
        }
        union
        {
            MoveRes _instance;
        };
    };
    PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MoveResDefaultTypeInternal _MoveRes_default_instance_;
    PROTOBUF_CONSTEXPR BoolRes::BoolRes(
        ::_pbi::ConstantInitialized
    ) :
        act_success_(false)
    {
    }
    struct BoolResDefaultTypeInternal
    {
        PROTOBUF_CONSTEXPR BoolResDefaultTypeInternal() :
            _instance(::_pbi::ConstantInitialized{})
        {
        }
        ~BoolResDefaultTypeInternal()
        {
        }
        union
        {
            BoolRes _instance;
        };
    };
    PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BoolResDefaultTypeInternal _BoolRes_default_instance_;
}  // namespace protobuf
static ::_pb::Metadata file_level_metadata_Message2Clients_2eproto[12];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_Message2Clients_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_Message2Clients_2eproto = nullptr;

const uint32_t TableStruct_Message2Clients_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfShip, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfShip, x_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfShip, y_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfShip, speed_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfShip, hp_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfShip, armor_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfShip, shield_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfShip, place_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfShip, ship_state_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfShip, team_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfShip, ship_id_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfShip, recover_speed_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfShip, economy_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfShip, collector_type_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfShip, armor_type_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfShip, shield_type_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfShip, builder_type_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfShip, bullet_type_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfShip, ship_type_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfShip, facing_direction_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfBuilding, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfBuilding, x_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfBuilding, y_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfBuilding, hp_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfBuilding, building_type_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfBuilding, team_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfBuilding, building_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfBullet, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfBullet, type_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfBullet, x_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfBullet, y_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfBullet, facing_direction_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfBullet, guid_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfBullet, armor_rate_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfBullet, shield_rate_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfBullet, damage_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfBullet, team_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfBullet, bomb_range_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfBullet, speed_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfResource, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfResource, x_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfResource, y_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfResource, progress_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfHome, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfHome, x_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfHome, y_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfHome, economy_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfHome, hp_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfHome, team_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfMap_Row, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfMap_Row, col_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfMap, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfMap, row_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfObj, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfObj, _oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfObj, message_of_obj_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfAll, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageOfAll, game_time_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageToClient, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageToClient, obj_message_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageToClient, game_state_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MessageToClient, all_message_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf::MoveRes, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    PROTOBUF_FIELD_OFFSET(::protobuf::MoveRes, actual_speed_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MoveRes, actual_angle_),
    PROTOBUF_FIELD_OFFSET(::protobuf::MoveRes, act_success_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf::BoolRes, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    PROTOBUF_FIELD_OFFSET(::protobuf::BoolRes, act_success_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    {0, -1, -1, sizeof(::protobuf::MessageOfShip)},
    {25, -1, -1, sizeof(::protobuf::MessageOfBuilding)},
    {37, -1, -1, sizeof(::protobuf::MessageOfBullet)},
    {54, -1, -1, sizeof(::protobuf::MessageOfResource)},
    {63, -1, -1, sizeof(::protobuf::MessageOfHome)},
    {74, -1, -1, sizeof(::protobuf::MessageOfMap_Row)},
    {81, -1, -1, sizeof(::protobuf::MessageOfMap)},
    {88, -1, -1, sizeof(::protobuf::MessageOfObj)},
    {101, -1, -1, sizeof(::protobuf::MessageOfAll)},
    {108, -1, -1, sizeof(::protobuf::MessageToClient)},
    {117, -1, -1, sizeof(::protobuf::MoveRes)},
    {126, -1, -1, sizeof(::protobuf::BoolRes)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::protobuf::_MessageOfShip_default_instance_._instance,
    &::protobuf::_MessageOfBuilding_default_instance_._instance,
    &::protobuf::_MessageOfBullet_default_instance_._instance,
    &::protobuf::_MessageOfResource_default_instance_._instance,
    &::protobuf::_MessageOfHome_default_instance_._instance,
    &::protobuf::_MessageOfMap_Row_default_instance_._instance,
    &::protobuf::_MessageOfMap_default_instance_._instance,
    &::protobuf::_MessageOfObj_default_instance_._instance,
    &::protobuf::_MessageOfAll_default_instance_._instance,
    &::protobuf::_MessageToClient_default_instance_._instance,
    &::protobuf::_MoveRes_default_instance_._instance,
    &::protobuf::_BoolRes_default_instance_._instance,
};

const char descriptor_table_protodef_Message2Clients_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
    "\n\025Message2Clients.proto\022\010protobuf\032\021Messa"
    "geType.proto\"\247\004\n\rMessageOfShip\022\t\n\001x\030\001 \001("
    "\005\022\t\n\001y\030\002 \001(\005\022\r\n\005speed\030\003 \001(\005\022\n\n\002hp\030\004 \001(\005\022"
    "\r\n\005armor\030\005 \001(\005\022\016\n\006shield\030\006 \001(\005\022\"\n\005place\030"
    "\007 \001(\0162\023.protobuf.PlaceType\022\'\n\nship_state"
    "\030\010 \001(\0162\023.protobuf.ShipState\022\"\n\004team\030\t \001("
    "\0162\024.protobuf.PlayerTeam\022\017\n\007ship_id\030\n \001(\003"
    "\022\025\n\rRecover_speed\030\013 \001(\005\022\017\n\007economy\030\014 \001(\005"
    "\022/\n\016collector_type\030\r \001(\0162\027.protobuf.Coll"
    "ectorType\022\'\n\narmor_type\030\016 \001(\0162\023.protobuf"
    ".ArmorType\022)\n\013shield_type\030\017 \001(\0162\024.protob"
    "uf.ShieldType\022+\n\014builder_type\030\020 \001(\0162\025.pr"
    "otobuf.BuilderType\022)\n\013bullet_type\030\021 \001(\0162"
    "\024.protobuf.BulletType\022%\n\tship_type\030\022 \001(\016"
    "2\022.protobuf.ShipType\022\030\n\020facing_direction"
    "\030\023 \001(\001\"\235\001\n\021MessageOfBuilding\022\t\n\001x\030\001 \001(\005\022"
    "\t\n\001y\030\002 \001(\005\022\n\n\002hp\030\003 \001(\005\022-\n\rbuilding_type\030"
    "\004 \001(\0162\026.protobuf.BuildingType\022\"\n\004team\030\005 "
    "\001(\0162\024.protobuf.PlayerTeam\022\023\n\013building_id"
    "\030\006 \001(\003\"\363\001\n\017MessageOfBullet\022\"\n\004type\030\001 \001(\016"
    "2\024.protobuf.BulletType\022\t\n\001x\030\002 \001(\005\022\t\n\001y\030\003"
    " \001(\005\022\030\n\020facing_direction\030\004 \001(\001\022\014\n\004guid\030\005"
    " \001(\003\022\022\n\narmor_rate\030\006 \001(\001\022\023\n\013shield_rate\030"
    "\007 \001(\001\022\016\n\006damage\030\010 \001(\005\022\"\n\004team\030\t \001(\0162\024.pr"
    "otobuf.PlayerTeam\022\022\n\nbomb_range\030\n \001(\001\022\r\n"
    "\005speed\030\013 \001(\005\";\n\021MessageOfResource\022\t\n\001x\030\001"
    " \001(\005\022\t\n\001y\030\002 \001(\005\022\020\n\010progress\030\003 \001(\005\"f\n\rMes"
    "sageOfHome\022\t\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\022\017\n\007econ"
    "omy\030\003 \001(\005\022\n\n\002hp\030\004 \001(\005\022\"\n\004team\030\005 \001(\0162\024.pr"
    "otobuf.PlayerTeam\"`\n\014MessageOfMap\022\'\n\003row"
    "\030\002 \003(\0132\032.protobuf.MessageOfMap.Row\032\'\n\003Ro"
    "w\022 \n\003col\030\001 \003(\0162\023.protobuf.PlaceType\"\330\002\n\014"
    "MessageOfObj\022/\n\014ship_message\030\001 \001(\0132\027.pro"
    "tobuf.MessageOfShipH\000\0227\n\020Building_messag"
    "e\030\002 \001(\0132\033.protobuf.MessageOfBuildingH\000\0223"
    "\n\016bullet_message\030\003 \001(\0132\031.protobuf.Messag"
    "eOfBulletH\000\022/\n\014home_message\030\004 \001(\0132\027.prot"
    "obuf.MessageOfHomeH\000\0227\n\020resource_message"
    "\030\005 \001(\0132\033.protobuf.MessageOfResourceH\000\022-\n"
    "\013map_message\030\006 \001(\0132\026.protobuf.MessageOfM"
    "apH\000B\020\n\016message_of_obj\"!\n\014MessageOfAll\022\021"
    "\n\tgame_time\030\001 \001(\005\"\224\001\n\017MessageToClient\022+\n"
    "\013obj_message\030\001 \003(\0132\026.protobuf.MessageOfO"
    "bj\022\'\n\ngame_state\030\002 \001(\0162\023.protobuf.GameSt"
    "ate\022+\n\013all_message\030\003 \001(\0132\026.protobuf.Mess"
    "ageOfAll\"J\n\007MoveRes\022\024\n\014actual_speed\030\001 \001("
    "\003\022\024\n\014actual_angle\030\002 \001(\001\022\023\n\013act_success\030\003"
    " \001(\010\"\036\n\007BoolRes\022\023\n\013act_success\030\001 \001(\010b\006pr"
    "oto3";
static const ::_pbi::DescriptorTable* const descriptor_table_Message2Clients_2eproto_deps[1] = {
    &::descriptor_table_MessageType_2eproto,
};
static ::_pbi::once_flag descriptor_table_Message2Clients_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Message2Clients_2eproto = {
    false,
    false,
    1924,
    descriptor_table_protodef_Message2Clients_2eproto,
    "Message2Clients.proto",
    &descriptor_table_Message2Clients_2eproto_once,
    descriptor_table_Message2Clients_2eproto_deps,
    1,
    12,
    schemas,
    file_default_instances,
    TableStruct_Message2Clients_2eproto::offsets,
    file_level_metadata_Message2Clients_2eproto,
    file_level_enum_descriptors_Message2Clients_2eproto,
    file_level_service_descriptors_Message2Clients_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Message2Clients_2eproto_getter()
{
    return &descriptor_table_Message2Clients_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_Message2Clients_2eproto(&descriptor_table_Message2Clients_2eproto);
namespace protobuf
{

    // ===================================================================

    class MessageOfShip::_Internal
    {
    public:
    };

    MessageOfShip::MessageOfShip(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned) :
        ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned)
    {
        SharedCtor();
        // @@protoc_insertion_point(arena_constructor:protobuf.MessageOfShip)
    }
    MessageOfShip::MessageOfShip(const MessageOfShip& from) :
        ::PROTOBUF_NAMESPACE_ID::Message()
    {
        _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
        ::memcpy(&x_, &from.x_, static_cast<size_t>(reinterpret_cast<char*>(&ship_type_) - reinterpret_cast<char*>(&x_)) + sizeof(ship_type_));
        // @@protoc_insertion_point(copy_constructor:protobuf.MessageOfShip)
    }

    inline void MessageOfShip::SharedCtor()
    {
        ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(reinterpret_cast<char*>(&x_) - reinterpret_cast<char*>(this)), 0, static_cast<size_t>(reinterpret_cast<char*>(&ship_type_) - reinterpret_cast<char*>(&x_)) + sizeof(ship_type_));
    }

    MessageOfShip::~MessageOfShip()
    {
        // @@protoc_insertion_point(destructor:protobuf.MessageOfShip)
        if (auto* arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>())
        {
            (void)arena;
            return;
        }
        SharedDtor();
    }

    inline void MessageOfShip::SharedDtor()
    {
        GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
    }

    void MessageOfShip::SetCachedSize(int size) const
    {
        _cached_size_.Set(size);
    }

    void MessageOfShip::Clear()
    {
        // @@protoc_insertion_point(message_clear_start:protobuf.MessageOfShip)
        uint32_t cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        ::memset(&x_, 0, static_cast<size_t>(reinterpret_cast<char*>(&ship_type_) - reinterpret_cast<char*>(&x_)) + sizeof(ship_type_));
        _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
    }

    const char* MessageOfShip::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx)
    {
#define CHK_(x)                       \
    if (PROTOBUF_PREDICT_FALSE(!(x))) \
    goto failure
        while (!ctx->Done(&ptr))
        {
            uint32_t tag;
            ptr = ::_pbi::ReadTag(ptr, &tag);
            switch (tag >> 3)
            {
                // int32 x = 1;
                case 1:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8))
                    {
                        x_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                // int32 y = 2;
                case 2:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16))
                    {
                        y_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                // int32 speed = 3;
                case 3:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24))
                    {
                        speed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                // int32 hp = 4;
                case 4:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32))
                    {
                        hp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                // int32 armor = 5;
                case 5:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40))
                    {
                        armor_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                // int32 shield = 6;
                case 6:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48))
                    {
                        shield_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                // .protobuf.PlaceType place = 7;
                case 7:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56))
                    {
                        uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
                        CHK_(ptr);
                        _internal_set_place(static_cast<::protobuf::PlaceType>(val));
                    }
                    else
                        goto handle_unusual;
                    continue;
                // .protobuf.ShipState ship_state = 8;
                case 8:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64))
                    {
                        uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
                        CHK_(ptr);
                        _internal_set_ship_state(static_cast<::protobuf::ShipState>(val));
                    }
                    else
                        goto handle_unusual;
                    continue;
                // .protobuf.PlayerTeam team = 9;
                case 9:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72))
                    {
                        uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
                        CHK_(ptr);
                        _internal_set_team(static_cast<::protobuf::PlayerTeam>(val));
                    }
                    else
                        goto handle_unusual;
                    continue;
                // int64 ship_id = 10;
                case 10:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80))
                    {
                        ship_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                // int32 Recover_speed = 11;
                case 11:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88))
                    {
                        recover_speed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                // int32 economy = 12;
                case 12:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96))
                    {
                        economy_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                // .protobuf.CollectorType collector_type = 13;
                case 13:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104))
                    {
                        uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
                        CHK_(ptr);
                        _internal_set_collector_type(static_cast<::protobuf::CollectorType>(val));
                    }
                    else
                        goto handle_unusual;
                    continue;
                // .protobuf.ArmorType armor_type = 14;
                case 14:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112))
                    {
                        uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
                        CHK_(ptr);
                        _internal_set_armor_type(static_cast<::protobuf::ArmorType>(val));
                    }
                    else
                        goto handle_unusual;
                    continue;
                // .protobuf.ShieldType shield_type = 15;
                case 15:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120))
                    {
                        uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
                        CHK_(ptr);
                        _internal_set_shield_type(static_cast<::protobuf::ShieldType>(val));
                    }
                    else
                        goto handle_unusual;
                    continue;
                // .protobuf.BuilderType builder_type = 16;
                case 16:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128))
                    {
                        uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
                        CHK_(ptr);
                        _internal_set_builder_type(static_cast<::protobuf::BuilderType>(val));
                    }
                    else
                        goto handle_unusual;
                    continue;
                // .protobuf.BulletType bullet_type = 17;
                case 17:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 136))
                    {
                        uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
                        CHK_(ptr);
                        _internal_set_bullet_type(static_cast<::protobuf::BulletType>(val));
                    }
                    else
                        goto handle_unusual;
                    continue;
                // .protobuf.ShipType ship_type = 18;
                case 18:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144))
                    {
                        uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
                        CHK_(ptr);
                        _internal_set_ship_type(static_cast<::protobuf::ShipType>(val));
                    }
                    else
                        goto handle_unusual;
                    continue;
                // double facing_direction = 19;
                case 19:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 153))
                    {
                        facing_direction_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
                        ptr += sizeof(double);
                    }
                    else
                        goto handle_unusual;
                    continue;
                default:
                    goto handle_unusual;
            }  // switch
        handle_unusual:
            if ((tag == 0) || ((tag & 7) == 4))
            {
                CHK_(ptr);
                ctx->SetLastTag(tag);
                goto message_done;
            }
            ptr = UnknownFieldParse(
                tag,
                _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
                ptr,
                ctx
            );
            CHK_(ptr != nullptr);
        }  // while
    message_done:
        return ptr;
    failure:
        ptr = nullptr;
        goto message_done;
#undef CHK_
    }

    uint8_t* MessageOfShip::_InternalSerialize(
        uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
    ) const
    {
        // @@protoc_insertion_point(serialize_to_array_start:protobuf.MessageOfShip)
        uint32_t cached_has_bits = 0;
        (void)cached_has_bits;

        // int32 x = 1;
        if (this->_internal_x() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_x(), target);
        }

        // int32 y = 2;
        if (this->_internal_y() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_y(), target);
        }

        // int32 speed = 3;
        if (this->_internal_speed() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_speed(), target);
        }

        // int32 hp = 4;
        if (this->_internal_hp() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_hp(), target);
        }

        // int32 armor = 5;
        if (this->_internal_armor() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_armor(), target);
        }

        // int32 shield = 6;
        if (this->_internal_shield() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_shield(), target);
        }

        // .protobuf.PlaceType place = 7;
        if (this->_internal_place() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                7, this->_internal_place(), target
            );
        }

        // .protobuf.ShipState ship_state = 8;
        if (this->_internal_ship_state() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                8, this->_internal_ship_state(), target
            );
        }

        // .protobuf.PlayerTeam team = 9;
        if (this->_internal_team() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                9, this->_internal_team(), target
            );
        }

        // int64 ship_id = 10;
        if (this->_internal_ship_id() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt64ToArray(10, this->_internal_ship_id(), target);
        }

        // int32 Recover_speed = 11;
        if (this->_internal_recover_speed() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(11, this->_internal_recover_speed(), target);
        }

        // int32 economy = 12;
        if (this->_internal_economy() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(12, this->_internal_economy(), target);
        }

        // .protobuf.CollectorType collector_type = 13;
        if (this->_internal_collector_type() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                13, this->_internal_collector_type(), target
            );
        }

        // .protobuf.ArmorType armor_type = 14;
        if (this->_internal_armor_type() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                14, this->_internal_armor_type(), target
            );
        }

        // .protobuf.ShieldType shield_type = 15;
        if (this->_internal_shield_type() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                15, this->_internal_shield_type(), target
            );
        }

        // .protobuf.BuilderType builder_type = 16;
        if (this->_internal_builder_type() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                16, this->_internal_builder_type(), target
            );
        }

        // .protobuf.BulletType bullet_type = 17;
        if (this->_internal_bullet_type() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                17, this->_internal_bullet_type(), target
            );
        }

        // .protobuf.ShipType ship_type = 18;
        if (this->_internal_ship_type() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                18, this->_internal_ship_type(), target
            );
        }

        // double facing_direction = 19;
        static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
        double tmp_facing_direction = this->_internal_facing_direction();
        uint64_t raw_facing_direction;
        memcpy(&raw_facing_direction, &tmp_facing_direction, sizeof(tmp_facing_direction));
        if (raw_facing_direction != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(19, this->_internal_facing_direction(), target);
        }

        if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields()))
        {
            target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream
            );
        }
        // @@protoc_insertion_point(serialize_to_array_end:protobuf.MessageOfShip)
        return target;
    }

    size_t MessageOfShip::ByteSizeLong() const
    {
        // @@protoc_insertion_point(message_byte_size_start:protobuf.MessageOfShip)
        size_t total_size = 0;

        uint32_t cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        // int32 x = 1;
        if (this->_internal_x() != 0)
        {
            total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_x());
        }

        // int32 y = 2;
        if (this->_internal_y() != 0)
        {
            total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_y());
        }

        // int32 speed = 3;
        if (this->_internal_speed() != 0)
        {
            total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_speed());
        }

        // int32 hp = 4;
        if (this->_internal_hp() != 0)
        {
            total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_hp());
        }

        // int32 armor = 5;
        if (this->_internal_armor() != 0)
        {
            total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_armor());
        }

        // int32 shield = 6;
        if (this->_internal_shield() != 0)
        {
            total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_shield());
        }

        // .protobuf.PlaceType place = 7;
        if (this->_internal_place() != 0)
        {
            total_size += 1 +
                          ::_pbi::WireFormatLite::EnumSize(this->_internal_place());
        }

        // .protobuf.ShipState ship_state = 8;
        if (this->_internal_ship_state() != 0)
        {
            total_size += 1 +
                          ::_pbi::WireFormatLite::EnumSize(this->_internal_ship_state());
        }

        // int64 ship_id = 10;
        if (this->_internal_ship_id() != 0)
        {
            total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_ship_id());
        }

        // .protobuf.PlayerTeam team = 9;
        if (this->_internal_team() != 0)
        {
            total_size += 1 +
                          ::_pbi::WireFormatLite::EnumSize(this->_internal_team());
        }

        // int32 Recover_speed = 11;
        if (this->_internal_recover_speed() != 0)
        {
            total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_recover_speed());
        }

        // int32 economy = 12;
        if (this->_internal_economy() != 0)
        {
            total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_economy());
        }

        // .protobuf.CollectorType collector_type = 13;
        if (this->_internal_collector_type() != 0)
        {
            total_size += 1 +
                          ::_pbi::WireFormatLite::EnumSize(this->_internal_collector_type());
        }

        // .protobuf.ArmorType armor_type = 14;
        if (this->_internal_armor_type() != 0)
        {
            total_size += 1 +
                          ::_pbi::WireFormatLite::EnumSize(this->_internal_armor_type());
        }

        // .protobuf.ShieldType shield_type = 15;
        if (this->_internal_shield_type() != 0)
        {
            total_size += 1 +
                          ::_pbi::WireFormatLite::EnumSize(this->_internal_shield_type());
        }

        // .protobuf.BuilderType builder_type = 16;
        if (this->_internal_builder_type() != 0)
        {
            total_size += 2 +
                          ::_pbi::WireFormatLite::EnumSize(this->_internal_builder_type());
        }

        // .protobuf.BulletType bullet_type = 17;
        if (this->_internal_bullet_type() != 0)
        {
            total_size += 2 +
                          ::_pbi::WireFormatLite::EnumSize(this->_internal_bullet_type());
        }

        // double facing_direction = 19;
        static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
        double tmp_facing_direction = this->_internal_facing_direction();
        uint64_t raw_facing_direction;
        memcpy(&raw_facing_direction, &tmp_facing_direction, sizeof(tmp_facing_direction));
        if (raw_facing_direction != 0)
        {
            total_size += 2 + 8;
        }

        // .protobuf.ShipType ship_type = 18;
        if (this->_internal_ship_type() != 0)
        {
            total_size += 2 +
                          ::_pbi::WireFormatLite::EnumSize(this->_internal_ship_type());
        }

        return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
    }

    const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MessageOfShip::_class_data_ = {
        ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
        MessageOfShip::MergeImpl};
    const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* MessageOfShip::GetClassData() const
    {
        return &_class_data_;
    }

    void MessageOfShip::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from)
    {
        static_cast<MessageOfShip*>(to)->MergeFrom(
            static_cast<const MessageOfShip&>(from)
        );
    }

    void MessageOfShip::MergeFrom(const MessageOfShip& from)
    {
        // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.MessageOfShip)
        GOOGLE_DCHECK_NE(&from, this);
        uint32_t cached_has_bits = 0;
        (void)cached_has_bits;

        if (from._internal_x() != 0)
        {
            _internal_set_x(from._internal_x());
        }
        if (from._internal_y() != 0)
        {
            _internal_set_y(from._internal_y());
        }
        if (from._internal_speed() != 0)
        {
            _internal_set_speed(from._internal_speed());
        }
        if (from._internal_hp() != 0)
        {
            _internal_set_hp(from._internal_hp());
        }
        if (from._internal_armor() != 0)
        {
            _internal_set_armor(from._internal_armor());
        }
        if (from._internal_shield() != 0)
        {
            _internal_set_shield(from._internal_shield());
        }
        if (from._internal_place() != 0)
        {
            _internal_set_place(from._internal_place());
        }
        if (from._internal_ship_state() != 0)
        {
            _internal_set_ship_state(from._internal_ship_state());
        }
        if (from._internal_ship_id() != 0)
        {
            _internal_set_ship_id(from._internal_ship_id());
        }
        if (from._internal_team() != 0)
        {
            _internal_set_team(from._internal_team());
        }
        if (from._internal_recover_speed() != 0)
        {
            _internal_set_recover_speed(from._internal_recover_speed());
        }
        if (from._internal_economy() != 0)
        {
            _internal_set_economy(from._internal_economy());
        }
        if (from._internal_collector_type() != 0)
        {
            _internal_set_collector_type(from._internal_collector_type());
        }
        if (from._internal_armor_type() != 0)
        {
            _internal_set_armor_type(from._internal_armor_type());
        }
        if (from._internal_shield_type() != 0)
        {
            _internal_set_shield_type(from._internal_shield_type());
        }
        if (from._internal_builder_type() != 0)
        {
            _internal_set_builder_type(from._internal_builder_type());
        }
        if (from._internal_bullet_type() != 0)
        {
            _internal_set_bullet_type(from._internal_bullet_type());
        }
        static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
        double tmp_facing_direction = from._internal_facing_direction();
        uint64_t raw_facing_direction;
        memcpy(&raw_facing_direction, &tmp_facing_direction, sizeof(tmp_facing_direction));
        if (raw_facing_direction != 0)
        {
            _internal_set_facing_direction(from._internal_facing_direction());
        }
        if (from._internal_ship_type() != 0)
        {
            _internal_set_ship_type(from._internal_ship_type());
        }
        _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
    }

    void MessageOfShip::CopyFrom(const MessageOfShip& from)
    {
        // @@protoc_insertion_point(class_specific_copy_from_start:protobuf.MessageOfShip)
        if (&from == this)
            return;
        Clear();
        MergeFrom(from);
    }

    bool MessageOfShip::IsInitialized() const
    {
        return true;
    }

    void MessageOfShip::InternalSwap(MessageOfShip* other)
    {
        using std::swap;
        _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        ::PROTOBUF_NAMESPACE_ID::internal::memswap<
            PROTOBUF_FIELD_OFFSET(MessageOfShip, ship_type_) + sizeof(MessageOfShip::ship_type_) - PROTOBUF_FIELD_OFFSET(MessageOfShip, x_)>(
            reinterpret_cast<char*>(&x_),
            reinterpret_cast<char*>(&other->x_)
        );
    }

    ::PROTOBUF_NAMESPACE_ID::Metadata MessageOfShip::GetMetadata() const
    {
        return ::_pbi::AssignDescriptors(
            &descriptor_table_Message2Clients_2eproto_getter, &descriptor_table_Message2Clients_2eproto_once, file_level_metadata_Message2Clients_2eproto[0]
        );
    }

    // ===================================================================

    class MessageOfBuilding::_Internal
    {
    public:
    };

    MessageOfBuilding::MessageOfBuilding(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned) :
        ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned)
    {
        SharedCtor();
        // @@protoc_insertion_point(arena_constructor:protobuf.MessageOfBuilding)
    }
    MessageOfBuilding::MessageOfBuilding(const MessageOfBuilding& from) :
        ::PROTOBUF_NAMESPACE_ID::Message()
    {
        _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
        ::memcpy(&x_, &from.x_, static_cast<size_t>(reinterpret_cast<char*>(&team_) - reinterpret_cast<char*>(&x_)) + sizeof(team_));
        // @@protoc_insertion_point(copy_constructor:protobuf.MessageOfBuilding)
    }

    inline void MessageOfBuilding::SharedCtor()
    {
        ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(reinterpret_cast<char*>(&x_) - reinterpret_cast<char*>(this)), 0, static_cast<size_t>(reinterpret_cast<char*>(&team_) - reinterpret_cast<char*>(&x_)) + sizeof(team_));
    }

    MessageOfBuilding::~MessageOfBuilding()
    {
        // @@protoc_insertion_point(destructor:protobuf.MessageOfBuilding)
        if (auto* arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>())
        {
            (void)arena;
            return;
        }
        SharedDtor();
    }

    inline void MessageOfBuilding::SharedDtor()
    {
        GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
    }

    void MessageOfBuilding::SetCachedSize(int size) const
    {
        _cached_size_.Set(size);
    }

    void MessageOfBuilding::Clear()
    {
        // @@protoc_insertion_point(message_clear_start:protobuf.MessageOfBuilding)
        uint32_t cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        ::memset(&x_, 0, static_cast<size_t>(reinterpret_cast<char*>(&team_) - reinterpret_cast<char*>(&x_)) + sizeof(team_));
        _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
    }

    const char* MessageOfBuilding::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx)
    {
#define CHK_(x)                       \
    if (PROTOBUF_PREDICT_FALSE(!(x))) \
    goto failure
        while (!ctx->Done(&ptr))
        {
            uint32_t tag;
            ptr = ::_pbi::ReadTag(ptr, &tag);
            switch (tag >> 3)
            {
                // int32 x = 1;
                case 1:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8))
                    {
                        x_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                // int32 y = 2;
                case 2:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16))
                    {
                        y_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                // int32 hp = 3;
                case 3:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24))
                    {
                        hp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                // .protobuf.BuildingType building_type = 4;
                case 4:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32))
                    {
                        uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
                        CHK_(ptr);
                        _internal_set_building_type(static_cast<::protobuf::BuildingType>(val));
                    }
                    else
                        goto handle_unusual;
                    continue;
                // .protobuf.PlayerTeam team = 5;
                case 5:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40))
                    {
                        uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
                        CHK_(ptr);
                        _internal_set_team(static_cast<::protobuf::PlayerTeam>(val));
                    }
                    else
                        goto handle_unusual;
                    continue;
                // int64 building_id = 6;
                case 6:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48))
                    {
                        building_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                default:
                    goto handle_unusual;
            }  // switch
        handle_unusual:
            if ((tag == 0) || ((tag & 7) == 4))
            {
                CHK_(ptr);
                ctx->SetLastTag(tag);
                goto message_done;
            }
            ptr = UnknownFieldParse(
                tag,
                _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
                ptr,
                ctx
            );
            CHK_(ptr != nullptr);
        }  // while
    message_done:
        return ptr;
    failure:
        ptr = nullptr;
        goto message_done;
#undef CHK_
    }

    uint8_t* MessageOfBuilding::_InternalSerialize(
        uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
    ) const
    {
        // @@protoc_insertion_point(serialize_to_array_start:protobuf.MessageOfBuilding)
        uint32_t cached_has_bits = 0;
        (void)cached_has_bits;

        // int32 x = 1;
        if (this->_internal_x() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_x(), target);
        }

        // int32 y = 2;
        if (this->_internal_y() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_y(), target);
        }

        // int32 hp = 3;
        if (this->_internal_hp() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_hp(), target);
        }

        // .protobuf.BuildingType building_type = 4;
        if (this->_internal_building_type() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this->_internal_building_type(), target
            );
        }

        // .protobuf.PlayerTeam team = 5;
        if (this->_internal_team() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                5, this->_internal_team(), target
            );
        }

        // int64 building_id = 6;
        if (this->_internal_building_id() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt64ToArray(6, this->_internal_building_id(), target);
        }

        if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields()))
        {
            target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream
            );
        }
        // @@protoc_insertion_point(serialize_to_array_end:protobuf.MessageOfBuilding)
        return target;
    }

    size_t MessageOfBuilding::ByteSizeLong() const
    {
        // @@protoc_insertion_point(message_byte_size_start:protobuf.MessageOfBuilding)
        size_t total_size = 0;

        uint32_t cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        // int32 x = 1;
        if (this->_internal_x() != 0)
        {
            total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_x());
        }

        // int32 y = 2;
        if (this->_internal_y() != 0)
        {
            total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_y());
        }

        // int32 hp = 3;
        if (this->_internal_hp() != 0)
        {
            total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_hp());
        }

        // .protobuf.BuildingType building_type = 4;
        if (this->_internal_building_type() != 0)
        {
            total_size += 1 +
                          ::_pbi::WireFormatLite::EnumSize(this->_internal_building_type());
        }

        // int64 building_id = 6;
        if (this->_internal_building_id() != 0)
        {
            total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_building_id());
        }

        // .protobuf.PlayerTeam team = 5;
        if (this->_internal_team() != 0)
        {
            total_size += 1 +
                          ::_pbi::WireFormatLite::EnumSize(this->_internal_team());
        }

        return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
    }

    const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MessageOfBuilding::_class_data_ = {
        ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
        MessageOfBuilding::MergeImpl};
    const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* MessageOfBuilding::GetClassData() const
    {
        return &_class_data_;
    }

    void MessageOfBuilding::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from)
    {
        static_cast<MessageOfBuilding*>(to)->MergeFrom(
            static_cast<const MessageOfBuilding&>(from)
        );
    }

    void MessageOfBuilding::MergeFrom(const MessageOfBuilding& from)
    {
        // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.MessageOfBuilding)
        GOOGLE_DCHECK_NE(&from, this);
        uint32_t cached_has_bits = 0;
        (void)cached_has_bits;

        if (from._internal_x() != 0)
        {
            _internal_set_x(from._internal_x());
        }
        if (from._internal_y() != 0)
        {
            _internal_set_y(from._internal_y());
        }
        if (from._internal_hp() != 0)
        {
            _internal_set_hp(from._internal_hp());
        }
        if (from._internal_building_type() != 0)
        {
            _internal_set_building_type(from._internal_building_type());
        }
        if (from._internal_building_id() != 0)
        {
            _internal_set_building_id(from._internal_building_id());
        }
        if (from._internal_team() != 0)
        {
            _internal_set_team(from._internal_team());
        }
        _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
    }

    void MessageOfBuilding::CopyFrom(const MessageOfBuilding& from)
    {
        // @@protoc_insertion_point(class_specific_copy_from_start:protobuf.MessageOfBuilding)
        if (&from == this)
            return;
        Clear();
        MergeFrom(from);
    }

    bool MessageOfBuilding::IsInitialized() const
    {
        return true;
    }

    void MessageOfBuilding::InternalSwap(MessageOfBuilding* other)
    {
        using std::swap;
        _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        ::PROTOBUF_NAMESPACE_ID::internal::memswap<
            PROTOBUF_FIELD_OFFSET(MessageOfBuilding, team_) + sizeof(MessageOfBuilding::team_) - PROTOBUF_FIELD_OFFSET(MessageOfBuilding, x_)>(
            reinterpret_cast<char*>(&x_),
            reinterpret_cast<char*>(&other->x_)
        );
    }

    ::PROTOBUF_NAMESPACE_ID::Metadata MessageOfBuilding::GetMetadata() const
    {
        return ::_pbi::AssignDescriptors(
            &descriptor_table_Message2Clients_2eproto_getter, &descriptor_table_Message2Clients_2eproto_once, file_level_metadata_Message2Clients_2eproto[1]
        );
    }

    // ===================================================================

    class MessageOfBullet::_Internal
    {
    public:
    };

    MessageOfBullet::MessageOfBullet(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned) :
        ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned)
    {
        SharedCtor();
        // @@protoc_insertion_point(arena_constructor:protobuf.MessageOfBullet)
    }
    MessageOfBullet::MessageOfBullet(const MessageOfBullet& from) :
        ::PROTOBUF_NAMESPACE_ID::Message()
    {
        _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
        ::memcpy(&type_, &from.type_, static_cast<size_t>(reinterpret_cast<char*>(&speed_) - reinterpret_cast<char*>(&type_)) + sizeof(speed_));
        // @@protoc_insertion_point(copy_constructor:protobuf.MessageOfBullet)
    }

    inline void MessageOfBullet::SharedCtor()
    {
        ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(reinterpret_cast<char*>(&type_) - reinterpret_cast<char*>(this)), 0, static_cast<size_t>(reinterpret_cast<char*>(&speed_) - reinterpret_cast<char*>(&type_)) + sizeof(speed_));
    }

    MessageOfBullet::~MessageOfBullet()
    {
        // @@protoc_insertion_point(destructor:protobuf.MessageOfBullet)
        if (auto* arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>())
        {
            (void)arena;
            return;
        }
        SharedDtor();
    }

    inline void MessageOfBullet::SharedDtor()
    {
        GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
    }

    void MessageOfBullet::SetCachedSize(int size) const
    {
        _cached_size_.Set(size);
    }

    void MessageOfBullet::Clear()
    {
        // @@protoc_insertion_point(message_clear_start:protobuf.MessageOfBullet)
        uint32_t cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        ::memset(&type_, 0, static_cast<size_t>(reinterpret_cast<char*>(&speed_) - reinterpret_cast<char*>(&type_)) + sizeof(speed_));
        _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
    }

    const char* MessageOfBullet::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx)
    {
#define CHK_(x)                       \
    if (PROTOBUF_PREDICT_FALSE(!(x))) \
    goto failure
        while (!ctx->Done(&ptr))
        {
            uint32_t tag;
            ptr = ::_pbi::ReadTag(ptr, &tag);
            switch (tag >> 3)
            {
                // .protobuf.BulletType type = 1;
                case 1:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8))
                    {
                        uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
                        CHK_(ptr);
                        _internal_set_type(static_cast<::protobuf::BulletType>(val));
                    }
                    else
                        goto handle_unusual;
                    continue;
                // int32 x = 2;
                case 2:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16))
                    {
                        x_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                // int32 y = 3;
                case 3:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24))
                    {
                        y_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                // double facing_direction = 4;
                case 4:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33))
                    {
                        facing_direction_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
                        ptr += sizeof(double);
                    }
                    else
                        goto handle_unusual;
                    continue;
                // int64 guid = 5;
                case 5:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40))
                    {
                        guid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                // double armor_rate = 6;
                case 6:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 49))
                    {
                        armor_rate_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
                        ptr += sizeof(double);
                    }
                    else
                        goto handle_unusual;
                    continue;
                // double shield_rate = 7;
                case 7:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 57))
                    {
                        shield_rate_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
                        ptr += sizeof(double);
                    }
                    else
                        goto handle_unusual;
                    continue;
                // int32 damage = 8;
                case 8:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64))
                    {
                        damage_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                // .protobuf.PlayerTeam team = 9;
                case 9:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72))
                    {
                        uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
                        CHK_(ptr);
                        _internal_set_team(static_cast<::protobuf::PlayerTeam>(val));
                    }
                    else
                        goto handle_unusual;
                    continue;
                // double bomb_range = 10;
                case 10:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 81))
                    {
                        bomb_range_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
                        ptr += sizeof(double);
                    }
                    else
                        goto handle_unusual;
                    continue;
                // int32 speed = 11;
                case 11:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88))
                    {
                        speed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                default:
                    goto handle_unusual;
            }  // switch
        handle_unusual:
            if ((tag == 0) || ((tag & 7) == 4))
            {
                CHK_(ptr);
                ctx->SetLastTag(tag);
                goto message_done;
            }
            ptr = UnknownFieldParse(
                tag,
                _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
                ptr,
                ctx
            );
            CHK_(ptr != nullptr);
        }  // while
    message_done:
        return ptr;
    failure:
        ptr = nullptr;
        goto message_done;
#undef CHK_
    }

    uint8_t* MessageOfBullet::_InternalSerialize(
        uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
    ) const
    {
        // @@protoc_insertion_point(serialize_to_array_start:protobuf.MessageOfBullet)
        uint32_t cached_has_bits = 0;
        (void)cached_has_bits;

        // .protobuf.BulletType type = 1;
        if (this->_internal_type() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this->_internal_type(), target
            );
        }

        // int32 x = 2;
        if (this->_internal_x() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_x(), target);
        }

        // int32 y = 3;
        if (this->_internal_y() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_y(), target);
        }

        // double facing_direction = 4;
        static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
        double tmp_facing_direction = this->_internal_facing_direction();
        uint64_t raw_facing_direction;
        memcpy(&raw_facing_direction, &tmp_facing_direction, sizeof(tmp_facing_direction));
        if (raw_facing_direction != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_facing_direction(), target);
        }

        // int64 guid = 5;
        if (this->_internal_guid() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt64ToArray(5, this->_internal_guid(), target);
        }

        // double armor_rate = 6;
        static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
        double tmp_armor_rate = this->_internal_armor_rate();
        uint64_t raw_armor_rate;
        memcpy(&raw_armor_rate, &tmp_armor_rate, sizeof(tmp_armor_rate));
        if (raw_armor_rate != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(6, this->_internal_armor_rate(), target);
        }

        // double shield_rate = 7;
        static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
        double tmp_shield_rate = this->_internal_shield_rate();
        uint64_t raw_shield_rate;
        memcpy(&raw_shield_rate, &tmp_shield_rate, sizeof(tmp_shield_rate));
        if (raw_shield_rate != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(7, this->_internal_shield_rate(), target);
        }

        // int32 damage = 8;
        if (this->_internal_damage() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(8, this->_internal_damage(), target);
        }

        // .protobuf.PlayerTeam team = 9;
        if (this->_internal_team() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                9, this->_internal_team(), target
            );
        }

        // double bomb_range = 10;
        static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
        double tmp_bomb_range = this->_internal_bomb_range();
        uint64_t raw_bomb_range;
        memcpy(&raw_bomb_range, &tmp_bomb_range, sizeof(tmp_bomb_range));
        if (raw_bomb_range != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(10, this->_internal_bomb_range(), target);
        }

        // int32 speed = 11;
        if (this->_internal_speed() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(11, this->_internal_speed(), target);
        }

        if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields()))
        {
            target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream
            );
        }
        // @@protoc_insertion_point(serialize_to_array_end:protobuf.MessageOfBullet)
        return target;
    }

    size_t MessageOfBullet::ByteSizeLong() const
    {
        // @@protoc_insertion_point(message_byte_size_start:protobuf.MessageOfBullet)
        size_t total_size = 0;

        uint32_t cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        // .protobuf.BulletType type = 1;
        if (this->_internal_type() != 0)
        {
            total_size += 1 +
                          ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
        }

        // int32 x = 2;
        if (this->_internal_x() != 0)
        {
            total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_x());
        }

        // double facing_direction = 4;
        static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
        double tmp_facing_direction = this->_internal_facing_direction();
        uint64_t raw_facing_direction;
        memcpy(&raw_facing_direction, &tmp_facing_direction, sizeof(tmp_facing_direction));
        if (raw_facing_direction != 0)
        {
            total_size += 1 + 8;
        }

        // int64 guid = 5;
        if (this->_internal_guid() != 0)
        {
            total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_guid());
        }

        // int32 y = 3;
        if (this->_internal_y() != 0)
        {
            total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_y());
        }

        // int32 damage = 8;
        if (this->_internal_damage() != 0)
        {
            total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_damage());
        }

        // double armor_rate = 6;
        static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
        double tmp_armor_rate = this->_internal_armor_rate();
        uint64_t raw_armor_rate;
        memcpy(&raw_armor_rate, &tmp_armor_rate, sizeof(tmp_armor_rate));
        if (raw_armor_rate != 0)
        {
            total_size += 1 + 8;
        }

        // double shield_rate = 7;
        static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
        double tmp_shield_rate = this->_internal_shield_rate();
        uint64_t raw_shield_rate;
        memcpy(&raw_shield_rate, &tmp_shield_rate, sizeof(tmp_shield_rate));
        if (raw_shield_rate != 0)
        {
            total_size += 1 + 8;
        }

        // double bomb_range = 10;
        static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
        double tmp_bomb_range = this->_internal_bomb_range();
        uint64_t raw_bomb_range;
        memcpy(&raw_bomb_range, &tmp_bomb_range, sizeof(tmp_bomb_range));
        if (raw_bomb_range != 0)
        {
            total_size += 1 + 8;
        }

        // .protobuf.PlayerTeam team = 9;
        if (this->_internal_team() != 0)
        {
            total_size += 1 +
                          ::_pbi::WireFormatLite::EnumSize(this->_internal_team());
        }

        // int32 speed = 11;
        if (this->_internal_speed() != 0)
        {
            total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_speed());
        }

        return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
    }

    const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MessageOfBullet::_class_data_ = {
        ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
        MessageOfBullet::MergeImpl};
    const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* MessageOfBullet::GetClassData() const
    {
        return &_class_data_;
    }

    void MessageOfBullet::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from)
    {
        static_cast<MessageOfBullet*>(to)->MergeFrom(
            static_cast<const MessageOfBullet&>(from)
        );
    }

    void MessageOfBullet::MergeFrom(const MessageOfBullet& from)
    {
        // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.MessageOfBullet)
        GOOGLE_DCHECK_NE(&from, this);
        uint32_t cached_has_bits = 0;
        (void)cached_has_bits;

        if (from._internal_type() != 0)
        {
            _internal_set_type(from._internal_type());
        }
        if (from._internal_x() != 0)
        {
            _internal_set_x(from._internal_x());
        }
        static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
        double tmp_facing_direction = from._internal_facing_direction();
        uint64_t raw_facing_direction;
        memcpy(&raw_facing_direction, &tmp_facing_direction, sizeof(tmp_facing_direction));
        if (raw_facing_direction != 0)
        {
            _internal_set_facing_direction(from._internal_facing_direction());
        }
        if (from._internal_guid() != 0)
        {
            _internal_set_guid(from._internal_guid());
        }
        if (from._internal_y() != 0)
        {
            _internal_set_y(from._internal_y());
        }
        if (from._internal_damage() != 0)
        {
            _internal_set_damage(from._internal_damage());
        }
        static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
        double tmp_armor_rate = from._internal_armor_rate();
        uint64_t raw_armor_rate;
        memcpy(&raw_armor_rate, &tmp_armor_rate, sizeof(tmp_armor_rate));
        if (raw_armor_rate != 0)
        {
            _internal_set_armor_rate(from._internal_armor_rate());
        }
        static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
        double tmp_shield_rate = from._internal_shield_rate();
        uint64_t raw_shield_rate;
        memcpy(&raw_shield_rate, &tmp_shield_rate, sizeof(tmp_shield_rate));
        if (raw_shield_rate != 0)
        {
            _internal_set_shield_rate(from._internal_shield_rate());
        }
        static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
        double tmp_bomb_range = from._internal_bomb_range();
        uint64_t raw_bomb_range;
        memcpy(&raw_bomb_range, &tmp_bomb_range, sizeof(tmp_bomb_range));
        if (raw_bomb_range != 0)
        {
            _internal_set_bomb_range(from._internal_bomb_range());
        }
        if (from._internal_team() != 0)
        {
            _internal_set_team(from._internal_team());
        }
        if (from._internal_speed() != 0)
        {
            _internal_set_speed(from._internal_speed());
        }
        _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
    }

    void MessageOfBullet::CopyFrom(const MessageOfBullet& from)
    {
        // @@protoc_insertion_point(class_specific_copy_from_start:protobuf.MessageOfBullet)
        if (&from == this)
            return;
        Clear();
        MergeFrom(from);
    }

    bool MessageOfBullet::IsInitialized() const
    {
        return true;
    }

    void MessageOfBullet::InternalSwap(MessageOfBullet* other)
    {
        using std::swap;
        _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        ::PROTOBUF_NAMESPACE_ID::internal::memswap<
            PROTOBUF_FIELD_OFFSET(MessageOfBullet, speed_) + sizeof(MessageOfBullet::speed_) - PROTOBUF_FIELD_OFFSET(MessageOfBullet, type_)>(
            reinterpret_cast<char*>(&type_),
            reinterpret_cast<char*>(&other->type_)
        );
    }

    ::PROTOBUF_NAMESPACE_ID::Metadata MessageOfBullet::GetMetadata() const
    {
        return ::_pbi::AssignDescriptors(
            &descriptor_table_Message2Clients_2eproto_getter, &descriptor_table_Message2Clients_2eproto_once, file_level_metadata_Message2Clients_2eproto[2]
        );
    }

    // ===================================================================

    class MessageOfResource::_Internal
    {
    public:
    };

    MessageOfResource::MessageOfResource(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned) :
        ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned)
    {
        SharedCtor();
        // @@protoc_insertion_point(arena_constructor:protobuf.MessageOfResource)
    }
    MessageOfResource::MessageOfResource(const MessageOfResource& from) :
        ::PROTOBUF_NAMESPACE_ID::Message()
    {
        _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
        ::memcpy(&x_, &from.x_, static_cast<size_t>(reinterpret_cast<char*>(&progress_) - reinterpret_cast<char*>(&x_)) + sizeof(progress_));
        // @@protoc_insertion_point(copy_constructor:protobuf.MessageOfResource)
    }

    inline void MessageOfResource::SharedCtor()
    {
        ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(reinterpret_cast<char*>(&x_) - reinterpret_cast<char*>(this)), 0, static_cast<size_t>(reinterpret_cast<char*>(&progress_) - reinterpret_cast<char*>(&x_)) + sizeof(progress_));
    }

    MessageOfResource::~MessageOfResource()
    {
        // @@protoc_insertion_point(destructor:protobuf.MessageOfResource)
        if (auto* arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>())
        {
            (void)arena;
            return;
        }
        SharedDtor();
    }

    inline void MessageOfResource::SharedDtor()
    {
        GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
    }

    void MessageOfResource::SetCachedSize(int size) const
    {
        _cached_size_.Set(size);
    }

    void MessageOfResource::Clear()
    {
        // @@protoc_insertion_point(message_clear_start:protobuf.MessageOfResource)
        uint32_t cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        ::memset(&x_, 0, static_cast<size_t>(reinterpret_cast<char*>(&progress_) - reinterpret_cast<char*>(&x_)) + sizeof(progress_));
        _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
    }

    const char* MessageOfResource::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx)
    {
#define CHK_(x)                       \
    if (PROTOBUF_PREDICT_FALSE(!(x))) \
    goto failure
        while (!ctx->Done(&ptr))
        {
            uint32_t tag;
            ptr = ::_pbi::ReadTag(ptr, &tag);
            switch (tag >> 3)
            {
                // int32 x = 1;
                case 1:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8))
                    {
                        x_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                // int32 y = 2;
                case 2:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16))
                    {
                        y_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                // int32 progress = 3;
                case 3:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24))
                    {
                        progress_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                default:
                    goto handle_unusual;
            }  // switch
        handle_unusual:
            if ((tag == 0) || ((tag & 7) == 4))
            {
                CHK_(ptr);
                ctx->SetLastTag(tag);
                goto message_done;
            }
            ptr = UnknownFieldParse(
                tag,
                _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
                ptr,
                ctx
            );
            CHK_(ptr != nullptr);
        }  // while
    message_done:
        return ptr;
    failure:
        ptr = nullptr;
        goto message_done;
#undef CHK_
    }

    uint8_t* MessageOfResource::_InternalSerialize(
        uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
    ) const
    {
        // @@protoc_insertion_point(serialize_to_array_start:protobuf.MessageOfResource)
        uint32_t cached_has_bits = 0;
        (void)cached_has_bits;

        // int32 x = 1;
        if (this->_internal_x() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_x(), target);
        }

        // int32 y = 2;
        if (this->_internal_y() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_y(), target);
        }

        // int32 progress = 3;
        if (this->_internal_progress() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_progress(), target);
        }

        if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields()))
        {
            target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream
            );
        }
        // @@protoc_insertion_point(serialize_to_array_end:protobuf.MessageOfResource)
        return target;
    }

    size_t MessageOfResource::ByteSizeLong() const
    {
        // @@protoc_insertion_point(message_byte_size_start:protobuf.MessageOfResource)
        size_t total_size = 0;

        uint32_t cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        // int32 x = 1;
        if (this->_internal_x() != 0)
        {
            total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_x());
        }

        // int32 y = 2;
        if (this->_internal_y() != 0)
        {
            total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_y());
        }

        // int32 progress = 3;
        if (this->_internal_progress() != 0)
        {
            total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_progress());
        }

        return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
    }

    const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MessageOfResource::_class_data_ = {
        ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
        MessageOfResource::MergeImpl};
    const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* MessageOfResource::GetClassData() const
    {
        return &_class_data_;
    }

    void MessageOfResource::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from)
    {
        static_cast<MessageOfResource*>(to)->MergeFrom(
            static_cast<const MessageOfResource&>(from)
        );
    }

    void MessageOfResource::MergeFrom(const MessageOfResource& from)
    {
        // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.MessageOfResource)
        GOOGLE_DCHECK_NE(&from, this);
        uint32_t cached_has_bits = 0;
        (void)cached_has_bits;

        if (from._internal_x() != 0)
        {
            _internal_set_x(from._internal_x());
        }
        if (from._internal_y() != 0)
        {
            _internal_set_y(from._internal_y());
        }
        if (from._internal_progress() != 0)
        {
            _internal_set_progress(from._internal_progress());
        }
        _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
    }

    void MessageOfResource::CopyFrom(const MessageOfResource& from)
    {
        // @@protoc_insertion_point(class_specific_copy_from_start:protobuf.MessageOfResource)
        if (&from == this)
            return;
        Clear();
        MergeFrom(from);
    }

    bool MessageOfResource::IsInitialized() const
    {
        return true;
    }

    void MessageOfResource::InternalSwap(MessageOfResource* other)
    {
        using std::swap;
        _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        ::PROTOBUF_NAMESPACE_ID::internal::memswap<
            PROTOBUF_FIELD_OFFSET(MessageOfResource, progress_) + sizeof(MessageOfResource::progress_) - PROTOBUF_FIELD_OFFSET(MessageOfResource, x_)>(
            reinterpret_cast<char*>(&x_),
            reinterpret_cast<char*>(&other->x_)
        );
    }

    ::PROTOBUF_NAMESPACE_ID::Metadata MessageOfResource::GetMetadata() const
    {
        return ::_pbi::AssignDescriptors(
            &descriptor_table_Message2Clients_2eproto_getter, &descriptor_table_Message2Clients_2eproto_once, file_level_metadata_Message2Clients_2eproto[3]
        );
    }

    // ===================================================================

    class MessageOfHome::_Internal
    {
    public:
    };

    MessageOfHome::MessageOfHome(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned) :
        ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned)
    {
        SharedCtor();
        // @@protoc_insertion_point(arena_constructor:protobuf.MessageOfHome)
    }
    MessageOfHome::MessageOfHome(const MessageOfHome& from) :
        ::PROTOBUF_NAMESPACE_ID::Message()
    {
        _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
        ::memcpy(&x_, &from.x_, static_cast<size_t>(reinterpret_cast<char*>(&team_) - reinterpret_cast<char*>(&x_)) + sizeof(team_));
        // @@protoc_insertion_point(copy_constructor:protobuf.MessageOfHome)
    }

    inline void MessageOfHome::SharedCtor()
    {
        ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(reinterpret_cast<char*>(&x_) - reinterpret_cast<char*>(this)), 0, static_cast<size_t>(reinterpret_cast<char*>(&team_) - reinterpret_cast<char*>(&x_)) + sizeof(team_));
    }

    MessageOfHome::~MessageOfHome()
    {
        // @@protoc_insertion_point(destructor:protobuf.MessageOfHome)
        if (auto* arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>())
        {
            (void)arena;
            return;
        }
        SharedDtor();
    }

    inline void MessageOfHome::SharedDtor()
    {
        GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
    }

    void MessageOfHome::SetCachedSize(int size) const
    {
        _cached_size_.Set(size);
    }

    void MessageOfHome::Clear()
    {
        // @@protoc_insertion_point(message_clear_start:protobuf.MessageOfHome)
        uint32_t cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        ::memset(&x_, 0, static_cast<size_t>(reinterpret_cast<char*>(&team_) - reinterpret_cast<char*>(&x_)) + sizeof(team_));
        _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
    }

    const char* MessageOfHome::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx)
    {
#define CHK_(x)                       \
    if (PROTOBUF_PREDICT_FALSE(!(x))) \
    goto failure
        while (!ctx->Done(&ptr))
        {
            uint32_t tag;
            ptr = ::_pbi::ReadTag(ptr, &tag);
            switch (tag >> 3)
            {
                // int32 x = 1;
                case 1:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8))
                    {
                        x_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                // int32 y = 2;
                case 2:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16))
                    {
                        y_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                // int32 economy = 3;
                case 3:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24))
                    {
                        economy_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                // int32 hp = 4;
                case 4:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32))
                    {
                        hp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                // .protobuf.PlayerTeam team = 5;
                case 5:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40))
                    {
                        uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
                        CHK_(ptr);
                        _internal_set_team(static_cast<::protobuf::PlayerTeam>(val));
                    }
                    else
                        goto handle_unusual;
                    continue;
                default:
                    goto handle_unusual;
            }  // switch
        handle_unusual:
            if ((tag == 0) || ((tag & 7) == 4))
            {
                CHK_(ptr);
                ctx->SetLastTag(tag);
                goto message_done;
            }
            ptr = UnknownFieldParse(
                tag,
                _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
                ptr,
                ctx
            );
            CHK_(ptr != nullptr);
        }  // while
    message_done:
        return ptr;
    failure:
        ptr = nullptr;
        goto message_done;
#undef CHK_
    }

    uint8_t* MessageOfHome::_InternalSerialize(
        uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
    ) const
    {
        // @@protoc_insertion_point(serialize_to_array_start:protobuf.MessageOfHome)
        uint32_t cached_has_bits = 0;
        (void)cached_has_bits;

        // int32 x = 1;
        if (this->_internal_x() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_x(), target);
        }

        // int32 y = 2;
        if (this->_internal_y() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_y(), target);
        }

        // int32 economy = 3;
        if (this->_internal_economy() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_economy(), target);
        }

        // int32 hp = 4;
        if (this->_internal_hp() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_hp(), target);
        }

        // .protobuf.PlayerTeam team = 5;
        if (this->_internal_team() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                5, this->_internal_team(), target
            );
        }

        if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields()))
        {
            target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream
            );
        }
        // @@protoc_insertion_point(serialize_to_array_end:protobuf.MessageOfHome)
        return target;
    }

    size_t MessageOfHome::ByteSizeLong() const
    {
        // @@protoc_insertion_point(message_byte_size_start:protobuf.MessageOfHome)
        size_t total_size = 0;

        uint32_t cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        // int32 x = 1;
        if (this->_internal_x() != 0)
        {
            total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_x());
        }

        // int32 y = 2;
        if (this->_internal_y() != 0)
        {
            total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_y());
        }

        // int32 economy = 3;
        if (this->_internal_economy() != 0)
        {
            total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_economy());
        }

        // int32 hp = 4;
        if (this->_internal_hp() != 0)
        {
            total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_hp());
        }

        // .protobuf.PlayerTeam team = 5;
        if (this->_internal_team() != 0)
        {
            total_size += 1 +
                          ::_pbi::WireFormatLite::EnumSize(this->_internal_team());
        }

        return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
    }

    const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MessageOfHome::_class_data_ = {
        ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
        MessageOfHome::MergeImpl};
    const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* MessageOfHome::GetClassData() const
    {
        return &_class_data_;
    }

    void MessageOfHome::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from)
    {
        static_cast<MessageOfHome*>(to)->MergeFrom(
            static_cast<const MessageOfHome&>(from)
        );
    }

    void MessageOfHome::MergeFrom(const MessageOfHome& from)
    {
        // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.MessageOfHome)
        GOOGLE_DCHECK_NE(&from, this);
        uint32_t cached_has_bits = 0;
        (void)cached_has_bits;

        if (from._internal_x() != 0)
        {
            _internal_set_x(from._internal_x());
        }
        if (from._internal_y() != 0)
        {
            _internal_set_y(from._internal_y());
        }
        if (from._internal_economy() != 0)
        {
            _internal_set_economy(from._internal_economy());
        }
        if (from._internal_hp() != 0)
        {
            _internal_set_hp(from._internal_hp());
        }
        if (from._internal_team() != 0)
        {
            _internal_set_team(from._internal_team());
        }
        _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
    }

    void MessageOfHome::CopyFrom(const MessageOfHome& from)
    {
        // @@protoc_insertion_point(class_specific_copy_from_start:protobuf.MessageOfHome)
        if (&from == this)
            return;
        Clear();
        MergeFrom(from);
    }

    bool MessageOfHome::IsInitialized() const
    {
        return true;
    }

    void MessageOfHome::InternalSwap(MessageOfHome* other)
    {
        using std::swap;
        _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        ::PROTOBUF_NAMESPACE_ID::internal::memswap<
            PROTOBUF_FIELD_OFFSET(MessageOfHome, team_) + sizeof(MessageOfHome::team_) - PROTOBUF_FIELD_OFFSET(MessageOfHome, x_)>(
            reinterpret_cast<char*>(&x_),
            reinterpret_cast<char*>(&other->x_)
        );
    }

    ::PROTOBUF_NAMESPACE_ID::Metadata MessageOfHome::GetMetadata() const
    {
        return ::_pbi::AssignDescriptors(
            &descriptor_table_Message2Clients_2eproto_getter, &descriptor_table_Message2Clients_2eproto_once, file_level_metadata_Message2Clients_2eproto[4]
        );
    }

    // ===================================================================

    class MessageOfMap_Row::_Internal
    {
    public:
    };

    MessageOfMap_Row::MessageOfMap_Row(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned) :
        ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
        col_(arena)
    {
        SharedCtor();
        // @@protoc_insertion_point(arena_constructor:protobuf.MessageOfMap.Row)
    }
    MessageOfMap_Row::MessageOfMap_Row(const MessageOfMap_Row& from) :
        ::PROTOBUF_NAMESPACE_ID::Message(),
        col_(from.col_)
    {
        _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
        // @@protoc_insertion_point(copy_constructor:protobuf.MessageOfMap.Row)
    }

    inline void MessageOfMap_Row::SharedCtor()
    {
    }

    MessageOfMap_Row::~MessageOfMap_Row()
    {
        // @@protoc_insertion_point(destructor:protobuf.MessageOfMap.Row)
        if (auto* arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>())
        {
            (void)arena;
            return;
        }
        SharedDtor();
    }

    inline void MessageOfMap_Row::SharedDtor()
    {
        GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
    }

    void MessageOfMap_Row::SetCachedSize(int size) const
    {
        _cached_size_.Set(size);
    }

    void MessageOfMap_Row::Clear()
    {
        // @@protoc_insertion_point(message_clear_start:protobuf.MessageOfMap.Row)
        uint32_t cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        col_.Clear();
        _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
    }

    const char* MessageOfMap_Row::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx)
    {
#define CHK_(x)                       \
    if (PROTOBUF_PREDICT_FALSE(!(x))) \
    goto failure
        while (!ctx->Done(&ptr))
        {
            uint32_t tag;
            ptr = ::_pbi::ReadTag(ptr, &tag);
            switch (tag >> 3)
            {
                // repeated .protobuf.PlaceType col = 1;
                case 1:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10))
                    {
                        ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_col(), ptr, ctx);
                        CHK_(ptr);
                    }
                    else if (static_cast<uint8_t>(tag) == 8)
                    {
                        uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
                        CHK_(ptr);
                        _internal_add_col(static_cast<::protobuf::PlaceType>(val));
                    }
                    else
                        goto handle_unusual;
                    continue;
                default:
                    goto handle_unusual;
            }  // switch
        handle_unusual:
            if ((tag == 0) || ((tag & 7) == 4))
            {
                CHK_(ptr);
                ctx->SetLastTag(tag);
                goto message_done;
            }
            ptr = UnknownFieldParse(
                tag,
                _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
                ptr,
                ctx
            );
            CHK_(ptr != nullptr);
        }  // while
    message_done:
        return ptr;
    failure:
        ptr = nullptr;
        goto message_done;
#undef CHK_
    }

    uint8_t* MessageOfMap_Row::_InternalSerialize(
        uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
    ) const
    {
        // @@protoc_insertion_point(serialize_to_array_start:protobuf.MessageOfMap.Row)
        uint32_t cached_has_bits = 0;
        (void)cached_has_bits;

        // repeated .protobuf.PlaceType col = 1;
        {
            int byte_size = _col_cached_byte_size_.load(std::memory_order_relaxed);
            if (byte_size > 0)
            {
                target = stream->WriteEnumPacked(
                    1, col_, byte_size, target
                );
            }
        }

        if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields()))
        {
            target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream
            );
        }
        // @@protoc_insertion_point(serialize_to_array_end:protobuf.MessageOfMap.Row)
        return target;
    }

    size_t MessageOfMap_Row::ByteSizeLong() const
    {
        // @@protoc_insertion_point(message_byte_size_start:protobuf.MessageOfMap.Row)
        size_t total_size = 0;

        uint32_t cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        // repeated .protobuf.PlaceType col = 1;
        {
            size_t data_size = 0;
            unsigned int count = static_cast<unsigned int>(this->_internal_col_size());
            for (unsigned int i = 0; i < count; i++)
            {
                data_size += ::_pbi::WireFormatLite::EnumSize(
                    this->_internal_col(static_cast<int>(i))
                );
            }
            if (data_size > 0)
            {
                total_size += 1 +
                              ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
            }
            int cached_size = ::_pbi::ToCachedSize(data_size);
            _col_cached_byte_size_.store(cached_size, std::memory_order_relaxed);
            total_size += data_size;
        }

        return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
    }

    const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MessageOfMap_Row::_class_data_ = {
        ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
        MessageOfMap_Row::MergeImpl};
    const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* MessageOfMap_Row::GetClassData() const
    {
        return &_class_data_;
    }

    void MessageOfMap_Row::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from)
    {
        static_cast<MessageOfMap_Row*>(to)->MergeFrom(
            static_cast<const MessageOfMap_Row&>(from)
        );
    }

    void MessageOfMap_Row::MergeFrom(const MessageOfMap_Row& from)
    {
        // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.MessageOfMap.Row)
        GOOGLE_DCHECK_NE(&from, this);
        uint32_t cached_has_bits = 0;
        (void)cached_has_bits;

        col_.MergeFrom(from.col_);
        _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
    }

    void MessageOfMap_Row::CopyFrom(const MessageOfMap_Row& from)
    {
        // @@protoc_insertion_point(class_specific_copy_from_start:protobuf.MessageOfMap.Row)
        if (&from == this)
            return;
        Clear();
        MergeFrom(from);
    }

    bool MessageOfMap_Row::IsInitialized() const
    {
        return true;
    }

    void MessageOfMap_Row::InternalSwap(MessageOfMap_Row* other)
    {
        using std::swap;
        _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        col_.InternalSwap(&other->col_);
    }

    ::PROTOBUF_NAMESPACE_ID::Metadata MessageOfMap_Row::GetMetadata() const
    {
        return ::_pbi::AssignDescriptors(
            &descriptor_table_Message2Clients_2eproto_getter, &descriptor_table_Message2Clients_2eproto_once, file_level_metadata_Message2Clients_2eproto[5]
        );
    }

    // ===================================================================

    class MessageOfMap::_Internal
    {
    public:
    };

    MessageOfMap::MessageOfMap(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned) :
        ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
        row_(arena)
    {
        SharedCtor();
        // @@protoc_insertion_point(arena_constructor:protobuf.MessageOfMap)
    }
    MessageOfMap::MessageOfMap(const MessageOfMap& from) :
        ::PROTOBUF_NAMESPACE_ID::Message(),
        row_(from.row_)
    {
        _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
        // @@protoc_insertion_point(copy_constructor:protobuf.MessageOfMap)
    }

    inline void MessageOfMap::SharedCtor()
    {
    }

    MessageOfMap::~MessageOfMap()
    {
        // @@protoc_insertion_point(destructor:protobuf.MessageOfMap)
        if (auto* arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>())
        {
            (void)arena;
            return;
        }
        SharedDtor();
    }

    inline void MessageOfMap::SharedDtor()
    {
        GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
    }

    void MessageOfMap::SetCachedSize(int size) const
    {
        _cached_size_.Set(size);
    }

    void MessageOfMap::Clear()
    {
        // @@protoc_insertion_point(message_clear_start:protobuf.MessageOfMap)
        uint32_t cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        row_.Clear();
        _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
    }

    const char* MessageOfMap::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx)
    {
#define CHK_(x)                       \
    if (PROTOBUF_PREDICT_FALSE(!(x))) \
    goto failure
        while (!ctx->Done(&ptr))
        {
            uint32_t tag;
            ptr = ::_pbi::ReadTag(ptr, &tag);
            switch (tag >> 3)
            {
                // repeated .protobuf.MessageOfMap.Row row = 2;
                case 2:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18))
                    {
                        ptr -= 1;
                        do
                        {
                            ptr += 1;
                            ptr = ctx->ParseMessage(_internal_add_row(), ptr);
                            CHK_(ptr);
                            if (!ctx->DataAvailable(ptr))
                                break;
                        } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
                    }
                    else
                        goto handle_unusual;
                    continue;
                default:
                    goto handle_unusual;
            }  // switch
        handle_unusual:
            if ((tag == 0) || ((tag & 7) == 4))
            {
                CHK_(ptr);
                ctx->SetLastTag(tag);
                goto message_done;
            }
            ptr = UnknownFieldParse(
                tag,
                _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
                ptr,
                ctx
            );
            CHK_(ptr != nullptr);
        }  // while
    message_done:
        return ptr;
    failure:
        ptr = nullptr;
        goto message_done;
#undef CHK_
    }

    uint8_t* MessageOfMap::_InternalSerialize(
        uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
    ) const
    {
        // @@protoc_insertion_point(serialize_to_array_start:protobuf.MessageOfMap)
        uint32_t cached_has_bits = 0;
        (void)cached_has_bits;

        // repeated .protobuf.MessageOfMap.Row row = 2;
        for (unsigned i = 0,
                      n = static_cast<unsigned>(this->_internal_row_size());
             i < n;
             i++)
        {
            const auto& repfield = this->_internal_row(i);
            target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
                InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
        }

        if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields()))
        {
            target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream
            );
        }
        // @@protoc_insertion_point(serialize_to_array_end:protobuf.MessageOfMap)
        return target;
    }

    size_t MessageOfMap::ByteSizeLong() const
    {
        // @@protoc_insertion_point(message_byte_size_start:protobuf.MessageOfMap)
        size_t total_size = 0;

        uint32_t cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        // repeated .protobuf.MessageOfMap.Row row = 2;
        total_size += 1UL * this->_internal_row_size();
        for (const auto& msg : this->row_)
        {
            total_size +=
                ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
        }

        return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
    }

    const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MessageOfMap::_class_data_ = {
        ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
        MessageOfMap::MergeImpl};
    const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* MessageOfMap::GetClassData() const
    {
        return &_class_data_;
    }

    void MessageOfMap::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from)
    {
        static_cast<MessageOfMap*>(to)->MergeFrom(
            static_cast<const MessageOfMap&>(from)
        );
    }

    void MessageOfMap::MergeFrom(const MessageOfMap& from)
    {
        // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.MessageOfMap)
        GOOGLE_DCHECK_NE(&from, this);
        uint32_t cached_has_bits = 0;
        (void)cached_has_bits;

        row_.MergeFrom(from.row_);
        _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
    }

    void MessageOfMap::CopyFrom(const MessageOfMap& from)
    {
        // @@protoc_insertion_point(class_specific_copy_from_start:protobuf.MessageOfMap)
        if (&from == this)
            return;
        Clear();
        MergeFrom(from);
    }

    bool MessageOfMap::IsInitialized() const
    {
        return true;
    }

    void MessageOfMap::InternalSwap(MessageOfMap* other)
    {
        using std::swap;
        _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        row_.InternalSwap(&other->row_);
    }

    ::PROTOBUF_NAMESPACE_ID::Metadata MessageOfMap::GetMetadata() const
    {
        return ::_pbi::AssignDescriptors(
            &descriptor_table_Message2Clients_2eproto_getter, &descriptor_table_Message2Clients_2eproto_once, file_level_metadata_Message2Clients_2eproto[6]
        );
    }

    // ===================================================================

    class MessageOfObj::_Internal
    {
    public:
        static const ::protobuf::MessageOfShip& ship_message(const MessageOfObj* msg);
        static const ::protobuf::MessageOfBuilding& building_message(const MessageOfObj* msg);
        static const ::protobuf::MessageOfBullet& bullet_message(const MessageOfObj* msg);
        static const ::protobuf::MessageOfHome& home_message(const MessageOfObj* msg);
        static const ::protobuf::MessageOfResource& resource_message(const MessageOfObj* msg);
        static const ::protobuf::MessageOfMap& map_message(const MessageOfObj* msg);
    };

    const ::protobuf::MessageOfShip&
        MessageOfObj::_Internal::ship_message(const MessageOfObj* msg)
    {
        return *msg->message_of_obj_.ship_message_;
    }
    const ::protobuf::MessageOfBuilding&
        MessageOfObj::_Internal::building_message(const MessageOfObj* msg)
    {
        return *msg->message_of_obj_.building_message_;
    }
    const ::protobuf::MessageOfBullet&
        MessageOfObj::_Internal::bullet_message(const MessageOfObj* msg)
    {
        return *msg->message_of_obj_.bullet_message_;
    }
    const ::protobuf::MessageOfHome&
        MessageOfObj::_Internal::home_message(const MessageOfObj* msg)
    {
        return *msg->message_of_obj_.home_message_;
    }
    const ::protobuf::MessageOfResource&
        MessageOfObj::_Internal::resource_message(const MessageOfObj* msg)
    {
        return *msg->message_of_obj_.resource_message_;
    }
    const ::protobuf::MessageOfMap&
        MessageOfObj::_Internal::map_message(const MessageOfObj* msg)
    {
        return *msg->message_of_obj_.map_message_;
    }
    void MessageOfObj::set_allocated_ship_message(::protobuf::MessageOfShip* ship_message)
    {
        ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
        clear_message_of_obj();
        if (ship_message)
        {
            ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
                ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(ship_message);
            if (message_arena != submessage_arena)
            {
                ship_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
                    message_arena, ship_message, submessage_arena
                );
            }
            set_has_ship_message();
            message_of_obj_.ship_message_ = ship_message;
        }
        // @@protoc_insertion_point(field_set_allocated:protobuf.MessageOfObj.ship_message)
    }
    void MessageOfObj::set_allocated_building_message(::protobuf::MessageOfBuilding* building_message)
    {
        ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
        clear_message_of_obj();
        if (building_message)
        {
            ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
                ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(building_message);
            if (message_arena != submessage_arena)
            {
                building_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
                    message_arena, building_message, submessage_arena
                );
            }
            set_has_building_message();
            message_of_obj_.building_message_ = building_message;
        }
        // @@protoc_insertion_point(field_set_allocated:protobuf.MessageOfObj.Building_message)
    }
    void MessageOfObj::set_allocated_bullet_message(::protobuf::MessageOfBullet* bullet_message)
    {
        ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
        clear_message_of_obj();
        if (bullet_message)
        {
            ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
                ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(bullet_message);
            if (message_arena != submessage_arena)
            {
                bullet_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
                    message_arena, bullet_message, submessage_arena
                );
            }
            set_has_bullet_message();
            message_of_obj_.bullet_message_ = bullet_message;
        }
        // @@protoc_insertion_point(field_set_allocated:protobuf.MessageOfObj.bullet_message)
    }
    void MessageOfObj::set_allocated_home_message(::protobuf::MessageOfHome* home_message)
    {
        ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
        clear_message_of_obj();
        if (home_message)
        {
            ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
                ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(home_message);
            if (message_arena != submessage_arena)
            {
                home_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
                    message_arena, home_message, submessage_arena
                );
            }
            set_has_home_message();
            message_of_obj_.home_message_ = home_message;
        }
        // @@protoc_insertion_point(field_set_allocated:protobuf.MessageOfObj.home_message)
    }
    void MessageOfObj::set_allocated_resource_message(::protobuf::MessageOfResource* resource_message)
    {
        ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
        clear_message_of_obj();
        if (resource_message)
        {
            ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
                ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(resource_message);
            if (message_arena != submessage_arena)
            {
                resource_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
                    message_arena, resource_message, submessage_arena
                );
            }
            set_has_resource_message();
            message_of_obj_.resource_message_ = resource_message;
        }
        // @@protoc_insertion_point(field_set_allocated:protobuf.MessageOfObj.resource_message)
    }
    void MessageOfObj::set_allocated_map_message(::protobuf::MessageOfMap* map_message)
    {
        ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
        clear_message_of_obj();
        if (map_message)
        {
            ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
                ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(map_message);
            if (message_arena != submessage_arena)
            {
                map_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
                    message_arena, map_message, submessage_arena
                );
            }
            set_has_map_message();
            message_of_obj_.map_message_ = map_message;
        }
        // @@protoc_insertion_point(field_set_allocated:protobuf.MessageOfObj.map_message)
    }
    MessageOfObj::MessageOfObj(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned) :
        ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned)
    {
        SharedCtor();
        // @@protoc_insertion_point(arena_constructor:protobuf.MessageOfObj)
    }
    MessageOfObj::MessageOfObj(const MessageOfObj& from) :
        ::PROTOBUF_NAMESPACE_ID::Message()
    {
        _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
        clear_has_message_of_obj();
        switch (from.message_of_obj_case())
        {
            case kShipMessage:
                {
                    _internal_mutable_ship_message()->::protobuf::MessageOfShip::MergeFrom(from._internal_ship_message());
                    break;
                }
            case kBuildingMessage:
                {
                    _internal_mutable_building_message()->::protobuf::MessageOfBuilding::MergeFrom(from._internal_building_message());
                    break;
                }
            case kBulletMessage:
                {
                    _internal_mutable_bullet_message()->::protobuf::MessageOfBullet::MergeFrom(from._internal_bullet_message());
                    break;
                }
            case kHomeMessage:
                {
                    _internal_mutable_home_message()->::protobuf::MessageOfHome::MergeFrom(from._internal_home_message());
                    break;
                }
            case kResourceMessage:
                {
                    _internal_mutable_resource_message()->::protobuf::MessageOfResource::MergeFrom(from._internal_resource_message());
                    break;
                }
            case kMapMessage:
                {
                    _internal_mutable_map_message()->::protobuf::MessageOfMap::MergeFrom(from._internal_map_message());
                    break;
                }
            case MESSAGE_OF_OBJ_NOT_SET:
                {
                    break;
                }
        }
        // @@protoc_insertion_point(copy_constructor:protobuf.MessageOfObj)
    }

    inline void MessageOfObj::SharedCtor()
    {
        clear_has_message_of_obj();
    }

    MessageOfObj::~MessageOfObj()
    {
        // @@protoc_insertion_point(destructor:protobuf.MessageOfObj)
        if (auto* arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>())
        {
            (void)arena;
            return;
        }
        SharedDtor();
    }

    inline void MessageOfObj::SharedDtor()
    {
        GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
        if (has_message_of_obj())
        {
            clear_message_of_obj();
        }
    }

    void MessageOfObj::SetCachedSize(int size) const
    {
        _cached_size_.Set(size);
    }

    void MessageOfObj::clear_message_of_obj()
    {
        // @@protoc_insertion_point(one_of_clear_start:protobuf.MessageOfObj)
        switch (message_of_obj_case())
        {
            case kShipMessage:
                {
                    if (GetArenaForAllocation() == nullptr)
                    {
                        delete message_of_obj_.ship_message_;
                    }
                    break;
                }
            case kBuildingMessage:
                {
                    if (GetArenaForAllocation() == nullptr)
                    {
                        delete message_of_obj_.building_message_;
                    }
                    break;
                }
            case kBulletMessage:
                {
                    if (GetArenaForAllocation() == nullptr)
                    {
                        delete message_of_obj_.bullet_message_;
                    }
                    break;
                }
            case kHomeMessage:
                {
                    if (GetArenaForAllocation() == nullptr)
                    {
                        delete message_of_obj_.home_message_;
                    }
                    break;
                }
            case kResourceMessage:
                {
                    if (GetArenaForAllocation() == nullptr)
                    {
                        delete message_of_obj_.resource_message_;
                    }
                    break;
                }
            case kMapMessage:
                {
                    if (GetArenaForAllocation() == nullptr)
                    {
                        delete message_of_obj_.map_message_;
                    }
                    break;
                }
            case MESSAGE_OF_OBJ_NOT_SET:
                {
                    break;
                }
        }
        _oneof_case_[0] = MESSAGE_OF_OBJ_NOT_SET;
    }

    void MessageOfObj::Clear()
    {
        // @@protoc_insertion_point(message_clear_start:protobuf.MessageOfObj)
        uint32_t cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        clear_message_of_obj();
        _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
    }

    const char* MessageOfObj::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx)
    {
#define CHK_(x)                       \
    if (PROTOBUF_PREDICT_FALSE(!(x))) \
    goto failure
        while (!ctx->Done(&ptr))
        {
            uint32_t tag;
            ptr = ::_pbi::ReadTag(ptr, &tag);
            switch (tag >> 3)
            {
                // .protobuf.MessageOfShip ship_message = 1;
                case 1:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10))
                    {
                        ptr = ctx->ParseMessage(_internal_mutable_ship_message(), ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                // .protobuf.MessageOfBuilding Building_message = 2;
                case 2:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18))
                    {
                        ptr = ctx->ParseMessage(_internal_mutable_building_message(), ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                // .protobuf.MessageOfBullet bullet_message = 3;
                case 3:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26))
                    {
                        ptr = ctx->ParseMessage(_internal_mutable_bullet_message(), ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                // .protobuf.MessageOfHome home_message = 4;
                case 4:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34))
                    {
                        ptr = ctx->ParseMessage(_internal_mutable_home_message(), ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                // .protobuf.MessageOfResource resource_message = 5;
                case 5:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42))
                    {
                        ptr = ctx->ParseMessage(_internal_mutable_resource_message(), ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                // .protobuf.MessageOfMap map_message = 6;
                case 6:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50))
                    {
                        ptr = ctx->ParseMessage(_internal_mutable_map_message(), ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                default:
                    goto handle_unusual;
            }  // switch
        handle_unusual:
            if ((tag == 0) || ((tag & 7) == 4))
            {
                CHK_(ptr);
                ctx->SetLastTag(tag);
                goto message_done;
            }
            ptr = UnknownFieldParse(
                tag,
                _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
                ptr,
                ctx
            );
            CHK_(ptr != nullptr);
        }  // while
    message_done:
        return ptr;
    failure:
        ptr = nullptr;
        goto message_done;
#undef CHK_
    }

    uint8_t* MessageOfObj::_InternalSerialize(
        uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
    ) const
    {
        // @@protoc_insertion_point(serialize_to_array_start:protobuf.MessageOfObj)
        uint32_t cached_has_bits = 0;
        (void)cached_has_bits;

        // .protobuf.MessageOfShip ship_message = 1;
        if (_internal_has_ship_message())
        {
            target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
                InternalWriteMessage(1, _Internal::ship_message(this), _Internal::ship_message(this).GetCachedSize(), target, stream);
        }

        // .protobuf.MessageOfBuilding Building_message = 2;
        if (_internal_has_building_message())
        {
            target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
                InternalWriteMessage(2, _Internal::building_message(this), _Internal::building_message(this).GetCachedSize(), target, stream);
        }

        // .protobuf.MessageOfBullet bullet_message = 3;
        if (_internal_has_bullet_message())
        {
            target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
                InternalWriteMessage(3, _Internal::bullet_message(this), _Internal::bullet_message(this).GetCachedSize(), target, stream);
        }

        // .protobuf.MessageOfHome home_message = 4;
        if (_internal_has_home_message())
        {
            target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
                InternalWriteMessage(4, _Internal::home_message(this), _Internal::home_message(this).GetCachedSize(), target, stream);
        }

        // .protobuf.MessageOfResource resource_message = 5;
        if (_internal_has_resource_message())
        {
            target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
                InternalWriteMessage(5, _Internal::resource_message(this), _Internal::resource_message(this).GetCachedSize(), target, stream);
        }

        // .protobuf.MessageOfMap map_message = 6;
        if (_internal_has_map_message())
        {
            target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
                InternalWriteMessage(6, _Internal::map_message(this), _Internal::map_message(this).GetCachedSize(), target, stream);
        }

        if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields()))
        {
            target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream
            );
        }
        // @@protoc_insertion_point(serialize_to_array_end:protobuf.MessageOfObj)
        return target;
    }

    size_t MessageOfObj::ByteSizeLong() const
    {
        // @@protoc_insertion_point(message_byte_size_start:protobuf.MessageOfObj)
        size_t total_size = 0;

        uint32_t cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        switch (message_of_obj_case())
        {
            // .protobuf.MessageOfShip ship_message = 1;
            case kShipMessage:
                {
                    total_size += 1 +
                                  ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
                                      *message_of_obj_.ship_message_
                                  );
                    break;
                }
            // .protobuf.MessageOfBuilding Building_message = 2;
            case kBuildingMessage:
                {
                    total_size += 1 +
                                  ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
                                      *message_of_obj_.building_message_
                                  );
                    break;
                }
            // .protobuf.MessageOfBullet bullet_message = 3;
            case kBulletMessage:
                {
                    total_size += 1 +
                                  ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
                                      *message_of_obj_.bullet_message_
                                  );
                    break;
                }
            // .protobuf.MessageOfHome home_message = 4;
            case kHomeMessage:
                {
                    total_size += 1 +
                                  ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
                                      *message_of_obj_.home_message_
                                  );
                    break;
                }
            // .protobuf.MessageOfResource resource_message = 5;
            case kResourceMessage:
                {
                    total_size += 1 +
                                  ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
                                      *message_of_obj_.resource_message_
                                  );
                    break;
                }
            // .protobuf.MessageOfMap map_message = 6;
            case kMapMessage:
                {
                    total_size += 1 +
                                  ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
                                      *message_of_obj_.map_message_
                                  );
                    break;
                }
            case MESSAGE_OF_OBJ_NOT_SET:
                {
                    break;
                }
        }
        return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
    }

    const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MessageOfObj::_class_data_ = {
        ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
        MessageOfObj::MergeImpl};
    const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* MessageOfObj::GetClassData() const
    {
        return &_class_data_;
    }

    void MessageOfObj::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from)
    {
        static_cast<MessageOfObj*>(to)->MergeFrom(
            static_cast<const MessageOfObj&>(from)
        );
    }

    void MessageOfObj::MergeFrom(const MessageOfObj& from)
    {
        // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.MessageOfObj)
        GOOGLE_DCHECK_NE(&from, this);
        uint32_t cached_has_bits = 0;
        (void)cached_has_bits;

        switch (from.message_of_obj_case())
        {
            case kShipMessage:
                {
                    _internal_mutable_ship_message()->::protobuf::MessageOfShip::MergeFrom(from._internal_ship_message());
                    break;
                }
            case kBuildingMessage:
                {
                    _internal_mutable_building_message()->::protobuf::MessageOfBuilding::MergeFrom(from._internal_building_message());
                    break;
                }
            case kBulletMessage:
                {
                    _internal_mutable_bullet_message()->::protobuf::MessageOfBullet::MergeFrom(from._internal_bullet_message());
                    break;
                }
            case kHomeMessage:
                {
                    _internal_mutable_home_message()->::protobuf::MessageOfHome::MergeFrom(from._internal_home_message());
                    break;
                }
            case kResourceMessage:
                {
                    _internal_mutable_resource_message()->::protobuf::MessageOfResource::MergeFrom(from._internal_resource_message());
                    break;
                }
            case kMapMessage:
                {
                    _internal_mutable_map_message()->::protobuf::MessageOfMap::MergeFrom(from._internal_map_message());
                    break;
                }
            case MESSAGE_OF_OBJ_NOT_SET:
                {
                    break;
                }
        }
        _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
    }

    void MessageOfObj::CopyFrom(const MessageOfObj& from)
    {
        // @@protoc_insertion_point(class_specific_copy_from_start:protobuf.MessageOfObj)
        if (&from == this)
            return;
        Clear();
        MergeFrom(from);
    }

    bool MessageOfObj::IsInitialized() const
    {
        return true;
    }

    void MessageOfObj::InternalSwap(MessageOfObj* other)
    {
        using std::swap;
        _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(message_of_obj_, other->message_of_obj_);
        swap(_oneof_case_[0], other->_oneof_case_[0]);
    }

    ::PROTOBUF_NAMESPACE_ID::Metadata MessageOfObj::GetMetadata() const
    {
        return ::_pbi::AssignDescriptors(
            &descriptor_table_Message2Clients_2eproto_getter, &descriptor_table_Message2Clients_2eproto_once, file_level_metadata_Message2Clients_2eproto[7]
        );
    }

    // ===================================================================

    class MessageOfAll::_Internal
    {
    public:
    };

    MessageOfAll::MessageOfAll(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned) :
        ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned)
    {
        SharedCtor();
        // @@protoc_insertion_point(arena_constructor:protobuf.MessageOfAll)
    }
    MessageOfAll::MessageOfAll(const MessageOfAll& from) :
        ::PROTOBUF_NAMESPACE_ID::Message()
    {
        _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
        game_time_ = from.game_time_;
        // @@protoc_insertion_point(copy_constructor:protobuf.MessageOfAll)
    }

    inline void MessageOfAll::SharedCtor()
    {
        game_time_ = 0;
    }

    MessageOfAll::~MessageOfAll()
    {
        // @@protoc_insertion_point(destructor:protobuf.MessageOfAll)
        if (auto* arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>())
        {
            (void)arena;
            return;
        }
        SharedDtor();
    }

    inline void MessageOfAll::SharedDtor()
    {
        GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
    }

    void MessageOfAll::SetCachedSize(int size) const
    {
        _cached_size_.Set(size);
    }

    void MessageOfAll::Clear()
    {
        // @@protoc_insertion_point(message_clear_start:protobuf.MessageOfAll)
        uint32_t cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        game_time_ = 0;
        _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
    }

    const char* MessageOfAll::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx)
    {
#define CHK_(x)                       \
    if (PROTOBUF_PREDICT_FALSE(!(x))) \
    goto failure
        while (!ctx->Done(&ptr))
        {
            uint32_t tag;
            ptr = ::_pbi::ReadTag(ptr, &tag);
            switch (tag >> 3)
            {
                // int32 game_time = 1;
                case 1:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8))
                    {
                        game_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                default:
                    goto handle_unusual;
            }  // switch
        handle_unusual:
            if ((tag == 0) || ((tag & 7) == 4))
            {
                CHK_(ptr);
                ctx->SetLastTag(tag);
                goto message_done;
            }
            ptr = UnknownFieldParse(
                tag,
                _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
                ptr,
                ctx
            );
            CHK_(ptr != nullptr);
        }  // while
    message_done:
        return ptr;
    failure:
        ptr = nullptr;
        goto message_done;
#undef CHK_
    }

    uint8_t* MessageOfAll::_InternalSerialize(
        uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
    ) const
    {
        // @@protoc_insertion_point(serialize_to_array_start:protobuf.MessageOfAll)
        uint32_t cached_has_bits = 0;
        (void)cached_has_bits;

        // int32 game_time = 1;
        if (this->_internal_game_time() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_game_time(), target);
        }

        if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields()))
        {
            target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream
            );
        }
        // @@protoc_insertion_point(serialize_to_array_end:protobuf.MessageOfAll)
        return target;
    }

    size_t MessageOfAll::ByteSizeLong() const
    {
        // @@protoc_insertion_point(message_byte_size_start:protobuf.MessageOfAll)
        size_t total_size = 0;

        uint32_t cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        // int32 game_time = 1;
        if (this->_internal_game_time() != 0)
        {
            total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_game_time());
        }

        return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
    }

    const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MessageOfAll::_class_data_ = {
        ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
        MessageOfAll::MergeImpl};
    const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* MessageOfAll::GetClassData() const
    {
        return &_class_data_;
    }

    void MessageOfAll::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from)
    {
        static_cast<MessageOfAll*>(to)->MergeFrom(
            static_cast<const MessageOfAll&>(from)
        );
    }

    void MessageOfAll::MergeFrom(const MessageOfAll& from)
    {
        // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.MessageOfAll)
        GOOGLE_DCHECK_NE(&from, this);
        uint32_t cached_has_bits = 0;
        (void)cached_has_bits;

        if (from._internal_game_time() != 0)
        {
            _internal_set_game_time(from._internal_game_time());
        }
        _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
    }

    void MessageOfAll::CopyFrom(const MessageOfAll& from)
    {
        // @@protoc_insertion_point(class_specific_copy_from_start:protobuf.MessageOfAll)
        if (&from == this)
            return;
        Clear();
        MergeFrom(from);
    }

    bool MessageOfAll::IsInitialized() const
    {
        return true;
    }

    void MessageOfAll::InternalSwap(MessageOfAll* other)
    {
        using std::swap;
        _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(game_time_, other->game_time_);
    }

    ::PROTOBUF_NAMESPACE_ID::Metadata MessageOfAll::GetMetadata() const
    {
        return ::_pbi::AssignDescriptors(
            &descriptor_table_Message2Clients_2eproto_getter, &descriptor_table_Message2Clients_2eproto_once, file_level_metadata_Message2Clients_2eproto[8]
        );
    }

    // ===================================================================

    class MessageToClient::_Internal
    {
    public:
        static const ::protobuf::MessageOfAll& all_message(const MessageToClient* msg);
    };

    const ::protobuf::MessageOfAll&
        MessageToClient::_Internal::all_message(const MessageToClient* msg)
    {
        return *msg->all_message_;
    }
    MessageToClient::MessageToClient(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned) :
        ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
        obj_message_(arena)
    {
        SharedCtor();
        // @@protoc_insertion_point(arena_constructor:protobuf.MessageToClient)
    }
    MessageToClient::MessageToClient(const MessageToClient& from) :
        ::PROTOBUF_NAMESPACE_ID::Message(),
        obj_message_(from.obj_message_)
    {
        _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
        if (from._internal_has_all_message())
        {
            all_message_ = new ::protobuf::MessageOfAll(*from.all_message_);
        }
        else
        {
            all_message_ = nullptr;
        }
        game_state_ = from.game_state_;
        // @@protoc_insertion_point(copy_constructor:protobuf.MessageToClient)
    }

    inline void MessageToClient::SharedCtor()
    {
        ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(reinterpret_cast<char*>(&all_message_) - reinterpret_cast<char*>(this)), 0, static_cast<size_t>(reinterpret_cast<char*>(&game_state_) - reinterpret_cast<char*>(&all_message_)) + sizeof(game_state_));
    }

    MessageToClient::~MessageToClient()
    {
        // @@protoc_insertion_point(destructor:protobuf.MessageToClient)
        if (auto* arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>())
        {
            (void)arena;
            return;
        }
        SharedDtor();
    }

    inline void MessageToClient::SharedDtor()
    {
        GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
        if (this != internal_default_instance())
            delete all_message_;
    }

    void MessageToClient::SetCachedSize(int size) const
    {
        _cached_size_.Set(size);
    }

    void MessageToClient::Clear()
    {
        // @@protoc_insertion_point(message_clear_start:protobuf.MessageToClient)
        uint32_t cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        obj_message_.Clear();
        if (GetArenaForAllocation() == nullptr && all_message_ != nullptr)
        {
            delete all_message_;
        }
        all_message_ = nullptr;
        game_state_ = 0;
        _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
    }

    const char* MessageToClient::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx)
    {
#define CHK_(x)                       \
    if (PROTOBUF_PREDICT_FALSE(!(x))) \
    goto failure
        while (!ctx->Done(&ptr))
        {
            uint32_t tag;
            ptr = ::_pbi::ReadTag(ptr, &tag);
            switch (tag >> 3)
            {
                // repeated .protobuf.MessageOfObj obj_message = 1;
                case 1:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10))
                    {
                        ptr -= 1;
                        do
                        {
                            ptr += 1;
                            ptr = ctx->ParseMessage(_internal_add_obj_message(), ptr);
                            CHK_(ptr);
                            if (!ctx->DataAvailable(ptr))
                                break;
                        } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
                    }
                    else
                        goto handle_unusual;
                    continue;
                // .protobuf.GameState game_state = 2;
                case 2:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16))
                    {
                        uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
                        CHK_(ptr);
                        _internal_set_game_state(static_cast<::protobuf::GameState>(val));
                    }
                    else
                        goto handle_unusual;
                    continue;
                // .protobuf.MessageOfAll all_message = 3;
                case 3:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26))
                    {
                        ptr = ctx->ParseMessage(_internal_mutable_all_message(), ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                default:
                    goto handle_unusual;
            }  // switch
        handle_unusual:
            if ((tag == 0) || ((tag & 7) == 4))
            {
                CHK_(ptr);
                ctx->SetLastTag(tag);
                goto message_done;
            }
            ptr = UnknownFieldParse(
                tag,
                _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
                ptr,
                ctx
            );
            CHK_(ptr != nullptr);
        }  // while
    message_done:
        return ptr;
    failure:
        ptr = nullptr;
        goto message_done;
#undef CHK_
    }

    uint8_t* MessageToClient::_InternalSerialize(
        uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
    ) const
    {
        // @@protoc_insertion_point(serialize_to_array_start:protobuf.MessageToClient)
        uint32_t cached_has_bits = 0;
        (void)cached_has_bits;

        // repeated .protobuf.MessageOfObj obj_message = 1;
        for (unsigned i = 0,
                      n = static_cast<unsigned>(this->_internal_obj_message_size());
             i < n;
             i++)
        {
            const auto& repfield = this->_internal_obj_message(i);
            target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
                InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
        }

        // .protobuf.GameState game_state = 2;
        if (this->_internal_game_state() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this->_internal_game_state(), target
            );
        }

        // .protobuf.MessageOfAll all_message = 3;
        if (this->_internal_has_all_message())
        {
            target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
                InternalWriteMessage(3, _Internal::all_message(this), _Internal::all_message(this).GetCachedSize(), target, stream);
        }

        if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields()))
        {
            target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream
            );
        }
        // @@protoc_insertion_point(serialize_to_array_end:protobuf.MessageToClient)
        return target;
    }

    size_t MessageToClient::ByteSizeLong() const
    {
        // @@protoc_insertion_point(message_byte_size_start:protobuf.MessageToClient)
        size_t total_size = 0;

        uint32_t cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        // repeated .protobuf.MessageOfObj obj_message = 1;
        total_size += 1UL * this->_internal_obj_message_size();
        for (const auto& msg : this->obj_message_)
        {
            total_size +=
                ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
        }

        // .protobuf.MessageOfAll all_message = 3;
        if (this->_internal_has_all_message())
        {
            total_size += 1 +
                          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
                              *all_message_
                          );
        }

        // .protobuf.GameState game_state = 2;
        if (this->_internal_game_state() != 0)
        {
            total_size += 1 +
                          ::_pbi::WireFormatLite::EnumSize(this->_internal_game_state());
        }

        return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
    }

    const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MessageToClient::_class_data_ = {
        ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
        MessageToClient::MergeImpl};
    const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* MessageToClient::GetClassData() const
    {
        return &_class_data_;
    }

    void MessageToClient::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from)
    {
        static_cast<MessageToClient*>(to)->MergeFrom(
            static_cast<const MessageToClient&>(from)
        );
    }

    void MessageToClient::MergeFrom(const MessageToClient& from)
    {
        // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.MessageToClient)
        GOOGLE_DCHECK_NE(&from, this);
        uint32_t cached_has_bits = 0;
        (void)cached_has_bits;

        obj_message_.MergeFrom(from.obj_message_);
        if (from._internal_has_all_message())
        {
            _internal_mutable_all_message()->::protobuf::MessageOfAll::MergeFrom(from._internal_all_message());
        }
        if (from._internal_game_state() != 0)
        {
            _internal_set_game_state(from._internal_game_state());
        }
        _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
    }

    void MessageToClient::CopyFrom(const MessageToClient& from)
    {
        // @@protoc_insertion_point(class_specific_copy_from_start:protobuf.MessageToClient)
        if (&from == this)
            return;
        Clear();
        MergeFrom(from);
    }

    bool MessageToClient::IsInitialized() const
    {
        return true;
    }

    void MessageToClient::InternalSwap(MessageToClient* other)
    {
        using std::swap;
        _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        obj_message_.InternalSwap(&other->obj_message_);
        ::PROTOBUF_NAMESPACE_ID::internal::memswap<
            PROTOBUF_FIELD_OFFSET(MessageToClient, game_state_) + sizeof(MessageToClient::game_state_) - PROTOBUF_FIELD_OFFSET(MessageToClient, all_message_)>(
            reinterpret_cast<char*>(&all_message_),
            reinterpret_cast<char*>(&other->all_message_)
        );
    }

    ::PROTOBUF_NAMESPACE_ID::Metadata MessageToClient::GetMetadata() const
    {
        return ::_pbi::AssignDescriptors(
            &descriptor_table_Message2Clients_2eproto_getter, &descriptor_table_Message2Clients_2eproto_once, file_level_metadata_Message2Clients_2eproto[9]
        );
    }

    // ===================================================================

    class MoveRes::_Internal
    {
    public:
    };

    MoveRes::MoveRes(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned) :
        ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned)
    {
        SharedCtor();
        // @@protoc_insertion_point(arena_constructor:protobuf.MoveRes)
    }
    MoveRes::MoveRes(const MoveRes& from) :
        ::PROTOBUF_NAMESPACE_ID::Message()
    {
        _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
        ::memcpy(&actual_speed_, &from.actual_speed_, static_cast<size_t>(reinterpret_cast<char*>(&act_success_) - reinterpret_cast<char*>(&actual_speed_)) + sizeof(act_success_));
        // @@protoc_insertion_point(copy_constructor:protobuf.MoveRes)
    }

    inline void MoveRes::SharedCtor()
    {
        ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(reinterpret_cast<char*>(&actual_speed_) - reinterpret_cast<char*>(this)), 0, static_cast<size_t>(reinterpret_cast<char*>(&act_success_) - reinterpret_cast<char*>(&actual_speed_)) + sizeof(act_success_));
    }

    MoveRes::~MoveRes()
    {
        // @@protoc_insertion_point(destructor:protobuf.MoveRes)
        if (auto* arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>())
        {
            (void)arena;
            return;
        }
        SharedDtor();
    }

    inline void MoveRes::SharedDtor()
    {
        GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
    }

    void MoveRes::SetCachedSize(int size) const
    {
        _cached_size_.Set(size);
    }

    void MoveRes::Clear()
    {
        // @@protoc_insertion_point(message_clear_start:protobuf.MoveRes)
        uint32_t cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        ::memset(&actual_speed_, 0, static_cast<size_t>(reinterpret_cast<char*>(&act_success_) - reinterpret_cast<char*>(&actual_speed_)) + sizeof(act_success_));
        _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
    }

    const char* MoveRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx)
    {
#define CHK_(x)                       \
    if (PROTOBUF_PREDICT_FALSE(!(x))) \
    goto failure
        while (!ctx->Done(&ptr))
        {
            uint32_t tag;
            ptr = ::_pbi::ReadTag(ptr, &tag);
            switch (tag >> 3)
            {
                // int64 actual_speed = 1;
                case 1:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8))
                    {
                        actual_speed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                // double actual_angle = 2;
                case 2:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17))
                    {
                        actual_angle_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
                        ptr += sizeof(double);
                    }
                    else
                        goto handle_unusual;
                    continue;
                // bool act_success = 3;
                case 3:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24))
                    {
                        act_success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                default:
                    goto handle_unusual;
            }  // switch
        handle_unusual:
            if ((tag == 0) || ((tag & 7) == 4))
            {
                CHK_(ptr);
                ctx->SetLastTag(tag);
                goto message_done;
            }
            ptr = UnknownFieldParse(
                tag,
                _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
                ptr,
                ctx
            );
            CHK_(ptr != nullptr);
        }  // while
    message_done:
        return ptr;
    failure:
        ptr = nullptr;
        goto message_done;
#undef CHK_
    }

    uint8_t* MoveRes::_InternalSerialize(
        uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
    ) const
    {
        // @@protoc_insertion_point(serialize_to_array_start:protobuf.MoveRes)
        uint32_t cached_has_bits = 0;
        (void)cached_has_bits;

        // int64 actual_speed = 1;
        if (this->_internal_actual_speed() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_actual_speed(), target);
        }

        // double actual_angle = 2;
        static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
        double tmp_actual_angle = this->_internal_actual_angle();
        uint64_t raw_actual_angle;
        memcpy(&raw_actual_angle, &tmp_actual_angle, sizeof(tmp_actual_angle));
        if (raw_actual_angle != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_actual_angle(), target);
        }

        // bool act_success = 3;
        if (this->_internal_act_success() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_act_success(), target);
        }

        if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields()))
        {
            target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream
            );
        }
        // @@protoc_insertion_point(serialize_to_array_end:protobuf.MoveRes)
        return target;
    }

    size_t MoveRes::ByteSizeLong() const
    {
        // @@protoc_insertion_point(message_byte_size_start:protobuf.MoveRes)
        size_t total_size = 0;

        uint32_t cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        // int64 actual_speed = 1;
        if (this->_internal_actual_speed() != 0)
        {
            total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_actual_speed());
        }

        // double actual_angle = 2;
        static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
        double tmp_actual_angle = this->_internal_actual_angle();
        uint64_t raw_actual_angle;
        memcpy(&raw_actual_angle, &tmp_actual_angle, sizeof(tmp_actual_angle));
        if (raw_actual_angle != 0)
        {
            total_size += 1 + 8;
        }

        // bool act_success = 3;
        if (this->_internal_act_success() != 0)
        {
            total_size += 1 + 1;
        }

        return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
    }

    const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MoveRes::_class_data_ = {
        ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
        MoveRes::MergeImpl};
    const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* MoveRes::GetClassData() const
    {
        return &_class_data_;
    }

    void MoveRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from)
    {
        static_cast<MoveRes*>(to)->MergeFrom(
            static_cast<const MoveRes&>(from)
        );
    }

    void MoveRes::MergeFrom(const MoveRes& from)
    {
        // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.MoveRes)
        GOOGLE_DCHECK_NE(&from, this);
        uint32_t cached_has_bits = 0;
        (void)cached_has_bits;

        if (from._internal_actual_speed() != 0)
        {
            _internal_set_actual_speed(from._internal_actual_speed());
        }
        static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
        double tmp_actual_angle = from._internal_actual_angle();
        uint64_t raw_actual_angle;
        memcpy(&raw_actual_angle, &tmp_actual_angle, sizeof(tmp_actual_angle));
        if (raw_actual_angle != 0)
        {
            _internal_set_actual_angle(from._internal_actual_angle());
        }
        if (from._internal_act_success() != 0)
        {
            _internal_set_act_success(from._internal_act_success());
        }
        _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
    }

    void MoveRes::CopyFrom(const MoveRes& from)
    {
        // @@protoc_insertion_point(class_specific_copy_from_start:protobuf.MoveRes)
        if (&from == this)
            return;
        Clear();
        MergeFrom(from);
    }

    bool MoveRes::IsInitialized() const
    {
        return true;
    }

    void MoveRes::InternalSwap(MoveRes* other)
    {
        using std::swap;
        _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        ::PROTOBUF_NAMESPACE_ID::internal::memswap<
            PROTOBUF_FIELD_OFFSET(MoveRes, act_success_) + sizeof(MoveRes::act_success_) - PROTOBUF_FIELD_OFFSET(MoveRes, actual_speed_)>(
            reinterpret_cast<char*>(&actual_speed_),
            reinterpret_cast<char*>(&other->actual_speed_)
        );
    }

    ::PROTOBUF_NAMESPACE_ID::Metadata MoveRes::GetMetadata() const
    {
        return ::_pbi::AssignDescriptors(
            &descriptor_table_Message2Clients_2eproto_getter, &descriptor_table_Message2Clients_2eproto_once, file_level_metadata_Message2Clients_2eproto[10]
        );
    }

    // ===================================================================

    class BoolRes::_Internal
    {
    public:
    };

    BoolRes::BoolRes(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned) :
        ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned)
    {
        SharedCtor();
        // @@protoc_insertion_point(arena_constructor:protobuf.BoolRes)
    }
    BoolRes::BoolRes(const BoolRes& from) :
        ::PROTOBUF_NAMESPACE_ID::Message()
    {
        _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
        act_success_ = from.act_success_;
        // @@protoc_insertion_point(copy_constructor:protobuf.BoolRes)
    }

    inline void BoolRes::SharedCtor()
    {
        act_success_ = false;
    }

    BoolRes::~BoolRes()
    {
        // @@protoc_insertion_point(destructor:protobuf.BoolRes)
        if (auto* arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>())
        {
            (void)arena;
            return;
        }
        SharedDtor();
    }

    inline void BoolRes::SharedDtor()
    {
        GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
    }

    void BoolRes::SetCachedSize(int size) const
    {
        _cached_size_.Set(size);
    }

    void BoolRes::Clear()
    {
        // @@protoc_insertion_point(message_clear_start:protobuf.BoolRes)
        uint32_t cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        act_success_ = false;
        _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
    }

    const char* BoolRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx)
    {
#define CHK_(x)                       \
    if (PROTOBUF_PREDICT_FALSE(!(x))) \
    goto failure
        while (!ctx->Done(&ptr))
        {
            uint32_t tag;
            ptr = ::_pbi::ReadTag(ptr, &tag);
            switch (tag >> 3)
            {
                // bool act_success = 1;
                case 1:
                    if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8))
                    {
                        act_success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
                        CHK_(ptr);
                    }
                    else
                        goto handle_unusual;
                    continue;
                default:
                    goto handle_unusual;
            }  // switch
        handle_unusual:
            if ((tag == 0) || ((tag & 7) == 4))
            {
                CHK_(ptr);
                ctx->SetLastTag(tag);
                goto message_done;
            }
            ptr = UnknownFieldParse(
                tag,
                _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
                ptr,
                ctx
            );
            CHK_(ptr != nullptr);
        }  // while
    message_done:
        return ptr;
    failure:
        ptr = nullptr;
        goto message_done;
#undef CHK_
    }

    uint8_t* BoolRes::_InternalSerialize(
        uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
    ) const
    {
        // @@protoc_insertion_point(serialize_to_array_start:protobuf.BoolRes)
        uint32_t cached_has_bits = 0;
        (void)cached_has_bits;

        // bool act_success = 1;
        if (this->_internal_act_success() != 0)
        {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_act_success(), target);
        }

        if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields()))
        {
            target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream
            );
        }
        // @@protoc_insertion_point(serialize_to_array_end:protobuf.BoolRes)
        return target;
    }

    size_t BoolRes::ByteSizeLong() const
    {
        // @@protoc_insertion_point(message_byte_size_start:protobuf.BoolRes)
        size_t total_size = 0;

        uint32_t cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        // bool act_success = 1;
        if (this->_internal_act_success() != 0)
        {
            total_size += 1 + 1;
        }

        return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
    }

    const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BoolRes::_class_data_ = {
        ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
        BoolRes::MergeImpl};
    const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* BoolRes::GetClassData() const
    {
        return &_class_data_;
    }

    void BoolRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from)
    {
        static_cast<BoolRes*>(to)->MergeFrom(
            static_cast<const BoolRes&>(from)
        );
    }

    void BoolRes::MergeFrom(const BoolRes& from)
    {
        // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.BoolRes)
        GOOGLE_DCHECK_NE(&from, this);
        uint32_t cached_has_bits = 0;
        (void)cached_has_bits;

        if (from._internal_act_success() != 0)
        {
            _internal_set_act_success(from._internal_act_success());
        }
        _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
    }

    void BoolRes::CopyFrom(const BoolRes& from)
    {
        // @@protoc_insertion_point(class_specific_copy_from_start:protobuf.BoolRes)
        if (&from == this)
            return;
        Clear();
        MergeFrom(from);
    }

    bool BoolRes::IsInitialized() const
    {
        return true;
    }

    void BoolRes::InternalSwap(BoolRes* other)
    {
        using std::swap;
        _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(act_success_, other->act_success_);
    }

    ::PROTOBUF_NAMESPACE_ID::Metadata BoolRes::GetMetadata() const
    {
        return ::_pbi::AssignDescriptors(
            &descriptor_table_Message2Clients_2eproto_getter, &descriptor_table_Message2Clients_2eproto_once, file_level_metadata_Message2Clients_2eproto[11]
        );
    }

    // @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
PROTOBUF_NAMESPACE_OPEN
template<>
PROTOBUF_NOINLINE ::protobuf::MessageOfShip*
    Arena::CreateMaybeMessage<::protobuf::MessageOfShip>(Arena* arena)
{
    return Arena::CreateMessageInternal<::protobuf::MessageOfShip>(arena);
}
template<>
PROTOBUF_NOINLINE ::protobuf::MessageOfBuilding*
    Arena::CreateMaybeMessage<::protobuf::MessageOfBuilding>(Arena* arena)
{
    return Arena::CreateMessageInternal<::protobuf::MessageOfBuilding>(arena);
}
template<>
PROTOBUF_NOINLINE ::protobuf::MessageOfBullet*
    Arena::CreateMaybeMessage<::protobuf::MessageOfBullet>(Arena* arena)
{
    return Arena::CreateMessageInternal<::protobuf::MessageOfBullet>(arena);
}
template<>
PROTOBUF_NOINLINE ::protobuf::MessageOfResource*
    Arena::CreateMaybeMessage<::protobuf::MessageOfResource>(Arena* arena)
{
    return Arena::CreateMessageInternal<::protobuf::MessageOfResource>(arena);
}
template<>
PROTOBUF_NOINLINE ::protobuf::MessageOfHome*
    Arena::CreateMaybeMessage<::protobuf::MessageOfHome>(Arena* arena)
{
    return Arena::CreateMessageInternal<::protobuf::MessageOfHome>(arena);
}
template<>
PROTOBUF_NOINLINE ::protobuf::MessageOfMap_Row*
    Arena::CreateMaybeMessage<::protobuf::MessageOfMap_Row>(Arena* arena)
{
    return Arena::CreateMessageInternal<::protobuf::MessageOfMap_Row>(arena);
}
template<>
PROTOBUF_NOINLINE ::protobuf::MessageOfMap*
    Arena::CreateMaybeMessage<::protobuf::MessageOfMap>(Arena* arena)
{
    return Arena::CreateMessageInternal<::protobuf::MessageOfMap>(arena);
}
template<>
PROTOBUF_NOINLINE ::protobuf::MessageOfObj*
    Arena::CreateMaybeMessage<::protobuf::MessageOfObj>(Arena* arena)
{
    return Arena::CreateMessageInternal<::protobuf::MessageOfObj>(arena);
}
template<>
PROTOBUF_NOINLINE ::protobuf::MessageOfAll*
    Arena::CreateMaybeMessage<::protobuf::MessageOfAll>(Arena* arena)
{
    return Arena::CreateMessageInternal<::protobuf::MessageOfAll>(arena);
}
template<>
PROTOBUF_NOINLINE ::protobuf::MessageToClient*
    Arena::CreateMaybeMessage<::protobuf::MessageToClient>(Arena* arena)
{
    return Arena::CreateMessageInternal<::protobuf::MessageToClient>(arena);
}
template<>
PROTOBUF_NOINLINE ::protobuf::MoveRes*
    Arena::CreateMaybeMessage<::protobuf::MoveRes>(Arena* arena)
{
    return Arena::CreateMessageInternal<::protobuf::MoveRes>(arena);
}
template<>
PROTOBUF_NOINLINE ::protobuf::BoolRes*
    Arena::CreateMaybeMessage<::protobuf::BoolRes>(Arena* arena)
{
    return Arena::CreateMessageInternal<::protobuf::BoolRes>(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
