// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Message2Server.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Protobuf {

  /// <summary>Holder for reflection information generated from Message2Server.proto</summary>
  public static partial class Message2ServerReflection {

    #region Descriptor
    /// <summary>File descriptor for Message2Server.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static Message2ServerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRNZXNzYWdlMlNlcnZlci5wcm90bxIIcHJvdG9idWYaEU1lc3NhZ2VUeXBl",
            "LnByb3RvIkEKB1NoaXBNc2cSDwoHc2hpcF9pZBgBIAEoAxIlCglzaGlwX3R5",
            "cGUYAiABKA4yEi5wcm90b2J1Zi5TaGlwVHlwZSJRCgtCdWlsZGluZ01zZxIT",
            "CgtidWlsZGluZ19pZBgBIAEoAxItCg1idWlsZGluZ190eXBlGAIgASgOMhYu",
            "cHJvdG9idWYuQnVpbGRpbmdUeXBlIi0KB0hvbWVNc2cSIgoEdGVhbRgBIAEo",
            "DjIULnByb3RvYnVmLlBsYXllclRlYW0iVQoMQ29sbGVjdG9yTXNnEhQKDGNv",
            "bGxlY3Rvcl9pZBgBIAEoAxIvCg5jb2xsZWN0b3JfdHlwZRgCIAEoDjIXLnBy",
            "b3RvYnVmLkNvbGxlY3RvclR5cGUiRQoIQXJtb3JNc2cSEAoIYXJtb3JfaWQY",
            "ASABKAMSJwoKYXJtb3JfdHlwZRgCIAEoDjITLnByb3RvYnVmLkFybW9yVHlw",
            "ZSJJCglTaGllbGRNc2cSEQoJc2hpZWxkX2lkGAEgASgDEikKC3NoaWVsZF90",
            "eXBlGAIgASgOMhQucHJvdG9idWYuU2hpZWxkVHlwZSJNCgpCdWlsZGVyTXNn",
            "EhIKCmJ1aWxkZXJfaWQYASABKAMSKwoMYnVpbGRlcl90eXBlGAIgASgOMhUu",
            "cHJvdG9idWYuQnVpbGRlclR5cGUiSwoLQnVsbGV0ZXJNc2cSEQoJYnVsbGV0",
            "X2lkGAEgASgDEikKC2J1bGxldF90eXBlGAIgASgOMhQucHJvdG9idWYuQnVs",
            "bGV0VHlwZSJHCgdNb3ZlTXNnEg8KB3NoaXBfaWQYASABKAMSDQoFYW5nbGUY",
            "AiABKAESHAoUdGltZV9pbl9taWxsaXNlY29uZHMYAyABKAMibwoHU2VuZE1z",
            "ZxIRCglwbGF5ZXJfaWQYASABKAMSFAoMdG9fcGxheWVyX2lkGAIgASgDEhYK",
            "DHRleHRfbWVzc2FnZRgDIAEoCUgAEhgKDmJpbmFyeV9tZXNzYWdlGAQgASgM",
            "SABCCQoHbWVzc2FnZSIrCglBdHRhY2tNc2cSDwoHc2hpcF9pZBgBIAEoAxIN",
            "CgVhbmdsZRgCIAEoASIYCgVJRE1zZxIPCgdzaGlwX2lkGAEgASgDIh0KClJl",
            "Y292ZXJNc2cSDwoHc2hpcF9pZBgBIAEoAyKGAQoIQnVpbGRNc2cSDwoHc2hp",
            "cF9pZBgBIAEoAxITCgtidWlsZGluZ19pZBgCIAEoAxItCg1idWlsZGluZ190",
            "eXBlGAMgASgOMhYucHJvdG9idWYuQnVpbGRpbmdUeXBlEiUKCXNoaXBfdHlw",
            "ZRgEIAEoDjISLnByb3RvYnVmLlNoaXBUeXBlYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Protobuf.MessageTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.ShipMsg), global::Protobuf.ShipMsg.Parser, new[]{ "ShipId", "ShipType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.BuildingMsg), global::Protobuf.BuildingMsg.Parser, new[]{ "BuildingId", "BuildingType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.HomeMsg), global::Protobuf.HomeMsg.Parser, new[]{ "Team" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.CollectorMsg), global::Protobuf.CollectorMsg.Parser, new[]{ "CollectorId", "CollectorType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.ArmorMsg), global::Protobuf.ArmorMsg.Parser, new[]{ "ArmorId", "ArmorType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.ShieldMsg), global::Protobuf.ShieldMsg.Parser, new[]{ "ShieldId", "ShieldType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.BuilderMsg), global::Protobuf.BuilderMsg.Parser, new[]{ "BuilderId", "BuilderType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.BulleterMsg), global::Protobuf.BulleterMsg.Parser, new[]{ "BulletId", "BulletType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.MoveMsg), global::Protobuf.MoveMsg.Parser, new[]{ "ShipId", "Angle", "TimeInMilliseconds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.SendMsg), global::Protobuf.SendMsg.Parser, new[]{ "PlayerId", "ToPlayerId", "TextMessage", "BinaryMessage" }, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.AttackMsg), global::Protobuf.AttackMsg.Parser, new[]{ "ShipId", "Angle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.IDMsg), global::Protobuf.IDMsg.Parser, new[]{ "ShipId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.RecoverMsg), global::Protobuf.RecoverMsg.Parser, new[]{ "ShipId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.BuildMsg), global::Protobuf.BuildMsg.Parser, new[]{ "ShipId", "BuildingId", "BuildingType", "ShipType" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ShipMsg : pb::IMessage<ShipMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ShipMsg> _parser = new pb::MessageParser<ShipMsg>(() => new ShipMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShipMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.Message2ServerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipMsg(ShipMsg other) : this() {
      shipId_ = other.shipId_;
      shipType_ = other.shipType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipMsg Clone() {
      return new ShipMsg(this);
    }

    /// <summary>Field number for the "ship_id" field.</summary>
    public const int ShipIdFieldNumber = 1;
    private long shipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ShipId {
      get { return shipId_; }
      set {
        shipId_ = value;
      }
    }

    /// <summary>Field number for the "ship_type" field.</summary>
    public const int ShipTypeFieldNumber = 2;
    private global::Protobuf.ShipType shipType_ = global::Protobuf.ShipType.NullShipType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.ShipType ShipType {
      get { return shipType_; }
      set {
        shipType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShipMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShipMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ShipId != other.ShipId) return false;
      if (ShipType != other.ShipType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ShipId != 0L) hash ^= ShipId.GetHashCode();
      if (ShipType != global::Protobuf.ShipType.NullShipType) hash ^= ShipType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ShipId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ShipId);
      }
      if (ShipType != global::Protobuf.ShipType.NullShipType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ShipType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ShipId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ShipId);
      }
      if (ShipType != global::Protobuf.ShipType.NullShipType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ShipType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ShipId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ShipId);
      }
      if (ShipType != global::Protobuf.ShipType.NullShipType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ShipType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShipMsg other) {
      if (other == null) {
        return;
      }
      if (other.ShipId != 0L) {
        ShipId = other.ShipId;
      }
      if (other.ShipType != global::Protobuf.ShipType.NullShipType) {
        ShipType = other.ShipType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ShipId = input.ReadInt64();
            break;
          }
          case 16: {
            ShipType = (global::Protobuf.ShipType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ShipId = input.ReadInt64();
            break;
          }
          case 16: {
            ShipType = (global::Protobuf.ShipType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BuildingMsg : pb::IMessage<BuildingMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BuildingMsg> _parser = new pb::MessageParser<BuildingMsg>(() => new BuildingMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuildingMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.Message2ServerReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildingMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildingMsg(BuildingMsg other) : this() {
      buildingId_ = other.buildingId_;
      buildingType_ = other.buildingType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildingMsg Clone() {
      return new BuildingMsg(this);
    }

    /// <summary>Field number for the "building_id" field.</summary>
    public const int BuildingIdFieldNumber = 1;
    private long buildingId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BuildingId {
      get { return buildingId_; }
      set {
        buildingId_ = value;
      }
    }

    /// <summary>Field number for the "building_type" field.</summary>
    public const int BuildingTypeFieldNumber = 2;
    private global::Protobuf.BuildingType buildingType_ = global::Protobuf.BuildingType.NullBuildingType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.BuildingType BuildingType {
      get { return buildingType_; }
      set {
        buildingType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuildingMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuildingMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuildingId != other.BuildingId) return false;
      if (BuildingType != other.BuildingType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuildingId != 0L) hash ^= BuildingId.GetHashCode();
      if (BuildingType != global::Protobuf.BuildingType.NullBuildingType) hash ^= BuildingType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BuildingId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(BuildingId);
      }
      if (BuildingType != global::Protobuf.BuildingType.NullBuildingType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) BuildingType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BuildingId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(BuildingId);
      }
      if (BuildingType != global::Protobuf.BuildingType.NullBuildingType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) BuildingType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuildingId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BuildingId);
      }
      if (BuildingType != global::Protobuf.BuildingType.NullBuildingType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BuildingType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuildingMsg other) {
      if (other == null) {
        return;
      }
      if (other.BuildingId != 0L) {
        BuildingId = other.BuildingId;
      }
      if (other.BuildingType != global::Protobuf.BuildingType.NullBuildingType) {
        BuildingType = other.BuildingType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BuildingId = input.ReadInt64();
            break;
          }
          case 16: {
            BuildingType = (global::Protobuf.BuildingType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BuildingId = input.ReadInt64();
            break;
          }
          case 16: {
            BuildingType = (global::Protobuf.BuildingType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class HomeMsg : pb::IMessage<HomeMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HomeMsg> _parser = new pb::MessageParser<HomeMsg>(() => new HomeMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HomeMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.Message2ServerReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HomeMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HomeMsg(HomeMsg other) : this() {
      team_ = other.team_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HomeMsg Clone() {
      return new HomeMsg(this);
    }

    /// <summary>Field number for the "team" field.</summary>
    public const int TeamFieldNumber = 1;
    private global::Protobuf.PlayerTeam team_ = global::Protobuf.PlayerTeam.NullTeam;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.PlayerTeam Team {
      get { return team_; }
      set {
        team_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HomeMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HomeMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Team != other.Team) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Team != global::Protobuf.PlayerTeam.NullTeam) hash ^= Team.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Team != global::Protobuf.PlayerTeam.NullTeam) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Team);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Team != global::Protobuf.PlayerTeam.NullTeam) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Team);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Team != global::Protobuf.PlayerTeam.NullTeam) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Team);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HomeMsg other) {
      if (other == null) {
        return;
      }
      if (other.Team != global::Protobuf.PlayerTeam.NullTeam) {
        Team = other.Team;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Team = (global::Protobuf.PlayerTeam) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Team = (global::Protobuf.PlayerTeam) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CollectorMsg : pb::IMessage<CollectorMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CollectorMsg> _parser = new pb::MessageParser<CollectorMsg>(() => new CollectorMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CollectorMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.Message2ServerReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectorMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectorMsg(CollectorMsg other) : this() {
      collectorId_ = other.collectorId_;
      collectorType_ = other.collectorType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectorMsg Clone() {
      return new CollectorMsg(this);
    }

    /// <summary>Field number for the "collector_id" field.</summary>
    public const int CollectorIdFieldNumber = 1;
    private long collectorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CollectorId {
      get { return collectorId_; }
      set {
        collectorId_ = value;
      }
    }

    /// <summary>Field number for the "collector_type" field.</summary>
    public const int CollectorTypeFieldNumber = 2;
    private global::Protobuf.CollectorType collectorType_ = global::Protobuf.CollectorType.NullCollectorType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.CollectorType CollectorType {
      get { return collectorType_; }
      set {
        collectorType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CollectorMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CollectorMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CollectorId != other.CollectorId) return false;
      if (CollectorType != other.CollectorType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CollectorId != 0L) hash ^= CollectorId.GetHashCode();
      if (CollectorType != global::Protobuf.CollectorType.NullCollectorType) hash ^= CollectorType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CollectorId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CollectorId);
      }
      if (CollectorType != global::Protobuf.CollectorType.NullCollectorType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) CollectorType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CollectorId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CollectorId);
      }
      if (CollectorType != global::Protobuf.CollectorType.NullCollectorType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) CollectorType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CollectorId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CollectorId);
      }
      if (CollectorType != global::Protobuf.CollectorType.NullCollectorType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CollectorType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CollectorMsg other) {
      if (other == null) {
        return;
      }
      if (other.CollectorId != 0L) {
        CollectorId = other.CollectorId;
      }
      if (other.CollectorType != global::Protobuf.CollectorType.NullCollectorType) {
        CollectorType = other.CollectorType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CollectorId = input.ReadInt64();
            break;
          }
          case 16: {
            CollectorType = (global::Protobuf.CollectorType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CollectorId = input.ReadInt64();
            break;
          }
          case 16: {
            CollectorType = (global::Protobuf.CollectorType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ArmorMsg : pb::IMessage<ArmorMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ArmorMsg> _parser = new pb::MessageParser<ArmorMsg>(() => new ArmorMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArmorMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.Message2ServerReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmorMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmorMsg(ArmorMsg other) : this() {
      armorId_ = other.armorId_;
      armorType_ = other.armorType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmorMsg Clone() {
      return new ArmorMsg(this);
    }

    /// <summary>Field number for the "armor_id" field.</summary>
    public const int ArmorIdFieldNumber = 1;
    private long armorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ArmorId {
      get { return armorId_; }
      set {
        armorId_ = value;
      }
    }

    /// <summary>Field number for the "armor_type" field.</summary>
    public const int ArmorTypeFieldNumber = 2;
    private global::Protobuf.ArmorType armorType_ = global::Protobuf.ArmorType.NullArmorType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.ArmorType ArmorType {
      get { return armorType_; }
      set {
        armorType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArmorMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArmorMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ArmorId != other.ArmorId) return false;
      if (ArmorType != other.ArmorType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ArmorId != 0L) hash ^= ArmorId.GetHashCode();
      if (ArmorType != global::Protobuf.ArmorType.NullArmorType) hash ^= ArmorType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ArmorId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ArmorId);
      }
      if (ArmorType != global::Protobuf.ArmorType.NullArmorType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ArmorType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ArmorId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ArmorId);
      }
      if (ArmorType != global::Protobuf.ArmorType.NullArmorType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ArmorType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ArmorId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ArmorId);
      }
      if (ArmorType != global::Protobuf.ArmorType.NullArmorType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ArmorType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArmorMsg other) {
      if (other == null) {
        return;
      }
      if (other.ArmorId != 0L) {
        ArmorId = other.ArmorId;
      }
      if (other.ArmorType != global::Protobuf.ArmorType.NullArmorType) {
        ArmorType = other.ArmorType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ArmorId = input.ReadInt64();
            break;
          }
          case 16: {
            ArmorType = (global::Protobuf.ArmorType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ArmorId = input.ReadInt64();
            break;
          }
          case 16: {
            ArmorType = (global::Protobuf.ArmorType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ShieldMsg : pb::IMessage<ShieldMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ShieldMsg> _parser = new pb::MessageParser<ShieldMsg>(() => new ShieldMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShieldMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.Message2ServerReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShieldMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShieldMsg(ShieldMsg other) : this() {
      shieldId_ = other.shieldId_;
      shieldType_ = other.shieldType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShieldMsg Clone() {
      return new ShieldMsg(this);
    }

    /// <summary>Field number for the "shield_id" field.</summary>
    public const int ShieldIdFieldNumber = 1;
    private long shieldId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ShieldId {
      get { return shieldId_; }
      set {
        shieldId_ = value;
      }
    }

    /// <summary>Field number for the "shield_type" field.</summary>
    public const int ShieldTypeFieldNumber = 2;
    private global::Protobuf.ShieldType shieldType_ = global::Protobuf.ShieldType.NullShieldType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.ShieldType ShieldType {
      get { return shieldType_; }
      set {
        shieldType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShieldMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShieldMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ShieldId != other.ShieldId) return false;
      if (ShieldType != other.ShieldType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ShieldId != 0L) hash ^= ShieldId.GetHashCode();
      if (ShieldType != global::Protobuf.ShieldType.NullShieldType) hash ^= ShieldType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ShieldId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ShieldId);
      }
      if (ShieldType != global::Protobuf.ShieldType.NullShieldType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ShieldType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ShieldId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ShieldId);
      }
      if (ShieldType != global::Protobuf.ShieldType.NullShieldType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ShieldType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ShieldId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ShieldId);
      }
      if (ShieldType != global::Protobuf.ShieldType.NullShieldType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ShieldType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShieldMsg other) {
      if (other == null) {
        return;
      }
      if (other.ShieldId != 0L) {
        ShieldId = other.ShieldId;
      }
      if (other.ShieldType != global::Protobuf.ShieldType.NullShieldType) {
        ShieldType = other.ShieldType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ShieldId = input.ReadInt64();
            break;
          }
          case 16: {
            ShieldType = (global::Protobuf.ShieldType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ShieldId = input.ReadInt64();
            break;
          }
          case 16: {
            ShieldType = (global::Protobuf.ShieldType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BuilderMsg : pb::IMessage<BuilderMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BuilderMsg> _parser = new pb::MessageParser<BuilderMsg>(() => new BuilderMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuilderMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.Message2ServerReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuilderMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuilderMsg(BuilderMsg other) : this() {
      builderId_ = other.builderId_;
      builderType_ = other.builderType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuilderMsg Clone() {
      return new BuilderMsg(this);
    }

    /// <summary>Field number for the "builder_id" field.</summary>
    public const int BuilderIdFieldNumber = 1;
    private long builderId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BuilderId {
      get { return builderId_; }
      set {
        builderId_ = value;
      }
    }

    /// <summary>Field number for the "builder_type" field.</summary>
    public const int BuilderTypeFieldNumber = 2;
    private global::Protobuf.BuilderType builderType_ = global::Protobuf.BuilderType.NullBuilderType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.BuilderType BuilderType {
      get { return builderType_; }
      set {
        builderType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuilderMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuilderMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuilderId != other.BuilderId) return false;
      if (BuilderType != other.BuilderType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuilderId != 0L) hash ^= BuilderId.GetHashCode();
      if (BuilderType != global::Protobuf.BuilderType.NullBuilderType) hash ^= BuilderType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BuilderId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(BuilderId);
      }
      if (BuilderType != global::Protobuf.BuilderType.NullBuilderType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) BuilderType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BuilderId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(BuilderId);
      }
      if (BuilderType != global::Protobuf.BuilderType.NullBuilderType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) BuilderType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuilderId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BuilderId);
      }
      if (BuilderType != global::Protobuf.BuilderType.NullBuilderType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BuilderType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuilderMsg other) {
      if (other == null) {
        return;
      }
      if (other.BuilderId != 0L) {
        BuilderId = other.BuilderId;
      }
      if (other.BuilderType != global::Protobuf.BuilderType.NullBuilderType) {
        BuilderType = other.BuilderType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BuilderId = input.ReadInt64();
            break;
          }
          case 16: {
            BuilderType = (global::Protobuf.BuilderType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BuilderId = input.ReadInt64();
            break;
          }
          case 16: {
            BuilderType = (global::Protobuf.BuilderType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BulleterMsg : pb::IMessage<BulleterMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BulleterMsg> _parser = new pb::MessageParser<BulleterMsg>(() => new BulleterMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BulleterMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.Message2ServerReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulleterMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulleterMsg(BulleterMsg other) : this() {
      bulletId_ = other.bulletId_;
      bulletType_ = other.bulletType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulleterMsg Clone() {
      return new BulleterMsg(this);
    }

    /// <summary>Field number for the "bullet_id" field.</summary>
    public const int BulletIdFieldNumber = 1;
    private long bulletId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BulletId {
      get { return bulletId_; }
      set {
        bulletId_ = value;
      }
    }

    /// <summary>Field number for the "bullet_type" field.</summary>
    public const int BulletTypeFieldNumber = 2;
    private global::Protobuf.BulletType bulletType_ = global::Protobuf.BulletType.NullBulletType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.BulletType BulletType {
      get { return bulletType_; }
      set {
        bulletType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BulleterMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BulleterMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BulletId != other.BulletId) return false;
      if (BulletType != other.BulletType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BulletId != 0L) hash ^= BulletId.GetHashCode();
      if (BulletType != global::Protobuf.BulletType.NullBulletType) hash ^= BulletType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BulletId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(BulletId);
      }
      if (BulletType != global::Protobuf.BulletType.NullBulletType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) BulletType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BulletId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(BulletId);
      }
      if (BulletType != global::Protobuf.BulletType.NullBulletType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) BulletType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BulletId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BulletId);
      }
      if (BulletType != global::Protobuf.BulletType.NullBulletType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BulletType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BulleterMsg other) {
      if (other == null) {
        return;
      }
      if (other.BulletId != 0L) {
        BulletId = other.BulletId;
      }
      if (other.BulletType != global::Protobuf.BulletType.NullBulletType) {
        BulletType = other.BulletType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BulletId = input.ReadInt64();
            break;
          }
          case 16: {
            BulletType = (global::Protobuf.BulletType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BulletId = input.ReadInt64();
            break;
          }
          case 16: {
            BulletType = (global::Protobuf.BulletType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MoveMsg : pb::IMessage<MoveMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MoveMsg> _parser = new pb::MessageParser<MoveMsg>(() => new MoveMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MoveMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.Message2ServerReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveMsg(MoveMsg other) : this() {
      shipId_ = other.shipId_;
      angle_ = other.angle_;
      timeInMilliseconds_ = other.timeInMilliseconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveMsg Clone() {
      return new MoveMsg(this);
    }

    /// <summary>Field number for the "ship_id" field.</summary>
    public const int ShipIdFieldNumber = 1;
    private long shipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ShipId {
      get { return shipId_; }
      set {
        shipId_ = value;
      }
    }

    /// <summary>Field number for the "angle" field.</summary>
    public const int AngleFieldNumber = 2;
    private double angle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Angle {
      get { return angle_; }
      set {
        angle_ = value;
      }
    }

    /// <summary>Field number for the "time_in_milliseconds" field.</summary>
    public const int TimeInMillisecondsFieldNumber = 3;
    private long timeInMilliseconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TimeInMilliseconds {
      get { return timeInMilliseconds_; }
      set {
        timeInMilliseconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MoveMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MoveMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ShipId != other.ShipId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Angle, other.Angle)) return false;
      if (TimeInMilliseconds != other.TimeInMilliseconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ShipId != 0L) hash ^= ShipId.GetHashCode();
      if (Angle != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Angle);
      if (TimeInMilliseconds != 0L) hash ^= TimeInMilliseconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ShipId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ShipId);
      }
      if (Angle != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Angle);
      }
      if (TimeInMilliseconds != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TimeInMilliseconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ShipId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ShipId);
      }
      if (Angle != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Angle);
      }
      if (TimeInMilliseconds != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TimeInMilliseconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ShipId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ShipId);
      }
      if (Angle != 0D) {
        size += 1 + 8;
      }
      if (TimeInMilliseconds != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimeInMilliseconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MoveMsg other) {
      if (other == null) {
        return;
      }
      if (other.ShipId != 0L) {
        ShipId = other.ShipId;
      }
      if (other.Angle != 0D) {
        Angle = other.Angle;
      }
      if (other.TimeInMilliseconds != 0L) {
        TimeInMilliseconds = other.TimeInMilliseconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ShipId = input.ReadInt64();
            break;
          }
          case 17: {
            Angle = input.ReadDouble();
            break;
          }
          case 24: {
            TimeInMilliseconds = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ShipId = input.ReadInt64();
            break;
          }
          case 17: {
            Angle = input.ReadDouble();
            break;
          }
          case 24: {
            TimeInMilliseconds = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SendMsg : pb::IMessage<SendMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SendMsg> _parser = new pb::MessageParser<SendMsg>(() => new SendMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.Message2ServerReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMsg(SendMsg other) : this() {
      playerId_ = other.playerId_;
      toPlayerId_ = other.toPlayerId_;
      switch (other.MessageCase) {
        case MessageOneofCase.TextMessage:
          TextMessage = other.TextMessage;
          break;
        case MessageOneofCase.BinaryMessage:
          BinaryMessage = other.BinaryMessage;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMsg Clone() {
      return new SendMsg(this);
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private long playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "to_player_id" field.</summary>
    public const int ToPlayerIdFieldNumber = 2;
    private long toPlayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ToPlayerId {
      get { return toPlayerId_; }
      set {
        toPlayerId_ = value;
      }
    }

    /// <summary>Field number for the "text_message" field.</summary>
    public const int TextMessageFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TextMessage {
      get { return messageCase_ == MessageOneofCase.TextMessage ? (string) message_ : ""; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        messageCase_ = MessageOneofCase.TextMessage;
      }
    }

    /// <summary>Field number for the "binary_message" field.</summary>
    public const int BinaryMessageFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString BinaryMessage {
      get { return messageCase_ == MessageOneofCase.BinaryMessage ? (pb::ByteString) message_ : pb::ByteString.Empty; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        messageCase_ = MessageOneofCase.BinaryMessage;
      }
    }

    private object message_;
    /// <summary>Enum of possible cases for the "message" oneof.</summary>
    public enum MessageOneofCase {
      None = 0,
      TextMessage = 3,
      BinaryMessage = 4,
    }
    private MessageOneofCase messageCase_ = MessageOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOneofCase MessageCase {
      get { return messageCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      messageCase_ = MessageOneofCase.None;
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (ToPlayerId != other.ToPlayerId) return false;
      if (TextMessage != other.TextMessage) return false;
      if (BinaryMessage != other.BinaryMessage) return false;
      if (MessageCase != other.MessageCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0L) hash ^= PlayerId.GetHashCode();
      if (ToPlayerId != 0L) hash ^= ToPlayerId.GetHashCode();
      if (messageCase_ == MessageOneofCase.TextMessage) hash ^= TextMessage.GetHashCode();
      if (messageCase_ == MessageOneofCase.BinaryMessage) hash ^= BinaryMessage.GetHashCode();
      hash ^= (int) messageCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PlayerId);
      }
      if (ToPlayerId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ToPlayerId);
      }
      if (messageCase_ == MessageOneofCase.TextMessage) {
        output.WriteRawTag(26);
        output.WriteString(TextMessage);
      }
      if (messageCase_ == MessageOneofCase.BinaryMessage) {
        output.WriteRawTag(34);
        output.WriteBytes(BinaryMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PlayerId);
      }
      if (ToPlayerId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ToPlayerId);
      }
      if (messageCase_ == MessageOneofCase.TextMessage) {
        output.WriteRawTag(26);
        output.WriteString(TextMessage);
      }
      if (messageCase_ == MessageOneofCase.BinaryMessage) {
        output.WriteRawTag(34);
        output.WriteBytes(BinaryMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlayerId);
      }
      if (ToPlayerId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ToPlayerId);
      }
      if (messageCase_ == MessageOneofCase.TextMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TextMessage);
      }
      if (messageCase_ == MessageOneofCase.BinaryMessage) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BinaryMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendMsg other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0L) {
        PlayerId = other.PlayerId;
      }
      if (other.ToPlayerId != 0L) {
        ToPlayerId = other.ToPlayerId;
      }
      switch (other.MessageCase) {
        case MessageOneofCase.TextMessage:
          TextMessage = other.TextMessage;
          break;
        case MessageOneofCase.BinaryMessage:
          BinaryMessage = other.BinaryMessage;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt64();
            break;
          }
          case 16: {
            ToPlayerId = input.ReadInt64();
            break;
          }
          case 26: {
            TextMessage = input.ReadString();
            break;
          }
          case 34: {
            BinaryMessage = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt64();
            break;
          }
          case 16: {
            ToPlayerId = input.ReadInt64();
            break;
          }
          case 26: {
            TextMessage = input.ReadString();
            break;
          }
          case 34: {
            BinaryMessage = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AttackMsg : pb::IMessage<AttackMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AttackMsg> _parser = new pb::MessageParser<AttackMsg>(() => new AttackMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttackMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.Message2ServerReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttackMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttackMsg(AttackMsg other) : this() {
      shipId_ = other.shipId_;
      angle_ = other.angle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttackMsg Clone() {
      return new AttackMsg(this);
    }

    /// <summary>Field number for the "ship_id" field.</summary>
    public const int ShipIdFieldNumber = 1;
    private long shipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ShipId {
      get { return shipId_; }
      set {
        shipId_ = value;
      }
    }

    /// <summary>Field number for the "angle" field.</summary>
    public const int AngleFieldNumber = 2;
    private double angle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Angle {
      get { return angle_; }
      set {
        angle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttackMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttackMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ShipId != other.ShipId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Angle, other.Angle)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ShipId != 0L) hash ^= ShipId.GetHashCode();
      if (Angle != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Angle);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ShipId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ShipId);
      }
      if (Angle != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Angle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ShipId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ShipId);
      }
      if (Angle != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Angle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ShipId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ShipId);
      }
      if (Angle != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttackMsg other) {
      if (other == null) {
        return;
      }
      if (other.ShipId != 0L) {
        ShipId = other.ShipId;
      }
      if (other.Angle != 0D) {
        Angle = other.Angle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ShipId = input.ReadInt64();
            break;
          }
          case 17: {
            Angle = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ShipId = input.ReadInt64();
            break;
          }
          case 17: {
            Angle = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class IDMsg : pb::IMessage<IDMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IDMsg> _parser = new pb::MessageParser<IDMsg>(() => new IDMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IDMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.Message2ServerReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IDMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IDMsg(IDMsg other) : this() {
      shipId_ = other.shipId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IDMsg Clone() {
      return new IDMsg(this);
    }

    /// <summary>Field number for the "ship_id" field.</summary>
    public const int ShipIdFieldNumber = 1;
    private long shipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ShipId {
      get { return shipId_; }
      set {
        shipId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IDMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IDMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ShipId != other.ShipId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ShipId != 0L) hash ^= ShipId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ShipId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ShipId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ShipId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ShipId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ShipId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ShipId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IDMsg other) {
      if (other == null) {
        return;
      }
      if (other.ShipId != 0L) {
        ShipId = other.ShipId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ShipId = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ShipId = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RecoverMsg : pb::IMessage<RecoverMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RecoverMsg> _parser = new pb::MessageParser<RecoverMsg>(() => new RecoverMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecoverMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.Message2ServerReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecoverMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecoverMsg(RecoverMsg other) : this() {
      shipId_ = other.shipId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecoverMsg Clone() {
      return new RecoverMsg(this);
    }

    /// <summary>Field number for the "ship_id" field.</summary>
    public const int ShipIdFieldNumber = 1;
    private long shipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ShipId {
      get { return shipId_; }
      set {
        shipId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecoverMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecoverMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ShipId != other.ShipId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ShipId != 0L) hash ^= ShipId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ShipId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ShipId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ShipId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ShipId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ShipId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ShipId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecoverMsg other) {
      if (other == null) {
        return;
      }
      if (other.ShipId != 0L) {
        ShipId = other.ShipId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ShipId = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ShipId = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BuildMsg : pb::IMessage<BuildMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BuildMsg> _parser = new pb::MessageParser<BuildMsg>(() => new BuildMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuildMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.Message2ServerReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildMsg(BuildMsg other) : this() {
      shipId_ = other.shipId_;
      buildingId_ = other.buildingId_;
      buildingType_ = other.buildingType_;
      shipType_ = other.shipType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildMsg Clone() {
      return new BuildMsg(this);
    }

    /// <summary>Field number for the "ship_id" field.</summary>
    public const int ShipIdFieldNumber = 1;
    private long shipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ShipId {
      get { return shipId_; }
      set {
        shipId_ = value;
      }
    }

    /// <summary>Field number for the "building_id" field.</summary>
    public const int BuildingIdFieldNumber = 2;
    private long buildingId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BuildingId {
      get { return buildingId_; }
      set {
        buildingId_ = value;
      }
    }

    /// <summary>Field number for the "building_type" field.</summary>
    public const int BuildingTypeFieldNumber = 3;
    private global::Protobuf.BuildingType buildingType_ = global::Protobuf.BuildingType.NullBuildingType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.BuildingType BuildingType {
      get { return buildingType_; }
      set {
        buildingType_ = value;
      }
    }

    /// <summary>Field number for the "ship_type" field.</summary>
    public const int ShipTypeFieldNumber = 4;
    private global::Protobuf.ShipType shipType_ = global::Protobuf.ShipType.NullShipType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.ShipType ShipType {
      get { return shipType_; }
      set {
        shipType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuildMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuildMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ShipId != other.ShipId) return false;
      if (BuildingId != other.BuildingId) return false;
      if (BuildingType != other.BuildingType) return false;
      if (ShipType != other.ShipType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ShipId != 0L) hash ^= ShipId.GetHashCode();
      if (BuildingId != 0L) hash ^= BuildingId.GetHashCode();
      if (BuildingType != global::Protobuf.BuildingType.NullBuildingType) hash ^= BuildingType.GetHashCode();
      if (ShipType != global::Protobuf.ShipType.NullShipType) hash ^= ShipType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ShipId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ShipId);
      }
      if (BuildingId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(BuildingId);
      }
      if (BuildingType != global::Protobuf.BuildingType.NullBuildingType) {
        output.WriteRawTag(24);
        output.WriteEnum((int) BuildingType);
      }
      if (ShipType != global::Protobuf.ShipType.NullShipType) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ShipType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ShipId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ShipId);
      }
      if (BuildingId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(BuildingId);
      }
      if (BuildingType != global::Protobuf.BuildingType.NullBuildingType) {
        output.WriteRawTag(24);
        output.WriteEnum((int) BuildingType);
      }
      if (ShipType != global::Protobuf.ShipType.NullShipType) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ShipType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ShipId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ShipId);
      }
      if (BuildingId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BuildingId);
      }
      if (BuildingType != global::Protobuf.BuildingType.NullBuildingType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BuildingType);
      }
      if (ShipType != global::Protobuf.ShipType.NullShipType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ShipType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuildMsg other) {
      if (other == null) {
        return;
      }
      if (other.ShipId != 0L) {
        ShipId = other.ShipId;
      }
      if (other.BuildingId != 0L) {
        BuildingId = other.BuildingId;
      }
      if (other.BuildingType != global::Protobuf.BuildingType.NullBuildingType) {
        BuildingType = other.BuildingType;
      }
      if (other.ShipType != global::Protobuf.ShipType.NullShipType) {
        ShipType = other.ShipType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ShipId = input.ReadInt64();
            break;
          }
          case 16: {
            BuildingId = input.ReadInt64();
            break;
          }
          case 24: {
            BuildingType = (global::Protobuf.BuildingType) input.ReadEnum();
            break;
          }
          case 32: {
            ShipType = (global::Protobuf.ShipType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ShipId = input.ReadInt64();
            break;
          }
          case 16: {
            BuildingId = input.ReadInt64();
            break;
          }
          case 24: {
            BuildingType = (global::Protobuf.BuildingType) input.ReadEnum();
            break;
          }
          case 32: {
            ShipType = (global::Protobuf.ShipType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
