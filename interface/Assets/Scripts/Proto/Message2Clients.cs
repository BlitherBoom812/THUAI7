// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Message2Clients.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Protobuf {

  /// <summary>Holder for reflection information generated from Message2Clients.proto</summary>
  public static partial class Message2ClientsReflection {

    #region Descriptor
    /// <summary>File descriptor for Message2Clients.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static Message2ClientsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVNZXNzYWdlMkNsaWVudHMucHJvdG8SCHByb3RvYnVmGhFNZXNzYWdlVHlw",
            "ZS5wcm90byKnBAoNTWVzc2FnZU9mU2hpcBIJCgF4GAEgASgFEgkKAXkYAiAB",
            "KAUSDQoFc3BlZWQYAyABKAUSCgoCaHAYBCABKAUSDQoFYXJtb3IYBSABKAUS",
            "DgoGc2hpZWxkGAYgASgFEiIKBXBsYWNlGAcgASgOMhMucHJvdG9idWYuUGxh",
            "Y2VUeXBlEicKCnNoaXBfc3RhdGUYCCABKA4yEy5wcm90b2J1Zi5TaGlwU3Rh",
            "dGUSIgoEdGVhbRgJIAEoDjIULnByb3RvYnVmLlBsYXllclRlYW0SDwoHc2hp",
            "cF9pZBgKIAEoAxIVCg1SZWNvdmVyX3NwZWVkGAsgASgFEg8KB2Vjb25vbXkY",
            "DCABKAUSLwoOY29sbGVjdG9yX3R5cGUYDSABKA4yFy5wcm90b2J1Zi5Db2xs",
            "ZWN0b3JUeXBlEicKCmFybW9yX3R5cGUYDiABKA4yEy5wcm90b2J1Zi5Bcm1v",
            "clR5cGUSKQoLc2hpZWxkX3R5cGUYDyABKA4yFC5wcm90b2J1Zi5TaGllbGRU",
            "eXBlEisKDGJ1aWxkZXJfdHlwZRgQIAEoDjIVLnByb3RvYnVmLkJ1aWxkZXJU",
            "eXBlEikKC2J1bGxldF90eXBlGBEgASgOMhQucHJvdG9idWYuQnVsbGV0VHlw",
            "ZRIlCglzaGlwX3R5cGUYEiABKA4yEi5wcm90b2J1Zi5TaGlwVHlwZRIYChBm",
            "YWNpbmdfZGlyZWN0aW9uGBMgASgBIp0BChFNZXNzYWdlT2ZCdWlsZGluZxIJ",
            "CgF4GAEgASgFEgkKAXkYAiABKAUSCgoCaHAYAyABKAUSLQoNYnVpbGRpbmdf",
            "dHlwZRgEIAEoDjIWLnByb3RvYnVmLkJ1aWxkaW5nVHlwZRIiCgR0ZWFtGAUg",
            "ASgOMhQucHJvdG9idWYuUGxheWVyVGVhbRITCgtidWlsZGluZ19pZBgGIAEo",
            "AyLzAQoPTWVzc2FnZU9mQnVsbGV0EiIKBHR5cGUYASABKA4yFC5wcm90b2J1",
            "Zi5CdWxsZXRUeXBlEgkKAXgYAiABKAUSCQoBeRgDIAEoBRIYChBmYWNpbmdf",
            "ZGlyZWN0aW9uGAQgASgBEgwKBGd1aWQYBSABKAMSEgoKYXJtb3JfcmF0ZRgG",
            "IAEoARITCgtzaGllbGRfcmF0ZRgHIAEoARIOCgZkYW1hZ2UYCCABKAUSIgoE",
            "dGVhbRgJIAEoDjIULnByb3RvYnVmLlBsYXllclRlYW0SEgoKYm9tYl9yYW5n",
            "ZRgKIAEoARINCgVzcGVlZBgLIAEoBSI7ChFNZXNzYWdlT2ZSZXNvdXJjZRIJ",
            "CgF4GAEgASgFEgkKAXkYAiABKAUSEAoIcHJvZ3Jlc3MYAyABKAUiZgoNTWVz",
            "c2FnZU9mSG9tZRIJCgF4GAEgASgFEgkKAXkYAiABKAUSDwoHZWNvbm9teRgD",
            "IAEoBRIKCgJocBgEIAEoBRIiCgR0ZWFtGAUgASgOMhQucHJvdG9idWYuUGxh",
            "eWVyVGVhbSJgCgxNZXNzYWdlT2ZNYXASJwoDcm93GAIgAygLMhoucHJvdG9i",
            "dWYuTWVzc2FnZU9mTWFwLlJvdxonCgNSb3cSIAoDY29sGAEgAygOMhMucHJv",
            "dG9idWYuUGxhY2VUeXBlItgCCgxNZXNzYWdlT2ZPYmoSLwoMc2hpcF9tZXNz",
            "YWdlGAEgASgLMhcucHJvdG9idWYuTWVzc2FnZU9mU2hpcEgAEjcKEEJ1aWxk",
            "aW5nX21lc3NhZ2UYAiABKAsyGy5wcm90b2J1Zi5NZXNzYWdlT2ZCdWlsZGlu",
            "Z0gAEjMKDmJ1bGxldF9tZXNzYWdlGAMgASgLMhkucHJvdG9idWYuTWVzc2Fn",
            "ZU9mQnVsbGV0SAASLwoMaG9tZV9tZXNzYWdlGAQgASgLMhcucHJvdG9idWYu",
            "TWVzc2FnZU9mSG9tZUgAEjcKEHJlc291cmNlX21lc3NhZ2UYBSABKAsyGy5w",
            "cm90b2J1Zi5NZXNzYWdlT2ZSZXNvdXJjZUgAEi0KC21hcF9tZXNzYWdlGAYg",
            "ASgLMhYucHJvdG9idWYuTWVzc2FnZU9mTWFwSABCEAoObWVzc2FnZV9vZl9v",
            "YmoiIQoMTWVzc2FnZU9mQWxsEhEKCWdhbWVfdGltZRgBIAEoBSKUAQoPTWVz",
            "c2FnZVRvQ2xpZW50EisKC29ial9tZXNzYWdlGAEgAygLMhYucHJvdG9idWYu",
            "TWVzc2FnZU9mT2JqEicKCmdhbWVfc3RhdGUYAiABKA4yEy5wcm90b2J1Zi5H",
            "YW1lU3RhdGUSKwoLYWxsX21lc3NhZ2UYAyABKAsyFi5wcm90b2J1Zi5NZXNz",
            "YWdlT2ZBbGwiSgoHTW92ZVJlcxIUCgxhY3R1YWxfc3BlZWQYASABKAMSFAoM",
            "YWN0dWFsX2FuZ2xlGAIgASgBEhMKC2FjdF9zdWNjZXNzGAMgASgIIh4KB0Jv",
            "b2xSZXMSEwoLYWN0X3N1Y2Nlc3MYASABKAhiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Protobuf.MessageTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.MessageOfShip), global::Protobuf.MessageOfShip.Parser, new[]{ "X", "Y", "Speed", "Hp", "Armor", "Shield", "Place", "ShipState", "Team", "ShipId", "RecoverSpeed", "Economy", "CollectorType", "ArmorType", "ShieldType", "BuilderType", "BulletType", "ShipType", "FacingDirection" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.MessageOfBuilding), global::Protobuf.MessageOfBuilding.Parser, new[]{ "X", "Y", "Hp", "BuildingType", "Team", "BuildingId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.MessageOfBullet), global::Protobuf.MessageOfBullet.Parser, new[]{ "Type", "X", "Y", "FacingDirection", "Guid", "ArmorRate", "ShieldRate", "Damage", "Team", "BombRange", "Speed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.MessageOfResource), global::Protobuf.MessageOfResource.Parser, new[]{ "X", "Y", "Progress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.MessageOfHome), global::Protobuf.MessageOfHome.Parser, new[]{ "X", "Y", "Economy", "Hp", "Team" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.MessageOfMap), global::Protobuf.MessageOfMap.Parser, new[]{ "Row" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.MessageOfMap.Types.Row), global::Protobuf.MessageOfMap.Types.Row.Parser, new[]{ "Col" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.MessageOfObj), global::Protobuf.MessageOfObj.Parser, new[]{ "ShipMessage", "BuildingMessage", "BulletMessage", "HomeMessage", "ResourceMessage", "MapMessage" }, new[]{ "MessageOfObj" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.MessageOfAll), global::Protobuf.MessageOfAll.Parser, new[]{ "GameTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.MessageToClient), global::Protobuf.MessageToClient.Parser, new[]{ "ObjMessage", "GameState", "AllMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.MoveRes), global::Protobuf.MoveRes.Parser, new[]{ "ActualSpeed", "ActualAngle", "ActSuccess" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.BoolRes), global::Protobuf.BoolRes.Parser, new[]{ "ActSuccess" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MessageOfShip : pb::IMessage<MessageOfShip>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MessageOfShip> _parser = new pb::MessageParser<MessageOfShip>(() => new MessageOfShip());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageOfShip> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.Message2ClientsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfShip() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfShip(MessageOfShip other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      speed_ = other.speed_;
      hp_ = other.hp_;
      armor_ = other.armor_;
      shield_ = other.shield_;
      place_ = other.place_;
      shipState_ = other.shipState_;
      team_ = other.team_;
      shipId_ = other.shipId_;
      recoverSpeed_ = other.recoverSpeed_;
      economy_ = other.economy_;
      collectorType_ = other.collectorType_;
      armorType_ = other.armorType_;
      shieldType_ = other.shieldType_;
      builderType_ = other.builderType_;
      bulletType_ = other.bulletType_;
      shipType_ = other.shipType_;
      facingDirection_ = other.facingDirection_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfShip Clone() {
      return new MessageOfShip(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "speed" field.</summary>
    public const int SpeedFieldNumber = 3;
    private int speed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Speed {
      get { return speed_; }
      set {
        speed_ = value;
      }
    }

    /// <summary>Field number for the "hp" field.</summary>
    public const int HpFieldNumber = 4;
    private int hp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Hp {
      get { return hp_; }
      set {
        hp_ = value;
      }
    }

    /// <summary>Field number for the "armor" field.</summary>
    public const int ArmorFieldNumber = 5;
    private int armor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Armor {
      get { return armor_; }
      set {
        armor_ = value;
      }
    }

    /// <summary>Field number for the "shield" field.</summary>
    public const int ShieldFieldNumber = 6;
    private int shield_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Shield {
      get { return shield_; }
      set {
        shield_ = value;
      }
    }

    /// <summary>Field number for the "place" field.</summary>
    public const int PlaceFieldNumber = 7;
    private global::Protobuf.PlaceType place_ = global::Protobuf.PlaceType.NullPlaceType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.PlaceType Place {
      get { return place_; }
      set {
        place_ = value;
      }
    }

    /// <summary>Field number for the "ship_state" field.</summary>
    public const int ShipStateFieldNumber = 8;
    private global::Protobuf.ShipState shipState_ = global::Protobuf.ShipState.NullStatus;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.ShipState ShipState {
      get { return shipState_; }
      set {
        shipState_ = value;
      }
    }

    /// <summary>Field number for the "team" field.</summary>
    public const int TeamFieldNumber = 9;
    private global::Protobuf.PlayerTeam team_ = global::Protobuf.PlayerTeam.NullTeam;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.PlayerTeam Team {
      get { return team_; }
      set {
        team_ = value;
      }
    }

    /// <summary>Field number for the "ship_id" field.</summary>
    public const int ShipIdFieldNumber = 10;
    private long shipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ShipId {
      get { return shipId_; }
      set {
        shipId_ = value;
      }
    }

    /// <summary>Field number for the "Recover_speed" field.</summary>
    public const int RecoverSpeedFieldNumber = 11;
    private int recoverSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RecoverSpeed {
      get { return recoverSpeed_; }
      set {
        recoverSpeed_ = value;
      }
    }

    /// <summary>Field number for the "economy" field.</summary>
    public const int EconomyFieldNumber = 12;
    private int economy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Economy {
      get { return economy_; }
      set {
        economy_ = value;
      }
    }

    /// <summary>Field number for the "collector_type" field.</summary>
    public const int CollectorTypeFieldNumber = 13;
    private global::Protobuf.CollectorType collectorType_ = global::Protobuf.CollectorType.NullCollectorType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.CollectorType CollectorType {
      get { return collectorType_; }
      set {
        collectorType_ = value;
      }
    }

    /// <summary>Field number for the "armor_type" field.</summary>
    public const int ArmorTypeFieldNumber = 14;
    private global::Protobuf.ArmorType armorType_ = global::Protobuf.ArmorType.NullArmorType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.ArmorType ArmorType {
      get { return armorType_; }
      set {
        armorType_ = value;
      }
    }

    /// <summary>Field number for the "shield_type" field.</summary>
    public const int ShieldTypeFieldNumber = 15;
    private global::Protobuf.ShieldType shieldType_ = global::Protobuf.ShieldType.NullShieldType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.ShieldType ShieldType {
      get { return shieldType_; }
      set {
        shieldType_ = value;
      }
    }

    /// <summary>Field number for the "builder_type" field.</summary>
    public const int BuilderTypeFieldNumber = 16;
    private global::Protobuf.BuilderType builderType_ = global::Protobuf.BuilderType.NullBuilderType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.BuilderType BuilderType {
      get { return builderType_; }
      set {
        builderType_ = value;
      }
    }

    /// <summary>Field number for the "bullet_type" field.</summary>
    public const int BulletTypeFieldNumber = 17;
    private global::Protobuf.BulletType bulletType_ = global::Protobuf.BulletType.NullBulletType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.BulletType BulletType {
      get { return bulletType_; }
      set {
        bulletType_ = value;
      }
    }

    /// <summary>Field number for the "ship_type" field.</summary>
    public const int ShipTypeFieldNumber = 18;
    private global::Protobuf.ShipType shipType_ = global::Protobuf.ShipType.NullShipType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.ShipType ShipType {
      get { return shipType_; }
      set {
        shipType_ = value;
      }
    }

    /// <summary>Field number for the "facing_direction" field.</summary>
    public const int FacingDirectionFieldNumber = 19;
    private double facingDirection_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double FacingDirection {
      get { return facingDirection_; }
      set {
        facingDirection_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageOfShip);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageOfShip other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Speed != other.Speed) return false;
      if (Hp != other.Hp) return false;
      if (Armor != other.Armor) return false;
      if (Shield != other.Shield) return false;
      if (Place != other.Place) return false;
      if (ShipState != other.ShipState) return false;
      if (Team != other.Team) return false;
      if (ShipId != other.ShipId) return false;
      if (RecoverSpeed != other.RecoverSpeed) return false;
      if (Economy != other.Economy) return false;
      if (CollectorType != other.CollectorType) return false;
      if (ArmorType != other.ArmorType) return false;
      if (ShieldType != other.ShieldType) return false;
      if (BuilderType != other.BuilderType) return false;
      if (BulletType != other.BulletType) return false;
      if (ShipType != other.ShipType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(FacingDirection, other.FacingDirection)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (Speed != 0) hash ^= Speed.GetHashCode();
      if (Hp != 0) hash ^= Hp.GetHashCode();
      if (Armor != 0) hash ^= Armor.GetHashCode();
      if (Shield != 0) hash ^= Shield.GetHashCode();
      if (Place != global::Protobuf.PlaceType.NullPlaceType) hash ^= Place.GetHashCode();
      if (ShipState != global::Protobuf.ShipState.NullStatus) hash ^= ShipState.GetHashCode();
      if (Team != global::Protobuf.PlayerTeam.NullTeam) hash ^= Team.GetHashCode();
      if (ShipId != 0L) hash ^= ShipId.GetHashCode();
      if (RecoverSpeed != 0) hash ^= RecoverSpeed.GetHashCode();
      if (Economy != 0) hash ^= Economy.GetHashCode();
      if (CollectorType != global::Protobuf.CollectorType.NullCollectorType) hash ^= CollectorType.GetHashCode();
      if (ArmorType != global::Protobuf.ArmorType.NullArmorType) hash ^= ArmorType.GetHashCode();
      if (ShieldType != global::Protobuf.ShieldType.NullShieldType) hash ^= ShieldType.GetHashCode();
      if (BuilderType != global::Protobuf.BuilderType.NullBuilderType) hash ^= BuilderType.GetHashCode();
      if (BulletType != global::Protobuf.BulletType.NullBulletType) hash ^= BulletType.GetHashCode();
      if (ShipType != global::Protobuf.ShipType.NullShipType) hash ^= ShipType.GetHashCode();
      if (FacingDirection != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(FacingDirection);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (X != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (Speed != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Speed);
      }
      if (Hp != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Hp);
      }
      if (Armor != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Armor);
      }
      if (Shield != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Shield);
      }
      if (Place != global::Protobuf.PlaceType.NullPlaceType) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Place);
      }
      if (ShipState != global::Protobuf.ShipState.NullStatus) {
        output.WriteRawTag(64);
        output.WriteEnum((int) ShipState);
      }
      if (Team != global::Protobuf.PlayerTeam.NullTeam) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Team);
      }
      if (ShipId != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(ShipId);
      }
      if (RecoverSpeed != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(RecoverSpeed);
      }
      if (Economy != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Economy);
      }
      if (CollectorType != global::Protobuf.CollectorType.NullCollectorType) {
        output.WriteRawTag(104);
        output.WriteEnum((int) CollectorType);
      }
      if (ArmorType != global::Protobuf.ArmorType.NullArmorType) {
        output.WriteRawTag(112);
        output.WriteEnum((int) ArmorType);
      }
      if (ShieldType != global::Protobuf.ShieldType.NullShieldType) {
        output.WriteRawTag(120);
        output.WriteEnum((int) ShieldType);
      }
      if (BuilderType != global::Protobuf.BuilderType.NullBuilderType) {
        output.WriteRawTag(128, 1);
        output.WriteEnum((int) BuilderType);
      }
      if (BulletType != global::Protobuf.BulletType.NullBulletType) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) BulletType);
      }
      if (ShipType != global::Protobuf.ShipType.NullShipType) {
        output.WriteRawTag(144, 1);
        output.WriteEnum((int) ShipType);
      }
      if (FacingDirection != 0D) {
        output.WriteRawTag(153, 1);
        output.WriteDouble(FacingDirection);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (X != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (Speed != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Speed);
      }
      if (Hp != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Hp);
      }
      if (Armor != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Armor);
      }
      if (Shield != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Shield);
      }
      if (Place != global::Protobuf.PlaceType.NullPlaceType) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Place);
      }
      if (ShipState != global::Protobuf.ShipState.NullStatus) {
        output.WriteRawTag(64);
        output.WriteEnum((int) ShipState);
      }
      if (Team != global::Protobuf.PlayerTeam.NullTeam) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Team);
      }
      if (ShipId != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(ShipId);
      }
      if (RecoverSpeed != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(RecoverSpeed);
      }
      if (Economy != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Economy);
      }
      if (CollectorType != global::Protobuf.CollectorType.NullCollectorType) {
        output.WriteRawTag(104);
        output.WriteEnum((int) CollectorType);
      }
      if (ArmorType != global::Protobuf.ArmorType.NullArmorType) {
        output.WriteRawTag(112);
        output.WriteEnum((int) ArmorType);
      }
      if (ShieldType != global::Protobuf.ShieldType.NullShieldType) {
        output.WriteRawTag(120);
        output.WriteEnum((int) ShieldType);
      }
      if (BuilderType != global::Protobuf.BuilderType.NullBuilderType) {
        output.WriteRawTag(128, 1);
        output.WriteEnum((int) BuilderType);
      }
      if (BulletType != global::Protobuf.BulletType.NullBulletType) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) BulletType);
      }
      if (ShipType != global::Protobuf.ShipType.NullShipType) {
        output.WriteRawTag(144, 1);
        output.WriteEnum((int) ShipType);
      }
      if (FacingDirection != 0D) {
        output.WriteRawTag(153, 1);
        output.WriteDouble(FacingDirection);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (Speed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Speed);
      }
      if (Hp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hp);
      }
      if (Armor != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Armor);
      }
      if (Shield != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Shield);
      }
      if (Place != global::Protobuf.PlaceType.NullPlaceType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Place);
      }
      if (ShipState != global::Protobuf.ShipState.NullStatus) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ShipState);
      }
      if (Team != global::Protobuf.PlayerTeam.NullTeam) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Team);
      }
      if (ShipId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ShipId);
      }
      if (RecoverSpeed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RecoverSpeed);
      }
      if (Economy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Economy);
      }
      if (CollectorType != global::Protobuf.CollectorType.NullCollectorType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CollectorType);
      }
      if (ArmorType != global::Protobuf.ArmorType.NullArmorType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ArmorType);
      }
      if (ShieldType != global::Protobuf.ShieldType.NullShieldType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ShieldType);
      }
      if (BuilderType != global::Protobuf.BuilderType.NullBuilderType) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) BuilderType);
      }
      if (BulletType != global::Protobuf.BulletType.NullBulletType) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) BulletType);
      }
      if (ShipType != global::Protobuf.ShipType.NullShipType) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ShipType);
      }
      if (FacingDirection != 0D) {
        size += 2 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageOfShip other) {
      if (other == null) {
        return;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      if (other.Speed != 0) {
        Speed = other.Speed;
      }
      if (other.Hp != 0) {
        Hp = other.Hp;
      }
      if (other.Armor != 0) {
        Armor = other.Armor;
      }
      if (other.Shield != 0) {
        Shield = other.Shield;
      }
      if (other.Place != global::Protobuf.PlaceType.NullPlaceType) {
        Place = other.Place;
      }
      if (other.ShipState != global::Protobuf.ShipState.NullStatus) {
        ShipState = other.ShipState;
      }
      if (other.Team != global::Protobuf.PlayerTeam.NullTeam) {
        Team = other.Team;
      }
      if (other.ShipId != 0L) {
        ShipId = other.ShipId;
      }
      if (other.RecoverSpeed != 0) {
        RecoverSpeed = other.RecoverSpeed;
      }
      if (other.Economy != 0) {
        Economy = other.Economy;
      }
      if (other.CollectorType != global::Protobuf.CollectorType.NullCollectorType) {
        CollectorType = other.CollectorType;
      }
      if (other.ArmorType != global::Protobuf.ArmorType.NullArmorType) {
        ArmorType = other.ArmorType;
      }
      if (other.ShieldType != global::Protobuf.ShieldType.NullShieldType) {
        ShieldType = other.ShieldType;
      }
      if (other.BuilderType != global::Protobuf.BuilderType.NullBuilderType) {
        BuilderType = other.BuilderType;
      }
      if (other.BulletType != global::Protobuf.BulletType.NullBulletType) {
        BulletType = other.BulletType;
      }
      if (other.ShipType != global::Protobuf.ShipType.NullShipType) {
        ShipType = other.ShipType;
      }
      if (other.FacingDirection != 0D) {
        FacingDirection = other.FacingDirection;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            X = input.ReadInt32();
            break;
          }
          case 16: {
            Y = input.ReadInt32();
            break;
          }
          case 24: {
            Speed = input.ReadInt32();
            break;
          }
          case 32: {
            Hp = input.ReadInt32();
            break;
          }
          case 40: {
            Armor = input.ReadInt32();
            break;
          }
          case 48: {
            Shield = input.ReadInt32();
            break;
          }
          case 56: {
            Place = (global::Protobuf.PlaceType) input.ReadEnum();
            break;
          }
          case 64: {
            ShipState = (global::Protobuf.ShipState) input.ReadEnum();
            break;
          }
          case 72: {
            Team = (global::Protobuf.PlayerTeam) input.ReadEnum();
            break;
          }
          case 80: {
            ShipId = input.ReadInt64();
            break;
          }
          case 88: {
            RecoverSpeed = input.ReadInt32();
            break;
          }
          case 96: {
            Economy = input.ReadInt32();
            break;
          }
          case 104: {
            CollectorType = (global::Protobuf.CollectorType) input.ReadEnum();
            break;
          }
          case 112: {
            ArmorType = (global::Protobuf.ArmorType) input.ReadEnum();
            break;
          }
          case 120: {
            ShieldType = (global::Protobuf.ShieldType) input.ReadEnum();
            break;
          }
          case 128: {
            BuilderType = (global::Protobuf.BuilderType) input.ReadEnum();
            break;
          }
          case 136: {
            BulletType = (global::Protobuf.BulletType) input.ReadEnum();
            break;
          }
          case 144: {
            ShipType = (global::Protobuf.ShipType) input.ReadEnum();
            break;
          }
          case 153: {
            FacingDirection = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            X = input.ReadInt32();
            break;
          }
          case 16: {
            Y = input.ReadInt32();
            break;
          }
          case 24: {
            Speed = input.ReadInt32();
            break;
          }
          case 32: {
            Hp = input.ReadInt32();
            break;
          }
          case 40: {
            Armor = input.ReadInt32();
            break;
          }
          case 48: {
            Shield = input.ReadInt32();
            break;
          }
          case 56: {
            Place = (global::Protobuf.PlaceType) input.ReadEnum();
            break;
          }
          case 64: {
            ShipState = (global::Protobuf.ShipState) input.ReadEnum();
            break;
          }
          case 72: {
            Team = (global::Protobuf.PlayerTeam) input.ReadEnum();
            break;
          }
          case 80: {
            ShipId = input.ReadInt64();
            break;
          }
          case 88: {
            RecoverSpeed = input.ReadInt32();
            break;
          }
          case 96: {
            Economy = input.ReadInt32();
            break;
          }
          case 104: {
            CollectorType = (global::Protobuf.CollectorType) input.ReadEnum();
            break;
          }
          case 112: {
            ArmorType = (global::Protobuf.ArmorType) input.ReadEnum();
            break;
          }
          case 120: {
            ShieldType = (global::Protobuf.ShieldType) input.ReadEnum();
            break;
          }
          case 128: {
            BuilderType = (global::Protobuf.BuilderType) input.ReadEnum();
            break;
          }
          case 136: {
            BulletType = (global::Protobuf.BulletType) input.ReadEnum();
            break;
          }
          case 144: {
            ShipType = (global::Protobuf.ShipType) input.ReadEnum();
            break;
          }
          case 153: {
            FacingDirection = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MessageOfBuilding : pb::IMessage<MessageOfBuilding>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MessageOfBuilding> _parser = new pb::MessageParser<MessageOfBuilding>(() => new MessageOfBuilding());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageOfBuilding> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.Message2ClientsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfBuilding() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfBuilding(MessageOfBuilding other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      hp_ = other.hp_;
      buildingType_ = other.buildingType_;
      team_ = other.team_;
      buildingId_ = other.buildingId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfBuilding Clone() {
      return new MessageOfBuilding(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "hp" field.</summary>
    public const int HpFieldNumber = 3;
    private int hp_;
    /// <summary>
    /// 剩余的血量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Hp {
      get { return hp_; }
      set {
        hp_ = value;
      }
    }

    /// <summary>Field number for the "building_type" field.</summary>
    public const int BuildingTypeFieldNumber = 4;
    private global::Protobuf.BuildingType buildingType_ = global::Protobuf.BuildingType.NullBuildingType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.BuildingType BuildingType {
      get { return buildingType_; }
      set {
        buildingType_ = value;
      }
    }

    /// <summary>Field number for the "team" field.</summary>
    public const int TeamFieldNumber = 5;
    private global::Protobuf.PlayerTeam team_ = global::Protobuf.PlayerTeam.NullTeam;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.PlayerTeam Team {
      get { return team_; }
      set {
        team_ = value;
      }
    }

    /// <summary>Field number for the "building_id" field.</summary>
    public const int BuildingIdFieldNumber = 6;
    private long buildingId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BuildingId {
      get { return buildingId_; }
      set {
        buildingId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageOfBuilding);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageOfBuilding other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Hp != other.Hp) return false;
      if (BuildingType != other.BuildingType) return false;
      if (Team != other.Team) return false;
      if (BuildingId != other.BuildingId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (Hp != 0) hash ^= Hp.GetHashCode();
      if (BuildingType != global::Protobuf.BuildingType.NullBuildingType) hash ^= BuildingType.GetHashCode();
      if (Team != global::Protobuf.PlayerTeam.NullTeam) hash ^= Team.GetHashCode();
      if (BuildingId != 0L) hash ^= BuildingId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (X != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (Hp != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Hp);
      }
      if (BuildingType != global::Protobuf.BuildingType.NullBuildingType) {
        output.WriteRawTag(32);
        output.WriteEnum((int) BuildingType);
      }
      if (Team != global::Protobuf.PlayerTeam.NullTeam) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Team);
      }
      if (BuildingId != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(BuildingId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (X != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (Hp != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Hp);
      }
      if (BuildingType != global::Protobuf.BuildingType.NullBuildingType) {
        output.WriteRawTag(32);
        output.WriteEnum((int) BuildingType);
      }
      if (Team != global::Protobuf.PlayerTeam.NullTeam) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Team);
      }
      if (BuildingId != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(BuildingId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (Hp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hp);
      }
      if (BuildingType != global::Protobuf.BuildingType.NullBuildingType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BuildingType);
      }
      if (Team != global::Protobuf.PlayerTeam.NullTeam) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Team);
      }
      if (BuildingId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BuildingId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageOfBuilding other) {
      if (other == null) {
        return;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      if (other.Hp != 0) {
        Hp = other.Hp;
      }
      if (other.BuildingType != global::Protobuf.BuildingType.NullBuildingType) {
        BuildingType = other.BuildingType;
      }
      if (other.Team != global::Protobuf.PlayerTeam.NullTeam) {
        Team = other.Team;
      }
      if (other.BuildingId != 0L) {
        BuildingId = other.BuildingId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            X = input.ReadInt32();
            break;
          }
          case 16: {
            Y = input.ReadInt32();
            break;
          }
          case 24: {
            Hp = input.ReadInt32();
            break;
          }
          case 32: {
            BuildingType = (global::Protobuf.BuildingType) input.ReadEnum();
            break;
          }
          case 40: {
            Team = (global::Protobuf.PlayerTeam) input.ReadEnum();
            break;
          }
          case 48: {
            BuildingId = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            X = input.ReadInt32();
            break;
          }
          case 16: {
            Y = input.ReadInt32();
            break;
          }
          case 24: {
            Hp = input.ReadInt32();
            break;
          }
          case 32: {
            BuildingType = (global::Protobuf.BuildingType) input.ReadEnum();
            break;
          }
          case 40: {
            Team = (global::Protobuf.PlayerTeam) input.ReadEnum();
            break;
          }
          case 48: {
            BuildingId = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MessageOfBullet : pb::IMessage<MessageOfBullet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MessageOfBullet> _parser = new pb::MessageParser<MessageOfBullet>(() => new MessageOfBullet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageOfBullet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.Message2ClientsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfBullet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfBullet(MessageOfBullet other) : this() {
      type_ = other.type_;
      x_ = other.x_;
      y_ = other.y_;
      facingDirection_ = other.facingDirection_;
      guid_ = other.guid_;
      armorRate_ = other.armorRate_;
      shieldRate_ = other.shieldRate_;
      damage_ = other.damage_;
      team_ = other.team_;
      bombRange_ = other.bombRange_;
      speed_ = other.speed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfBullet Clone() {
      return new MessageOfBullet(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Protobuf.BulletType type_ = global::Protobuf.BulletType.NullBulletType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.BulletType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 2;
    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 3;
    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "facing_direction" field.</summary>
    public const int FacingDirectionFieldNumber = 4;
    private double facingDirection_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double FacingDirection {
      get { return facingDirection_; }
      set {
        facingDirection_ = value;
      }
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 5;
    private long guid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Guid {
      get { return guid_; }
      set {
        guid_ = value;
      }
    }

    /// <summary>Field number for the "armor_rate" field.</summary>
    public const int ArmorRateFieldNumber = 6;
    private double armorRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double ArmorRate {
      get { return armorRate_; }
      set {
        armorRate_ = value;
      }
    }

    /// <summary>Field number for the "shield_rate" field.</summary>
    public const int ShieldRateFieldNumber = 7;
    private double shieldRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double ShieldRate {
      get { return shieldRate_; }
      set {
        shieldRate_ = value;
      }
    }

    /// <summary>Field number for the "damage" field.</summary>
    public const int DamageFieldNumber = 8;
    private int damage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Damage {
      get { return damage_; }
      set {
        damage_ = value;
      }
    }

    /// <summary>Field number for the "team" field.</summary>
    public const int TeamFieldNumber = 9;
    private global::Protobuf.PlayerTeam team_ = global::Protobuf.PlayerTeam.NullTeam;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.PlayerTeam Team {
      get { return team_; }
      set {
        team_ = value;
      }
    }

    /// <summary>Field number for the "bomb_range" field.</summary>
    public const int BombRangeFieldNumber = 10;
    private double bombRange_;
    /// <summary>
    /// PlaceType place = 7;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double BombRange {
      get { return bombRange_; }
      set {
        bombRange_ = value;
      }
    }

    /// <summary>Field number for the "speed" field.</summary>
    public const int SpeedFieldNumber = 11;
    private int speed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Speed {
      get { return speed_; }
      set {
        speed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageOfBullet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageOfBullet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(FacingDirection, other.FacingDirection)) return false;
      if (Guid != other.Guid) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ArmorRate, other.ArmorRate)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ShieldRate, other.ShieldRate)) return false;
      if (Damage != other.Damage) return false;
      if (Team != other.Team) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BombRange, other.BombRange)) return false;
      if (Speed != other.Speed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Protobuf.BulletType.NullBulletType) hash ^= Type.GetHashCode();
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (FacingDirection != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(FacingDirection);
      if (Guid != 0L) hash ^= Guid.GetHashCode();
      if (ArmorRate != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ArmorRate);
      if (ShieldRate != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ShieldRate);
      if (Damage != 0) hash ^= Damage.GetHashCode();
      if (Team != global::Protobuf.PlayerTeam.NullTeam) hash ^= Team.GetHashCode();
      if (BombRange != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BombRange);
      if (Speed != 0) hash ^= Speed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::Protobuf.BulletType.NullBulletType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (X != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Y);
      }
      if (FacingDirection != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(FacingDirection);
      }
      if (Guid != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Guid);
      }
      if (ArmorRate != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(ArmorRate);
      }
      if (ShieldRate != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(ShieldRate);
      }
      if (Damage != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Damage);
      }
      if (Team != global::Protobuf.PlayerTeam.NullTeam) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Team);
      }
      if (BombRange != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(BombRange);
      }
      if (Speed != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Speed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::Protobuf.BulletType.NullBulletType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (X != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Y);
      }
      if (FacingDirection != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(FacingDirection);
      }
      if (Guid != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Guid);
      }
      if (ArmorRate != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(ArmorRate);
      }
      if (ShieldRate != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(ShieldRate);
      }
      if (Damage != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Damage);
      }
      if (Team != global::Protobuf.PlayerTeam.NullTeam) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Team);
      }
      if (BombRange != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(BombRange);
      }
      if (Speed != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Speed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Protobuf.BulletType.NullBulletType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (FacingDirection != 0D) {
        size += 1 + 8;
      }
      if (Guid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Guid);
      }
      if (ArmorRate != 0D) {
        size += 1 + 8;
      }
      if (ShieldRate != 0D) {
        size += 1 + 8;
      }
      if (Damage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Damage);
      }
      if (Team != global::Protobuf.PlayerTeam.NullTeam) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Team);
      }
      if (BombRange != 0D) {
        size += 1 + 8;
      }
      if (Speed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Speed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageOfBullet other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Protobuf.BulletType.NullBulletType) {
        Type = other.Type;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      if (other.FacingDirection != 0D) {
        FacingDirection = other.FacingDirection;
      }
      if (other.Guid != 0L) {
        Guid = other.Guid;
      }
      if (other.ArmorRate != 0D) {
        ArmorRate = other.ArmorRate;
      }
      if (other.ShieldRate != 0D) {
        ShieldRate = other.ShieldRate;
      }
      if (other.Damage != 0) {
        Damage = other.Damage;
      }
      if (other.Team != global::Protobuf.PlayerTeam.NullTeam) {
        Team = other.Team;
      }
      if (other.BombRange != 0D) {
        BombRange = other.BombRange;
      }
      if (other.Speed != 0) {
        Speed = other.Speed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Protobuf.BulletType) input.ReadEnum();
            break;
          }
          case 16: {
            X = input.ReadInt32();
            break;
          }
          case 24: {
            Y = input.ReadInt32();
            break;
          }
          case 33: {
            FacingDirection = input.ReadDouble();
            break;
          }
          case 40: {
            Guid = input.ReadInt64();
            break;
          }
          case 49: {
            ArmorRate = input.ReadDouble();
            break;
          }
          case 57: {
            ShieldRate = input.ReadDouble();
            break;
          }
          case 64: {
            Damage = input.ReadInt32();
            break;
          }
          case 72: {
            Team = (global::Protobuf.PlayerTeam) input.ReadEnum();
            break;
          }
          case 81: {
            BombRange = input.ReadDouble();
            break;
          }
          case 88: {
            Speed = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Protobuf.BulletType) input.ReadEnum();
            break;
          }
          case 16: {
            X = input.ReadInt32();
            break;
          }
          case 24: {
            Y = input.ReadInt32();
            break;
          }
          case 33: {
            FacingDirection = input.ReadDouble();
            break;
          }
          case 40: {
            Guid = input.ReadInt64();
            break;
          }
          case 49: {
            ArmorRate = input.ReadDouble();
            break;
          }
          case 57: {
            ShieldRate = input.ReadDouble();
            break;
          }
          case 64: {
            Damage = input.ReadInt32();
            break;
          }
          case 72: {
            Team = (global::Protobuf.PlayerTeam) input.ReadEnum();
            break;
          }
          case 81: {
            BombRange = input.ReadDouble();
            break;
          }
          case 88: {
            Speed = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MessageOfResource : pb::IMessage<MessageOfResource>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MessageOfResource> _parser = new pb::MessageParser<MessageOfResource>(() => new MessageOfResource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageOfResource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.Message2ClientsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfResource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfResource(MessageOfResource other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      progress_ = other.progress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfResource Clone() {
      return new MessageOfResource(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "progress" field.</summary>
    public const int ProgressFieldNumber = 3;
    private int progress_;
    /// <summary>
    /// 采集进度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Progress {
      get { return progress_; }
      set {
        progress_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageOfResource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageOfResource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Progress != other.Progress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (Progress != 0) hash ^= Progress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (X != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (Progress != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Progress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (X != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (Progress != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Progress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (Progress != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Progress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageOfResource other) {
      if (other == null) {
        return;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      if (other.Progress != 0) {
        Progress = other.Progress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            X = input.ReadInt32();
            break;
          }
          case 16: {
            Y = input.ReadInt32();
            break;
          }
          case 24: {
            Progress = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            X = input.ReadInt32();
            break;
          }
          case 16: {
            Y = input.ReadInt32();
            break;
          }
          case 24: {
            Progress = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MessageOfHome : pb::IMessage<MessageOfHome>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MessageOfHome> _parser = new pb::MessageParser<MessageOfHome>(() => new MessageOfHome());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageOfHome> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.Message2ClientsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfHome() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfHome(MessageOfHome other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      economy_ = other.economy_;
      hp_ = other.hp_;
      team_ = other.team_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfHome Clone() {
      return new MessageOfHome(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "economy" field.</summary>
    public const int EconomyFieldNumber = 3;
    private int economy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Economy {
      get { return economy_; }
      set {
        economy_ = value;
      }
    }

    /// <summary>Field number for the "hp" field.</summary>
    public const int HpFieldNumber = 4;
    private int hp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Hp {
      get { return hp_; }
      set {
        hp_ = value;
      }
    }

    /// <summary>Field number for the "team" field.</summary>
    public const int TeamFieldNumber = 5;
    private global::Protobuf.PlayerTeam team_ = global::Protobuf.PlayerTeam.NullTeam;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.PlayerTeam Team {
      get { return team_; }
      set {
        team_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageOfHome);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageOfHome other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Economy != other.Economy) return false;
      if (Hp != other.Hp) return false;
      if (Team != other.Team) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (Economy != 0) hash ^= Economy.GetHashCode();
      if (Hp != 0) hash ^= Hp.GetHashCode();
      if (Team != global::Protobuf.PlayerTeam.NullTeam) hash ^= Team.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (X != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (Economy != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Economy);
      }
      if (Hp != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Hp);
      }
      if (Team != global::Protobuf.PlayerTeam.NullTeam) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Team);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (X != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (Economy != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Economy);
      }
      if (Hp != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Hp);
      }
      if (Team != global::Protobuf.PlayerTeam.NullTeam) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Team);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (Economy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Economy);
      }
      if (Hp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hp);
      }
      if (Team != global::Protobuf.PlayerTeam.NullTeam) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Team);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageOfHome other) {
      if (other == null) {
        return;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      if (other.Economy != 0) {
        Economy = other.Economy;
      }
      if (other.Hp != 0) {
        Hp = other.Hp;
      }
      if (other.Team != global::Protobuf.PlayerTeam.NullTeam) {
        Team = other.Team;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            X = input.ReadInt32();
            break;
          }
          case 16: {
            Y = input.ReadInt32();
            break;
          }
          case 24: {
            Economy = input.ReadInt32();
            break;
          }
          case 32: {
            Hp = input.ReadInt32();
            break;
          }
          case 40: {
            Team = (global::Protobuf.PlayerTeam) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            X = input.ReadInt32();
            break;
          }
          case 16: {
            Y = input.ReadInt32();
            break;
          }
          case 24: {
            Economy = input.ReadInt32();
            break;
          }
          case 32: {
            Hp = input.ReadInt32();
            break;
          }
          case 40: {
            Team = (global::Protobuf.PlayerTeam) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MessageOfMap : pb::IMessage<MessageOfMap>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MessageOfMap> _parser = new pb::MessageParser<MessageOfMap>(() => new MessageOfMap());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageOfMap> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.Message2ClientsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfMap() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfMap(MessageOfMap other) : this() {
      row_ = other.row_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfMap Clone() {
      return new MessageOfMap(this);
    }

    /// <summary>Field number for the "row" field.</summary>
    public const int RowFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Protobuf.MessageOfMap.Types.Row> _repeated_row_codec
        = pb::FieldCodec.ForMessage(18, global::Protobuf.MessageOfMap.Types.Row.Parser);
    private readonly pbc::RepeatedField<global::Protobuf.MessageOfMap.Types.Row> row_ = new pbc::RepeatedField<global::Protobuf.MessageOfMap.Types.Row>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protobuf.MessageOfMap.Types.Row> Row {
      get { return row_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageOfMap);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageOfMap other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!row_.Equals(other.row_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= row_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      row_.WriteTo(output, _repeated_row_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      row_.WriteTo(ref output, _repeated_row_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += row_.CalculateSize(_repeated_row_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageOfMap other) {
      if (other == null) {
        return;
      }
      row_.Add(other.row_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            row_.AddEntriesFrom(input, _repeated_row_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            row_.AddEntriesFrom(ref input, _repeated_row_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the MessageOfMap message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Row : pb::IMessage<Row>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Row> _parser = new pb::MessageParser<Row>(() => new Row());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Row> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Protobuf.MessageOfMap.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Row() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Row(Row other) : this() {
          col_ = other.col_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Row Clone() {
          return new Row(this);
        }

        /// <summary>Field number for the "col" field.</summary>
        public const int ColFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Protobuf.PlaceType> _repeated_col_codec
            = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::Protobuf.PlaceType) x);
        private readonly pbc::RepeatedField<global::Protobuf.PlaceType> col_ = new pbc::RepeatedField<global::Protobuf.PlaceType>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Protobuf.PlaceType> Col {
          get { return col_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Row other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!col_.Equals(other.col_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= col_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          col_.WriteTo(output, _repeated_col_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          col_.WriteTo(ref output, _repeated_col_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += col_.CalculateSize(_repeated_col_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Row other) {
          if (other == null) {
            return;
          }
          col_.Add(other.col_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10:
              case 8: {
                col_.AddEntriesFrom(input, _repeated_col_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10:
              case 8: {
                col_.AddEntriesFrom(ref input, _repeated_col_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class MessageOfObj : pb::IMessage<MessageOfObj>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MessageOfObj> _parser = new pb::MessageParser<MessageOfObj>(() => new MessageOfObj());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageOfObj> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.Message2ClientsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfObj() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfObj(MessageOfObj other) : this() {
      switch (other.MessageOfObjCase) {
        case MessageOfObjOneofCase.ShipMessage:
          ShipMessage = other.ShipMessage.Clone();
          break;
        case MessageOfObjOneofCase.BuildingMessage:
          BuildingMessage = other.BuildingMessage.Clone();
          break;
        case MessageOfObjOneofCase.BulletMessage:
          BulletMessage = other.BulletMessage.Clone();
          break;
        case MessageOfObjOneofCase.HomeMessage:
          HomeMessage = other.HomeMessage.Clone();
          break;
        case MessageOfObjOneofCase.ResourceMessage:
          ResourceMessage = other.ResourceMessage.Clone();
          break;
        case MessageOfObjOneofCase.MapMessage:
          MapMessage = other.MapMessage.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfObj Clone() {
      return new MessageOfObj(this);
    }

    /// <summary>Field number for the "ship_message" field.</summary>
    public const int ShipMessageFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.MessageOfShip ShipMessage {
      get { return messageOfObjCase_ == MessageOfObjOneofCase.ShipMessage ? (global::Protobuf.MessageOfShip) messageOfObj_ : null; }
      set {
        messageOfObj_ = value;
        messageOfObjCase_ = value == null ? MessageOfObjOneofCase.None : MessageOfObjOneofCase.ShipMessage;
      }
    }

    /// <summary>Field number for the "Building_message" field.</summary>
    public const int BuildingMessageFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.MessageOfBuilding BuildingMessage {
      get { return messageOfObjCase_ == MessageOfObjOneofCase.BuildingMessage ? (global::Protobuf.MessageOfBuilding) messageOfObj_ : null; }
      set {
        messageOfObj_ = value;
        messageOfObjCase_ = value == null ? MessageOfObjOneofCase.None : MessageOfObjOneofCase.BuildingMessage;
      }
    }

    /// <summary>Field number for the "bullet_message" field.</summary>
    public const int BulletMessageFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.MessageOfBullet BulletMessage {
      get { return messageOfObjCase_ == MessageOfObjOneofCase.BulletMessage ? (global::Protobuf.MessageOfBullet) messageOfObj_ : null; }
      set {
        messageOfObj_ = value;
        messageOfObjCase_ = value == null ? MessageOfObjOneofCase.None : MessageOfObjOneofCase.BulletMessage;
      }
    }

    /// <summary>Field number for the "home_message" field.</summary>
    public const int HomeMessageFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.MessageOfHome HomeMessage {
      get { return messageOfObjCase_ == MessageOfObjOneofCase.HomeMessage ? (global::Protobuf.MessageOfHome) messageOfObj_ : null; }
      set {
        messageOfObj_ = value;
        messageOfObjCase_ = value == null ? MessageOfObjOneofCase.None : MessageOfObjOneofCase.HomeMessage;
      }
    }

    /// <summary>Field number for the "resource_message" field.</summary>
    public const int ResourceMessageFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.MessageOfResource ResourceMessage {
      get { return messageOfObjCase_ == MessageOfObjOneofCase.ResourceMessage ? (global::Protobuf.MessageOfResource) messageOfObj_ : null; }
      set {
        messageOfObj_ = value;
        messageOfObjCase_ = value == null ? MessageOfObjOneofCase.None : MessageOfObjOneofCase.ResourceMessage;
      }
    }

    /// <summary>Field number for the "map_message" field.</summary>
    public const int MapMessageFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.MessageOfMap MapMessage {
      get { return messageOfObjCase_ == MessageOfObjOneofCase.MapMessage ? (global::Protobuf.MessageOfMap) messageOfObj_ : null; }
      set {
        messageOfObj_ = value;
        messageOfObjCase_ = value == null ? MessageOfObjOneofCase.None : MessageOfObjOneofCase.MapMessage;
      }
    }

    private object messageOfObj_;
    /// <summary>Enum of possible cases for the "message_of_obj" oneof.</summary>
    public enum MessageOfObjOneofCase {
      None = 0,
      ShipMessage = 1,
      BuildingMessage = 2,
      BulletMessage = 3,
      HomeMessage = 4,
      ResourceMessage = 5,
      MapMessage = 6,
    }
    private MessageOfObjOneofCase messageOfObjCase_ = MessageOfObjOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfObjOneofCase MessageOfObjCase {
      get { return messageOfObjCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessageOfObj() {
      messageOfObjCase_ = MessageOfObjOneofCase.None;
      messageOfObj_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageOfObj);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageOfObj other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ShipMessage, other.ShipMessage)) return false;
      if (!object.Equals(BuildingMessage, other.BuildingMessage)) return false;
      if (!object.Equals(BulletMessage, other.BulletMessage)) return false;
      if (!object.Equals(HomeMessage, other.HomeMessage)) return false;
      if (!object.Equals(ResourceMessage, other.ResourceMessage)) return false;
      if (!object.Equals(MapMessage, other.MapMessage)) return false;
      if (MessageOfObjCase != other.MessageOfObjCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (messageOfObjCase_ == MessageOfObjOneofCase.ShipMessage) hash ^= ShipMessage.GetHashCode();
      if (messageOfObjCase_ == MessageOfObjOneofCase.BuildingMessage) hash ^= BuildingMessage.GetHashCode();
      if (messageOfObjCase_ == MessageOfObjOneofCase.BulletMessage) hash ^= BulletMessage.GetHashCode();
      if (messageOfObjCase_ == MessageOfObjOneofCase.HomeMessage) hash ^= HomeMessage.GetHashCode();
      if (messageOfObjCase_ == MessageOfObjOneofCase.ResourceMessage) hash ^= ResourceMessage.GetHashCode();
      if (messageOfObjCase_ == MessageOfObjOneofCase.MapMessage) hash ^= MapMessage.GetHashCode();
      hash ^= (int) messageOfObjCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (messageOfObjCase_ == MessageOfObjOneofCase.ShipMessage) {
        output.WriteRawTag(10);
        output.WriteMessage(ShipMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.BuildingMessage) {
        output.WriteRawTag(18);
        output.WriteMessage(BuildingMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.BulletMessage) {
        output.WriteRawTag(26);
        output.WriteMessage(BulletMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.HomeMessage) {
        output.WriteRawTag(34);
        output.WriteMessage(HomeMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.ResourceMessage) {
        output.WriteRawTag(42);
        output.WriteMessage(ResourceMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.MapMessage) {
        output.WriteRawTag(50);
        output.WriteMessage(MapMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (messageOfObjCase_ == MessageOfObjOneofCase.ShipMessage) {
        output.WriteRawTag(10);
        output.WriteMessage(ShipMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.BuildingMessage) {
        output.WriteRawTag(18);
        output.WriteMessage(BuildingMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.BulletMessage) {
        output.WriteRawTag(26);
        output.WriteMessage(BulletMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.HomeMessage) {
        output.WriteRawTag(34);
        output.WriteMessage(HomeMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.ResourceMessage) {
        output.WriteRawTag(42);
        output.WriteMessage(ResourceMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.MapMessage) {
        output.WriteRawTag(50);
        output.WriteMessage(MapMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (messageOfObjCase_ == MessageOfObjOneofCase.ShipMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ShipMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.BuildingMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BuildingMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.BulletMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BulletMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.HomeMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HomeMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.ResourceMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResourceMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.MapMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MapMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageOfObj other) {
      if (other == null) {
        return;
      }
      switch (other.MessageOfObjCase) {
        case MessageOfObjOneofCase.ShipMessage:
          if (ShipMessage == null) {
            ShipMessage = new global::Protobuf.MessageOfShip();
          }
          ShipMessage.MergeFrom(other.ShipMessage);
          break;
        case MessageOfObjOneofCase.BuildingMessage:
          if (BuildingMessage == null) {
            BuildingMessage = new global::Protobuf.MessageOfBuilding();
          }
          BuildingMessage.MergeFrom(other.BuildingMessage);
          break;
        case MessageOfObjOneofCase.BulletMessage:
          if (BulletMessage == null) {
            BulletMessage = new global::Protobuf.MessageOfBullet();
          }
          BulletMessage.MergeFrom(other.BulletMessage);
          break;
        case MessageOfObjOneofCase.HomeMessage:
          if (HomeMessage == null) {
            HomeMessage = new global::Protobuf.MessageOfHome();
          }
          HomeMessage.MergeFrom(other.HomeMessage);
          break;
        case MessageOfObjOneofCase.ResourceMessage:
          if (ResourceMessage == null) {
            ResourceMessage = new global::Protobuf.MessageOfResource();
          }
          ResourceMessage.MergeFrom(other.ResourceMessage);
          break;
        case MessageOfObjOneofCase.MapMessage:
          if (MapMessage == null) {
            MapMessage = new global::Protobuf.MessageOfMap();
          }
          MapMessage.MergeFrom(other.MapMessage);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Protobuf.MessageOfShip subBuilder = new global::Protobuf.MessageOfShip();
            if (messageOfObjCase_ == MessageOfObjOneofCase.ShipMessage) {
              subBuilder.MergeFrom(ShipMessage);
            }
            input.ReadMessage(subBuilder);
            ShipMessage = subBuilder;
            break;
          }
          case 18: {
            global::Protobuf.MessageOfBuilding subBuilder = new global::Protobuf.MessageOfBuilding();
            if (messageOfObjCase_ == MessageOfObjOneofCase.BuildingMessage) {
              subBuilder.MergeFrom(BuildingMessage);
            }
            input.ReadMessage(subBuilder);
            BuildingMessage = subBuilder;
            break;
          }
          case 26: {
            global::Protobuf.MessageOfBullet subBuilder = new global::Protobuf.MessageOfBullet();
            if (messageOfObjCase_ == MessageOfObjOneofCase.BulletMessage) {
              subBuilder.MergeFrom(BulletMessage);
            }
            input.ReadMessage(subBuilder);
            BulletMessage = subBuilder;
            break;
          }
          case 34: {
            global::Protobuf.MessageOfHome subBuilder = new global::Protobuf.MessageOfHome();
            if (messageOfObjCase_ == MessageOfObjOneofCase.HomeMessage) {
              subBuilder.MergeFrom(HomeMessage);
            }
            input.ReadMessage(subBuilder);
            HomeMessage = subBuilder;
            break;
          }
          case 42: {
            global::Protobuf.MessageOfResource subBuilder = new global::Protobuf.MessageOfResource();
            if (messageOfObjCase_ == MessageOfObjOneofCase.ResourceMessage) {
              subBuilder.MergeFrom(ResourceMessage);
            }
            input.ReadMessage(subBuilder);
            ResourceMessage = subBuilder;
            break;
          }
          case 50: {
            global::Protobuf.MessageOfMap subBuilder = new global::Protobuf.MessageOfMap();
            if (messageOfObjCase_ == MessageOfObjOneofCase.MapMessage) {
              subBuilder.MergeFrom(MapMessage);
            }
            input.ReadMessage(subBuilder);
            MapMessage = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Protobuf.MessageOfShip subBuilder = new global::Protobuf.MessageOfShip();
            if (messageOfObjCase_ == MessageOfObjOneofCase.ShipMessage) {
              subBuilder.MergeFrom(ShipMessage);
            }
            input.ReadMessage(subBuilder);
            ShipMessage = subBuilder;
            break;
          }
          case 18: {
            global::Protobuf.MessageOfBuilding subBuilder = new global::Protobuf.MessageOfBuilding();
            if (messageOfObjCase_ == MessageOfObjOneofCase.BuildingMessage) {
              subBuilder.MergeFrom(BuildingMessage);
            }
            input.ReadMessage(subBuilder);
            BuildingMessage = subBuilder;
            break;
          }
          case 26: {
            global::Protobuf.MessageOfBullet subBuilder = new global::Protobuf.MessageOfBullet();
            if (messageOfObjCase_ == MessageOfObjOneofCase.BulletMessage) {
              subBuilder.MergeFrom(BulletMessage);
            }
            input.ReadMessage(subBuilder);
            BulletMessage = subBuilder;
            break;
          }
          case 34: {
            global::Protobuf.MessageOfHome subBuilder = new global::Protobuf.MessageOfHome();
            if (messageOfObjCase_ == MessageOfObjOneofCase.HomeMessage) {
              subBuilder.MergeFrom(HomeMessage);
            }
            input.ReadMessage(subBuilder);
            HomeMessage = subBuilder;
            break;
          }
          case 42: {
            global::Protobuf.MessageOfResource subBuilder = new global::Protobuf.MessageOfResource();
            if (messageOfObjCase_ == MessageOfObjOneofCase.ResourceMessage) {
              subBuilder.MergeFrom(ResourceMessage);
            }
            input.ReadMessage(subBuilder);
            ResourceMessage = subBuilder;
            break;
          }
          case 50: {
            global::Protobuf.MessageOfMap subBuilder = new global::Protobuf.MessageOfMap();
            if (messageOfObjCase_ == MessageOfObjOneofCase.MapMessage) {
              subBuilder.MergeFrom(MapMessage);
            }
            input.ReadMessage(subBuilder);
            MapMessage = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MessageOfAll : pb::IMessage<MessageOfAll>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MessageOfAll> _parser = new pb::MessageParser<MessageOfAll>(() => new MessageOfAll());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageOfAll> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.Message2ClientsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfAll() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfAll(MessageOfAll other) : this() {
      gameTime_ = other.gameTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfAll Clone() {
      return new MessageOfAll(this);
    }

    /// <summary>Field number for the "game_time" field.</summary>
    public const int GameTimeFieldNumber = 1;
    private int gameTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GameTime {
      get { return gameTime_; }
      set {
        gameTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageOfAll);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageOfAll other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameTime != other.GameTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameTime != 0) hash ^= GameTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GameTime != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GameTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GameTime != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GameTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageOfAll other) {
      if (other == null) {
        return;
      }
      if (other.GameTime != 0) {
        GameTime = other.GameTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameTime = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GameTime = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MessageToClient : pb::IMessage<MessageToClient>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MessageToClient> _parser = new pb::MessageParser<MessageToClient>(() => new MessageToClient());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageToClient> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.Message2ClientsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageToClient() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageToClient(MessageToClient other) : this() {
      objMessage_ = other.objMessage_.Clone();
      gameState_ = other.gameState_;
      allMessage_ = other.allMessage_ != null ? other.allMessage_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageToClient Clone() {
      return new MessageToClient(this);
    }

    /// <summary>Field number for the "obj_message" field.</summary>
    public const int ObjMessageFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protobuf.MessageOfObj> _repeated_objMessage_codec
        = pb::FieldCodec.ForMessage(10, global::Protobuf.MessageOfObj.Parser);
    private readonly pbc::RepeatedField<global::Protobuf.MessageOfObj> objMessage_ = new pbc::RepeatedField<global::Protobuf.MessageOfObj>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protobuf.MessageOfObj> ObjMessage {
      get { return objMessage_; }
    }

    /// <summary>Field number for the "game_state" field.</summary>
    public const int GameStateFieldNumber = 2;
    private global::Protobuf.GameState gameState_ = global::Protobuf.GameState.NullGameState;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.GameState GameState {
      get { return gameState_; }
      set {
        gameState_ = value;
      }
    }

    /// <summary>Field number for the "all_message" field.</summary>
    public const int AllMessageFieldNumber = 3;
    private global::Protobuf.MessageOfAll allMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.MessageOfAll AllMessage {
      get { return allMessage_; }
      set {
        allMessage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageToClient);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageToClient other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!objMessage_.Equals(other.objMessage_)) return false;
      if (GameState != other.GameState) return false;
      if (!object.Equals(AllMessage, other.AllMessage)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= objMessage_.GetHashCode();
      if (GameState != global::Protobuf.GameState.NullGameState) hash ^= GameState.GetHashCode();
      if (allMessage_ != null) hash ^= AllMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      objMessage_.WriteTo(output, _repeated_objMessage_codec);
      if (GameState != global::Protobuf.GameState.NullGameState) {
        output.WriteRawTag(16);
        output.WriteEnum((int) GameState);
      }
      if (allMessage_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AllMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      objMessage_.WriteTo(ref output, _repeated_objMessage_codec);
      if (GameState != global::Protobuf.GameState.NullGameState) {
        output.WriteRawTag(16);
        output.WriteEnum((int) GameState);
      }
      if (allMessage_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AllMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += objMessage_.CalculateSize(_repeated_objMessage_codec);
      if (GameState != global::Protobuf.GameState.NullGameState) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameState);
      }
      if (allMessage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AllMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageToClient other) {
      if (other == null) {
        return;
      }
      objMessage_.Add(other.objMessage_);
      if (other.GameState != global::Protobuf.GameState.NullGameState) {
        GameState = other.GameState;
      }
      if (other.allMessage_ != null) {
        if (allMessage_ == null) {
          AllMessage = new global::Protobuf.MessageOfAll();
        }
        AllMessage.MergeFrom(other.AllMessage);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            objMessage_.AddEntriesFrom(input, _repeated_objMessage_codec);
            break;
          }
          case 16: {
            GameState = (global::Protobuf.GameState) input.ReadEnum();
            break;
          }
          case 26: {
            if (allMessage_ == null) {
              AllMessage = new global::Protobuf.MessageOfAll();
            }
            input.ReadMessage(AllMessage);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            objMessage_.AddEntriesFrom(ref input, _repeated_objMessage_codec);
            break;
          }
          case 16: {
            GameState = (global::Protobuf.GameState) input.ReadEnum();
            break;
          }
          case 26: {
            if (allMessage_ == null) {
              AllMessage = new global::Protobuf.MessageOfAll();
            }
            input.ReadMessage(AllMessage);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MoveRes : pb::IMessage<MoveRes>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MoveRes> _parser = new pb::MessageParser<MoveRes>(() => new MoveRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MoveRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.Message2ClientsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveRes(MoveRes other) : this() {
      actualSpeed_ = other.actualSpeed_;
      actualAngle_ = other.actualAngle_;
      actSuccess_ = other.actSuccess_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveRes Clone() {
      return new MoveRes(this);
    }

    /// <summary>Field number for the "actual_speed" field.</summary>
    public const int ActualSpeedFieldNumber = 1;
    private long actualSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ActualSpeed {
      get { return actualSpeed_; }
      set {
        actualSpeed_ = value;
      }
    }

    /// <summary>Field number for the "actual_angle" field.</summary>
    public const int ActualAngleFieldNumber = 2;
    private double actualAngle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double ActualAngle {
      get { return actualAngle_; }
      set {
        actualAngle_ = value;
      }
    }

    /// <summary>Field number for the "act_success" field.</summary>
    public const int ActSuccessFieldNumber = 3;
    private bool actSuccess_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ActSuccess {
      get { return actSuccess_; }
      set {
        actSuccess_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MoveRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MoveRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActualSpeed != other.ActualSpeed) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ActualAngle, other.ActualAngle)) return false;
      if (ActSuccess != other.ActSuccess) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActualSpeed != 0L) hash ^= ActualSpeed.GetHashCode();
      if (ActualAngle != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ActualAngle);
      if (ActSuccess != false) hash ^= ActSuccess.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ActualSpeed != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ActualSpeed);
      }
      if (ActualAngle != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(ActualAngle);
      }
      if (ActSuccess != false) {
        output.WriteRawTag(24);
        output.WriteBool(ActSuccess);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ActualSpeed != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ActualSpeed);
      }
      if (ActualAngle != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(ActualAngle);
      }
      if (ActSuccess != false) {
        output.WriteRawTag(24);
        output.WriteBool(ActSuccess);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActualSpeed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ActualSpeed);
      }
      if (ActualAngle != 0D) {
        size += 1 + 8;
      }
      if (ActSuccess != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MoveRes other) {
      if (other == null) {
        return;
      }
      if (other.ActualSpeed != 0L) {
        ActualSpeed = other.ActualSpeed;
      }
      if (other.ActualAngle != 0D) {
        ActualAngle = other.ActualAngle;
      }
      if (other.ActSuccess != false) {
        ActSuccess = other.ActSuccess;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ActualSpeed = input.ReadInt64();
            break;
          }
          case 17: {
            ActualAngle = input.ReadDouble();
            break;
          }
          case 24: {
            ActSuccess = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ActualSpeed = input.ReadInt64();
            break;
          }
          case 17: {
            ActualAngle = input.ReadDouble();
            break;
          }
          case 24: {
            ActSuccess = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BoolRes : pb::IMessage<BoolRes>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BoolRes> _parser = new pb::MessageParser<BoolRes>(() => new BoolRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BoolRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.Message2ClientsReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolRes(BoolRes other) : this() {
      actSuccess_ = other.actSuccess_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolRes Clone() {
      return new BoolRes(this);
    }

    /// <summary>Field number for the "act_success" field.</summary>
    public const int ActSuccessFieldNumber = 1;
    private bool actSuccess_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ActSuccess {
      get { return actSuccess_; }
      set {
        actSuccess_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BoolRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BoolRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActSuccess != other.ActSuccess) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActSuccess != false) hash ^= ActSuccess.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ActSuccess != false) {
        output.WriteRawTag(8);
        output.WriteBool(ActSuccess);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ActSuccess != false) {
        output.WriteRawTag(8);
        output.WriteBool(ActSuccess);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActSuccess != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BoolRes other) {
      if (other == null) {
        return;
      }
      if (other.ActSuccess != false) {
        ActSuccess = other.ActSuccess;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ActSuccess = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ActSuccess = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
